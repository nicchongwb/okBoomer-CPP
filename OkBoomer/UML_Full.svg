<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2168px" preserveAspectRatio="none" style="width:3492px;height:2168px;" version="1.1" viewBox="0 0 3492 2168" width="3492px" zoomAndPan="magnify"><defs><filter height="300%" id="f1dz1wvx1av7t9" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[2a013135f1f90689be40a3c084fed702]
cluster entities--><polygon fill="#FFFFFF" filter="url(#f1dz1wvx1av7t9)" points="634.45,517,693.45,517,700.45,540.6094,1290.45,540.6094,1290.45,742,634.45,742,634.45,517" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="634.45" x2="700.45" y1="540.6094" y2="540.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="53" x="638.45" y="533.5332">entities</text><!--MD5=[1cda01132c61fe02d01ee0e1238bf64b]
cluster entities.items--><polygon fill="#FFFFFF" filter="url(#f1dz1wvx1av7t9)" points="319.45,773,420.45,773,427.45,796.6094,986.45,796.6094,986.45,1417,319.45,1417,319.45,773" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="319.45" x2="427.45" y1="796.6094" y2="796.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="95" x="323.45" y="789.5332">entities.items</text><!--MD5=[b47934f7eddf50b05bebba079a2d5c33]
cluster entities.creatures--><polygon fill="#FFFFFF" filter="url(#f1dz1wvx1av7t9)" points="1032.45,766,1163.45,766,1170.45,789.6094,1362.45,789.6094,1362.45,1569,1032.45,1569,1032.45,766" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1032.45" x2="1170.45" y1="789.6094" y2="789.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="125" x="1036.45" y="782.5332">entities.creatures</text><!--MD5=[67f236fd0af0b11b2ef5a832d8415319]
cluster gfx--><polygon fill="#FFFFFF" filter="url(#f1dz1wvx1av7t9)" points="70.45,1593,98.45,1593,105.45,1616.6094,1558.45,1616.6094,1558.45,2161,70.45,2161,70.45,1593" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="70.45" x2="105.45" y1="1616.6094" y2="1616.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="22" x="74.45" y="1609.5332">gfx</text><!--MD5=[38fe1c859229b9f23ba24ebfd54228a3]
cluster world--><polygon fill="#FFFFFF" filter="url(#f1dz1wvx1av7t9)" points="1582.45,130.5,1627.45,130.5,1634.45,154.1094,2484.45,154.1094,2484.45,1824.5,1582.45,1824.5,1582.45,130.5" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1582.45" x2="1634.45" y1="154.1094" y2="154.1094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="39" x="1586.45" y="147.0332">world</text><!--MD5=[61ef0e7cedb036059990bfe942fe9360]
cluster states--><polygon fill="#FFFFFF" filter="url(#f1dz1wvx1av7t9)" points="2508.45,6,2557.45,6,2564.45,29.6094,3027.45,29.6094,3027.45,493,2508.45,493,2508.45,6" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="2508.45" x2="2564.45" y1="29.6094" y2="29.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="43" x="2512.45" y="22.5332">states</text><!--MD5=[e25d2abf3c472b89b03b52c7e4262e29]
cluster interfaces--><polygon fill="#FFFFFF" filter="url(#f1dz1wvx1av7t9)" points="3051.45,116.5,3128.45,116.5,3135.45,140.1094,3475.45,140.1094,3475.45,382.5,3051.45,382.5,3051.45,116.5" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="3051.45" x2="3135.45" y1="140.1094" y2="140.1094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="71" x="3055.45" y="133.0332">interfaces</text><!--MD5=[c52f45833d539af9e29a9d34b8b7302b]
cluster utils--><polygon fill="#FFFFFF" filter="url(#f1dz1wvx1av7t9)" points="847.45,123.5,883.45,123.5,890.45,147.1094,1535.45,147.1094,1535.45,375.5,847.45,375.5,847.45,123.5" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="847.45" x2="890.45" y1="147.1094" y2="147.1094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="851.45" y="140.0332">utils</text><!--MD5=[6ea7ee656260804a75c4cf9e9f7baa9f]
class entities.Entity--><rect codeLine="2" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="172.5234" id="entities.Entity" style="stroke:#A80036;stroke-width:1.5;" width="153" x="1120.95" y="553"/><ellipse cx="1178.2" cy="569" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1179.95,570.5 L1176.6531,570.5 L1176.2156,571.5 L1176.2156,571.5 L1176.6844,571.5 L1177.2,572.125 L1177.2,572.5 L1177.2,572.875 L1176.6844,573.5 L1176.2156,573.5 L1174.325,573.5 L1173.7156,573.5 L1173.2,572.875 L1173.2,572.5 L1173.2,572.125 L1173.7156,571.5 L1174.325,571.5 L1176.6375,565.5 L1175.7625,565.5 L1174.7156,565.5 L1174.2,564.875 L1174.2,564.5 L1174.2,564.125 L1174.7156,563.5 L1175.7625,563.5 L1179.4344,563.5 L1182.1219,571.5 L1182.6844,571.5 L1182.6844,571.5 L1183.2,572.125 L1183.2,572.5 L1183.2,572.875 L1182.6844,573.5 L1182.1219,573.5 L1180.2313,573.5 L1179.7156,573.5 L1179.2,572.875 L1179.2,572.5 L1179.2,572.125 L1179.7156,571.5 L1180.2313,571.5 L1180.2313,571.5 L1179.95,570.5 Z M1179.4031,568.5 L1178.2,564.9219 L1177.1688,568.5 L1179.4031,568.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="30" x="1198.7" y="573.9102">Entity</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1121.95" x2="1272.95" y1="585" y2="585"/><polygon fill="none" points="1131.95,591,1135.95,595,1131.95,599,1127.95,595" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="1140.95" y="600.4189">m_Flip : SDL_RendererFlip</text><polygon fill="none" points="1131.95,604.8359,1135.95,608.8359,1131.95,612.8359,1127.95,608.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="1140.95" y="614.2549">m_Transform : Transform*</text><polygon fill="none" points="1131.95,618.6719,1135.95,622.6719,1131.95,626.6719,1127.95,622.6719" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="1140.95" y="628.0908">m_Height : int</text><polygon fill="none" points="1131.95,632.5078,1135.95,636.5078,1131.95,640.5078,1127.95,636.5078" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="1140.95" y="641.9268">m_Width : int</text><polygon fill="none" points="1131.95,646.3438,1135.95,650.3438,1131.95,654.3438,1127.95,650.3438" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="1140.95" y="655.7627">m_TextureID : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1121.95" x2="1272.95" y1="662.1797" y2="662.1797"/><ellipse cx="1131.95" cy="673.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="1140.95" y="677.5986">Entity(Properties* props)</text><ellipse cx="1131.95" cy="687.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="66" x="1140.95" y="691.4346">Clean() : void</text><ellipse cx="1131.95" cy="700.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="62" x="1140.95" y="705.2705">Draw() : void</text><ellipse cx="1131.95" cy="714.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="104" x="1140.95" y="719.1064">Update(float dt) : void</text><!--MD5=[70e37a7b411d2923c69276d426f1144b]
class entities.Properties--><rect codeLine="206" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="172.5234" id="entities.Properties" style="stroke:#A80036;stroke-width:1.5;" width="435" x="650.95" y="553"/><ellipse cx="835.7" cy="569" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M837.7,565.5 Q837.9031,565 838.1375,564.75 Q838.3719,564.5 838.6375,564.5 Q839.1062,564.5 839.4031,564.7813 Q839.7,565.0625 839.7,565.7188 L839.7,567.2813 Q839.7,567.9375 839.4187,568.2188 Q839.1375,568.5 838.7,568.5 Q838.3094,568.5 838.0594,568.3281 Q837.8094,568.1563 837.7,567.7031 Q837.6531,567.3906 837.4812,567.2188 Q837.1687,566.8906 836.6062,566.7031 Q836.0437,566.5 835.4812,566.5 Q834.7781,566.5 834.1844,566.7813 Q833.6062,567.0625 833.1531,567.6875 Q832.7,568.3125 832.7,569.1719 L832.7,570.0938 Q832.7,571.125 833.5437,571.8125 Q834.3875,572.5 835.8875,572.5 Q836.7781,572.5 837.4031,572.2969 Q837.7625,572.1875 838.1687,571.8281 Q838.4344,571.625 838.575,571.5625 Q838.7156,571.5 838.8875,571.5 Q839.2156,571.5 839.45,571.7656 Q839.7,572.0156 839.7,572.375 Q839.7,572.7188 839.3562,573.125 Q838.8562,573.7188 838.0594,574.0469 Q837.0125,574.5 835.7312,574.5 Q834.2312,574.5 833.0281,573.9063 Q832.0594,573.4375 831.3719,572.4219 Q830.7,571.4063 830.7,570.2031 L830.7,569.1094 Q830.7,567.8594 831.2937,566.7656 Q831.9031,565.6719 832.95,565.0938 Q834.0125,564.5 835.2,564.5 Q835.9187,564.5 836.5437,564.75 Q837.1687,565 837.7,565.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="57" x="856.2" y="573.9102">Properties</text><line style="stroke:#A80036;stroke-width:1.5;" x1="651.95" x2="1084.95" y1="585" y2="585"/><ellipse cx="661.95" cy="596" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="670.95" y="600.4189">Flip : SDL_RendererFlip</text><ellipse cx="661.95" cy="609.8359" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="670.95" y="614.2549">Height : int</text><ellipse cx="661.95" cy="623.6719" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="49" x="670.95" y="628.0908">PrevX : int</text><ellipse cx="661.95" cy="637.5078" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="670.95" y="641.9268">PrevY : int</text><ellipse cx="661.95" cy="651.3438" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="47" x="670.95" y="655.7627">Width : int</text><ellipse cx="661.95" cy="665.1797" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="27" x="670.95" y="669.5986">X : int</text><ellipse cx="661.95" cy="679.0156" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="28" x="670.95" y="683.4346">Y : int</text><ellipse cx="661.95" cy="692.8516" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="670.95" y="697.2705">TextureID : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="651.95" x2="1084.95" y1="703.6875" y2="703.6875"/><ellipse cx="661.95" cy="714.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="409" x="670.95" y="719.1064">Properties(std::string textureID, int x, int y, int width, int height, SDL_RendererFlip flip)</text><!--MD5=[940610cbb1f849f08cd09d0d13097334]
class entities.items.Item--><rect codeLine="14" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="131.0156" id="entities.items.Item" style="stroke:#A80036;stroke-width:1.5;" width="137" x="758.95" y="809"/><ellipse cx="810.7" cy="825" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M812.45,826.5 L809.1531,826.5 L808.7156,827.5 L808.7156,827.5 L809.1844,827.5 L809.7,828.125 L809.7,828.5 L809.7,828.875 L809.1844,829.5 L808.7156,829.5 L806.825,829.5 L806.2156,829.5 L805.7,828.875 L805.7,828.5 L805.7,828.125 L806.2156,827.5 L806.825,827.5 L809.1375,821.5 L808.2625,821.5 L807.2156,821.5 L806.7,820.875 L806.7,820.5 L806.7,820.125 L807.2156,819.5 L808.2625,819.5 L811.9344,819.5 L814.6219,827.5 L815.1844,827.5 L815.1844,827.5 L815.7,828.125 L815.7,828.5 L815.7,828.875 L815.1844,829.5 L814.6219,829.5 L812.7312,829.5 L812.2156,829.5 L811.7,828.875 L811.7,828.5 L811.7,828.125 L812.2156,827.5 L812.7312,827.5 L812.7312,827.5 L812.45,826.5 Z M811.9031,824.5 L810.7,820.9219 L809.6687,824.5 L811.9031,824.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="25" x="831.2" y="829.9102">Item</text><line style="stroke:#A80036;stroke-width:1.5;" x1="759.95" x2="894.95" y1="841" y2="841"/><line style="stroke:#A80036;stroke-width:1.5;" x1="759.95" x2="894.95" y1="849" y2="849"/><ellipse cx="769.95" cy="860" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="778.95" y="864.4189">Item(Properties* props)</text><ellipse cx="769.95" cy="873.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="69" x="778.95" y="878.2549">getItemX() : int</text><ellipse cx="769.95" cy="887.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="70" x="778.95" y="892.0908">getItemY() : int</text><ellipse cx="769.95" cy="901.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="66" x="778.95" y="905.9268">Clean() : void</text><ellipse cx="769.95" cy="915.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="62" x="778.95" y="919.7627">Draw() : void</text><ellipse cx="769.95" cy="929.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="104" x="778.95" y="933.5986">Update(float dt) : void</text><!--MD5=[20708c2183c059c6e7611171a8a57f32]
class entities.items.BombCollectable--><rect codeLine="23" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="172.5234" id="entities.items.BombCollectable" style="stroke:#A80036;stroke-width:1.5;" width="314" x="335.45" y="1193.5"/><ellipse cx="440.7" cy="1209.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M442.7,1206 Q442.9031,1205.5 443.1375,1205.25 Q443.3719,1205 443.6375,1205 Q444.1063,1205 444.4031,1205.2813 Q444.7,1205.5625 444.7,1206.2188 L444.7,1207.7813 Q444.7,1208.4375 444.4188,1208.7188 Q444.1375,1209 443.7,1209 Q443.3094,1209 443.0594,1208.8281 Q442.8094,1208.6563 442.7,1208.2031 Q442.6531,1207.8906 442.4813,1207.7188 Q442.1688,1207.3906 441.6063,1207.2031 Q441.0438,1207 440.4813,1207 Q439.7781,1207 439.1844,1207.2813 Q438.6063,1207.5625 438.1531,1208.1875 Q437.7,1208.8125 437.7,1209.6719 L437.7,1210.5938 Q437.7,1211.625 438.5438,1212.3125 Q439.3875,1213 440.8875,1213 Q441.7781,1213 442.4031,1212.7969 Q442.7625,1212.6875 443.1688,1212.3281 Q443.4344,1212.125 443.575,1212.0625 Q443.7156,1212 443.8875,1212 Q444.2156,1212 444.45,1212.2656 Q444.7,1212.5156 444.7,1212.875 Q444.7,1213.2188 444.3563,1213.625 Q443.8563,1214.2188 443.0594,1214.5469 Q442.0125,1215 440.7313,1215 Q439.2313,1215 438.0281,1214.4063 Q437.0594,1213.9375 436.3719,1212.9219 Q435.7,1211.9063 435.7,1210.7031 L435.7,1209.6094 Q435.7,1208.3594 436.2938,1207.2656 Q436.9031,1206.1719 437.95,1205.5938 Q439.0125,1205 440.2,1205 Q440.9188,1205 441.5438,1205.25 Q442.1688,1205.5 442.7,1206 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="95" x="461.2" y="1214.4102">BombCollectable</text><line style="stroke:#A80036;stroke-width:1.5;" x1="336.45" x2="648.45" y1="1225.5" y2="1225.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="343.45" y="1233.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="355.45" y="1240.9189">m_BombItemTextureM : TextureManager*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="343.45" y="1247.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="355.45" y="1254.7549">m_ItemBombID : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="343.45" y="1261.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="135" x="355.45" y="1268.5908">m_NumBombsSpawned : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="343.45" y="1275.0078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="355.45" y="1282.4268">s_BombsSpawnedList : std::vector&lt;BombCollectable&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="336.45" x2="648.45" y1="1288.8438" y2="1288.8438"/><ellipse cx="346.45" cy="1299.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="171" x="355.45" y="1304.2627">BombCollectable(Properties* props)</text><ellipse cx="346.45" cy="1313.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="355.45" y="1318.0986">getListOfSpawnedBombs() : std::vector&lt;BombCollectable&gt;*</text><ellipse cx="346.45" cy="1327.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="355.45" y="1331.9346">Clean() : void</text><ellipse cx="346.45" cy="1341.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="355.45" y="1345.7705">Draw() : void</text><ellipse cx="346.45" cy="1355.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="355.45" y="1359.6064">Update(float dt) : void</text><!--MD5=[165d5a49fb56ee5d873275063b7611fd]
class entities.items.BombPlanted--><rect codeLine="36" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="241.7031" id="entities.items.BombPlanted" style="stroke:#A80036;stroke-width:1.5;" width="285" x="684.95" y="1159"/><ellipse cx="785.7" cy="1175" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M787.7,1171.5 Q787.9031,1171 788.1375,1170.75 Q788.3719,1170.5 788.6375,1170.5 Q789.1062,1170.5 789.4031,1170.7813 Q789.7,1171.0625 789.7,1171.7188 L789.7,1173.2813 Q789.7,1173.9375 789.4187,1174.2188 Q789.1375,1174.5 788.7,1174.5 Q788.3094,1174.5 788.0594,1174.3281 Q787.8094,1174.1563 787.7,1173.7031 Q787.6531,1173.3906 787.4812,1173.2188 Q787.1687,1172.8906 786.6062,1172.7031 Q786.0437,1172.5 785.4812,1172.5 Q784.7781,1172.5 784.1844,1172.7813 Q783.6062,1173.0625 783.1531,1173.6875 Q782.7,1174.3125 782.7,1175.1719 L782.7,1176.0938 Q782.7,1177.125 783.5437,1177.8125 Q784.3875,1178.5 785.8875,1178.5 Q786.7781,1178.5 787.4031,1178.2969 Q787.7625,1178.1875 788.1687,1177.8281 Q788.4344,1177.625 788.575,1177.5625 Q788.7156,1177.5 788.8875,1177.5 Q789.2156,1177.5 789.45,1177.7656 Q789.7,1178.0156 789.7,1178.375 Q789.7,1178.7188 789.3562,1179.125 Q788.8562,1179.7188 788.0594,1180.0469 Q787.0125,1180.5 785.7312,1180.5 Q784.2312,1180.5 783.0281,1179.9063 Q782.0594,1179.4375 781.3719,1178.4219 Q780.7,1177.4063 780.7,1176.2031 L780.7,1175.1094 Q780.7,1173.8594 781.2937,1172.7656 Q781.9031,1171.6719 782.95,1171.0938 Q784.0125,1170.5 785.2,1170.5 Q785.9187,1170.5 786.5437,1170.75 Q787.1687,1171 787.7,1171.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="75" x="806.2" y="1179.9102">BombPlanted</text><line style="stroke:#A80036;stroke-width:1.5;" x1="685.95" x2="968.95" y1="1191" y2="1191"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="692.95" y="1199"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="704.95" y="1206.4189">m_BombAnimation : Animation*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="692.95" y="1212.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="189" x="704.95" y="1220.2549">m_PlantedBombTexture : SDL_Texture*</text><ellipse cx="695.95" cy="1229.6719" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="704.95" y="1234.0908">m_countDown : bool</text><ellipse cx="695.95" cy="1243.5078" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="704.95" y="1247.9268">m_isBombPlanted : bool</text><ellipse cx="695.95" cy="1257.3438" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="704.95" y="1261.7627">m_start : long</text><ellipse cx="695.95" cy="1271.1797" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="96" x="704.95" y="1275.5986">s_bombID : static int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="692.95" y="1282.0156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="704.95" y="1289.4346">textureName : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="692.95" y="1295.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="704.95" y="1303.2705">s_PlantedBombList : std::vector&lt;BombPlanted&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="685.95" x2="968.95" y1="1309.6875" y2="1309.6875"/><ellipse cx="695.95" cy="1320.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="704.95" y="1325.1064">BombPlanted(Properties* props)</text><ellipse cx="695.95" cy="1334.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="208" x="704.95" y="1338.9424">GetBombPlantedTextureName() : std::string</text><ellipse cx="695.95" cy="1348.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="704.95" y="1352.7783">getListOfPlantedBombs() : std::vector&lt;BombPlanted&gt;*</text><ellipse cx="695.95" cy="1362.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="704.95" y="1366.6143">Clean() : void</text><ellipse cx="695.95" cy="1376.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="704.95" y="1380.4502">Draw() : void</text><ellipse cx="695.95" cy="1389.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="704.95" y="1394.2861">Update(float dt) : void</text><!--MD5=[fff4fbefb74200d5cc792fdc24d62f59]
class entities.creatures.Creature--><rect codeLine="54" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="144.8516" id="entities.creatures.Creature" style="stroke:#A80036;stroke-width:1.5;" width="160" x="1117.45" y="802"/><ellipse cx="1169.2" cy="818" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1170.95,819.5 L1167.6531,819.5 L1167.2156,820.5 L1167.2156,820.5 L1167.6844,820.5 L1168.2,821.125 L1168.2,821.5 L1168.2,821.875 L1167.6844,822.5 L1167.2156,822.5 L1165.325,822.5 L1164.7156,822.5 L1164.2,821.875 L1164.2,821.5 L1164.2,821.125 L1164.7156,820.5 L1165.325,820.5 L1167.6375,814.5 L1166.7625,814.5 L1165.7156,814.5 L1165.2,813.875 L1165.2,813.5 L1165.2,813.125 L1165.7156,812.5 L1166.7625,812.5 L1170.4344,812.5 L1173.1219,820.5 L1173.6844,820.5 L1173.6844,820.5 L1174.2,821.125 L1174.2,821.5 L1174.2,821.875 L1173.6844,822.5 L1173.1219,822.5 L1171.2313,822.5 L1170.7156,822.5 L1170.2,821.875 L1170.2,821.5 L1170.2,821.125 L1170.7156,820.5 L1171.2313,820.5 L1171.2313,820.5 L1170.95,819.5 Z M1170.4031,817.5 L1169.2,813.9219 L1168.1688,817.5 L1170.4031,817.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="48" x="1189.7" y="822.9102">Creature</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1118.45" x2="1276.45" y1="834" y2="834"/><polygon fill="none" points="1128.45,840,1132.45,844,1128.45,848,1124.45,844" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="1137.45" y="849.4189">m_Health : int</text><polygon fill="none" points="1128.45,853.8359,1132.45,857.8359,1128.45,861.8359,1124.45,857.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="1137.45" y="863.2549">m_Speed : int</text><polygon fill="none" points="1128.45,867.6719,1132.45,871.6719,1128.45,875.6719,1124.45,871.6719" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="1137.45" y="877.0908">m_Name : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1118.45" x2="1276.45" y1="883.5078" y2="883.5078"/><ellipse cx="1128.45" cy="894.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="1137.45" y="898.9268">Creature(Properties* props)</text><ellipse cx="1128.45" cy="908.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="66" x="1137.45" y="912.7627">Clean() : void</text><ellipse cx="1128.45" cy="922.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="62" x="1137.45" y="926.5986">Draw() : void</text><ellipse cx="1128.45" cy="936.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="104" x="1137.45" y="940.4346">Update(float dt) : void</text><!--MD5=[79e611175aab30d878e28b1060269c5b]
class entities.creatures.Player--><rect codeLine="64" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="546.0938" id="entities.creatures.Player" style="stroke:#A80036;stroke-width:1.5;" width="298" x="1048.45" y="1007"/><ellipse cx="1176.2" cy="1023" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1178.2,1019.5 Q1178.4031,1019 1178.6375,1018.75 Q1178.8719,1018.5 1179.1375,1018.5 Q1179.6063,1018.5 1179.9031,1018.7813 Q1180.2,1019.0625 1180.2,1019.7188 L1180.2,1021.2813 Q1180.2,1021.9375 1179.9188,1022.2188 Q1179.6375,1022.5 1179.2,1022.5 Q1178.8094,1022.5 1178.5594,1022.3281 Q1178.3094,1022.1563 1178.2,1021.7031 Q1178.1531,1021.3906 1177.9813,1021.2188 Q1177.6688,1020.8906 1177.1063,1020.7031 Q1176.5438,1020.5 1175.9813,1020.5 Q1175.2781,1020.5 1174.6844,1020.7813 Q1174.1063,1021.0625 1173.6531,1021.6875 Q1173.2,1022.3125 1173.2,1023.1719 L1173.2,1024.0938 Q1173.2,1025.125 1174.0438,1025.8125 Q1174.8875,1026.5 1176.3875,1026.5 Q1177.2781,1026.5 1177.9031,1026.2969 Q1178.2625,1026.1875 1178.6688,1025.8281 Q1178.9344,1025.625 1179.075,1025.5625 Q1179.2156,1025.5 1179.3875,1025.5 Q1179.7156,1025.5 1179.95,1025.7656 Q1180.2,1026.0156 1180.2,1026.375 Q1180.2,1026.7188 1179.8563,1027.125 Q1179.3563,1027.7188 1178.5594,1028.0469 Q1177.5125,1028.5 1176.2313,1028.5 Q1174.7313,1028.5 1173.5281,1027.9063 Q1172.5594,1027.4375 1171.8719,1026.4219 Q1171.2,1025.4063 1171.2,1024.2031 L1171.2,1023.1094 Q1171.2,1021.8594 1171.7938,1020.7656 Q1172.4031,1019.6719 1173.45,1019.0938 Q1174.5125,1018.5 1175.7,1018.5 Q1176.4188,1018.5 1177.0438,1018.75 Q1177.6688,1019 1178.2,1019.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="34" x="1196.7" y="1027.9102">Player</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1049.45" x2="1345.45" y1="1039" y2="1039"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1056.45" y="1047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="1068.45" y="1054.4189">m_Animation : Animation*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1056.45" y="1060.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="1068.45" y="1068.2549">m_DrawManager : DrawManager*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1056.45" y="1074.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="1068.45" y="1082.0908">m_bombPlaced : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1056.45" y="1088.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="1068.45" y="1095.9268">m_getBombed : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1056.45" y="1102.3438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="1068.45" y="1109.7627">m_putBomb : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1056.45" y="1116.1797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="1068.45" y="1123.5986">m_Health : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1056.45" y="1130.0156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="1068.45" y="1137.4346">m_Speed : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1056.45" y="1143.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="1068.45" y="1151.2705">m_bombCollectable : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1056.45" y="1157.6875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="81" x="1068.45" y="1165.1064">m_bombHeld : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1056.45" y="1171.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="1068.45" y="1178.9424">m_bombx : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1056.45" y="1185.3594"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="1068.45" y="1192.7783">m_bomby : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1056.45" y="1199.1953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="48" x="1068.45" y="1206.6143">m_pid : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1056.45" y="1213.0313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="49" x="1068.45" y="1220.4502">newX : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1056.45" y="1226.8672"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="1068.45" y="1234.2861">newY : int</text><ellipse cx="1059.45" cy="1243.7031" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="136" x="1068.45" y="1248.1221">s_AlrPressedP1 : static bool</text><ellipse cx="1059.45" cy="1257.5391" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="136" x="1068.45" y="1261.958">s_AlrPressedP2 : static bool</text><ellipse cx="1059.45" cy="1271.375" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="125" x="1068.45" y="1275.7939">s_countdown : static bool</text><ellipse cx="1059.45" cy="1285.2109" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="119" x="1068.45" y="1289.6299">s_PlayerCount : static int</text><ellipse cx="1059.45" cy="1299.0469" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="103" x="1068.45" y="1303.4658">s_p1facing : static int</text><ellipse cx="1059.45" cy="1312.8828" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="103" x="1068.45" y="1317.3018">s_p2facing : static int</text><ellipse cx="1059.45" cy="1326.7188" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="92" x="1068.45" y="1331.1377">s_start : static long</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1049.45" x2="1345.45" y1="1337.5547" y2="1337.5547"/><ellipse cx="1059.45" cy="1348.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="1068.45" y="1352.9736">Player(Properties* props)</text><ellipse cx="1059.45" cy="1362.3906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="1068.45" y="1366.8096">GetBomb() : int</text><ellipse cx="1059.45" cy="1376.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="1068.45" y="1380.6455">GetBombCol() : int</text><ellipse cx="1059.45" cy="1390.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="75" x="1068.45" y="1394.4814">GetHealth() : int</text><ellipse cx="1059.45" cy="1403.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="1068.45" y="1408.3174">Clean() : void</text><ellipse cx="1059.45" cy="1417.7344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="1068.45" y="1422.1533">Draw() : void</text><ellipse cx="1059.45" cy="1431.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="1068.45" y="1435.9893">GetInput() : void</text><ellipse cx="1059.45" cy="1445.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="1068.45" y="1449.8252">Update(float dt) : void</text><ellipse cx="1059.45" cy="1459.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="1068.45" y="1463.6611">bombCountdown() : void</text><ellipse cx="1059.45" cy="1473.0781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="1068.45" y="1477.4971">collectBomb() : void</text><ellipse cx="1059.45" cy="1486.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="138" x="1068.45" y="1491.333">getBombedAnimation() : void</text><ellipse cx="1059.45" cy="1500.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="135" x="1068.45" y="1505.1689">getCurrentAnimation() : void</text><ellipse cx="1059.45" cy="1514.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="1068.45" y="1519.0049">placeBombCountdown(BombPlanted bombPlanted) : void</text><ellipse cx="1059.45" cy="1528.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="1068.45" y="1532.8408">plantBomb() : void</text><ellipse cx="1059.45" cy="1542.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="1068.45" y="1546.6768">takeDamage() : void</text><!--MD5=[31b39ed9b6cb36778e2b2be9841862c5]
class gfx.Animation--><rect codeLine="103" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="200.1953" id="gfx.Animation" style="stroke:#A80036;stroke-width:1.5;" width="613" x="520.95" y="1629"/><ellipse cx="795.7" cy="1645" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M797.7,1641.5 Q797.9031,1641 798.1375,1640.75 Q798.3719,1640.5 798.6375,1640.5 Q799.1062,1640.5 799.4031,1640.7813 Q799.7,1641.0625 799.7,1641.7188 L799.7,1643.2813 Q799.7,1643.9375 799.4187,1644.2188 Q799.1375,1644.5 798.7,1644.5 Q798.3094,1644.5 798.0594,1644.3281 Q797.8094,1644.1563 797.7,1643.7031 Q797.6531,1643.3906 797.4812,1643.2188 Q797.1687,1642.8906 796.6062,1642.7031 Q796.0437,1642.5 795.4812,1642.5 Q794.7781,1642.5 794.1844,1642.7813 Q793.6062,1643.0625 793.1531,1643.6875 Q792.7,1644.3125 792.7,1645.1719 L792.7,1646.0938 Q792.7,1647.125 793.5437,1647.8125 Q794.3875,1648.5 795.8875,1648.5 Q796.7781,1648.5 797.4031,1648.2969 Q797.7625,1648.1875 798.1687,1647.8281 Q798.4344,1647.625 798.575,1647.5625 Q798.7156,1647.5 798.8875,1647.5 Q799.2156,1647.5 799.45,1647.7656 Q799.7,1648.0156 799.7,1648.375 Q799.7,1648.7188 799.3562,1649.125 Q798.8562,1649.7188 798.0594,1650.0469 Q797.0125,1650.5 795.7312,1650.5 Q794.2312,1650.5 793.0281,1649.9063 Q792.0594,1649.4375 791.3719,1648.4219 Q790.7,1647.4063 790.7,1646.2031 L790.7,1645.1094 Q790.7,1643.8594 791.2937,1642.7656 Q791.9031,1641.6719 792.95,1641.0938 Q794.0125,1640.5 795.2,1640.5 Q795.9187,1640.5 796.5437,1640.75 Q797.1687,1641 797.7,1641.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="55" x="816.2" y="1649.9102">Animation</text><line style="stroke:#A80036;stroke-width:1.5;" x1="521.95" x2="1132.95" y1="1661" y2="1661"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="528.95" y="1669"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="540.95" y="1676.4189">m_Flip : SDL_RendererFlip</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="528.95" y="1682.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="540.95" y="1690.2549">m_AnimSpeed : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="528.95" y="1696.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="540.95" y="1704.0908">m_FrameCount : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="528.95" y="1710.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="540.95" y="1717.9268">m_SpriteCol : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="528.95" y="1724.3438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="540.95" y="1731.7627">m_SpriteFrame : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="528.95" y="1738.1797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="540.95" y="1745.5986">m_SpriteRow : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="528.95" y="1752.0156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="540.95" y="1759.4346">m_TextureID : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="521.95" x2="1132.95" y1="1765.8516" y2="1765.8516"/><ellipse cx="531.95" cy="1776.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="55" x="540.95" y="1781.2705">Animation()</text><ellipse cx="531.95" cy="1790.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="540.95" y="1795.1064">Draw(float x, float y, int spriteWidth, int spriteHeight) : void</text><ellipse cx="531.95" cy="1804.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="587" x="540.95" y="1808.9424">SetProperties(std::string textureID, int spriteRow, int spriteCol, int frameCount, int animSpeed, SDL_RendererFlip flip) : void</text><ellipse cx="531.95" cy="1818.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="540.95" y="1822.7783">Update() : void</text><!--MD5=[61c3fa5585ca85434ecfc87dbde0af51]
class gfx.DrawManager--><rect codeLine="118" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="172.5234" id="gfx.DrawManager" style="stroke:#A80036;stroke-width:1.5;" width="174" x="1169.45" y="1642.5"/><ellipse cx="1213.7" cy="1658.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1215.7,1655 Q1215.9031,1654.5 1216.1375,1654.25 Q1216.3719,1654 1216.6375,1654 Q1217.1063,1654 1217.4031,1654.2813 Q1217.7,1654.5625 1217.7,1655.2188 L1217.7,1656.7813 Q1217.7,1657.4375 1217.4188,1657.7188 Q1217.1375,1658 1216.7,1658 Q1216.3094,1658 1216.0594,1657.8281 Q1215.8094,1657.6563 1215.7,1657.2031 Q1215.6531,1656.8906 1215.4813,1656.7188 Q1215.1688,1656.3906 1214.6063,1656.2031 Q1214.0438,1656 1213.4813,1656 Q1212.7781,1656 1212.1844,1656.2813 Q1211.6063,1656.5625 1211.1531,1657.1875 Q1210.7,1657.8125 1210.7,1658.6719 L1210.7,1659.5938 Q1210.7,1660.625 1211.5438,1661.3125 Q1212.3875,1662 1213.8875,1662 Q1214.7781,1662 1215.4031,1661.7969 Q1215.7625,1661.6875 1216.1688,1661.3281 Q1216.4344,1661.125 1216.575,1661.0625 Q1216.7156,1661 1216.8875,1661 Q1217.2156,1661 1217.45,1661.2656 Q1217.7,1661.5156 1217.7,1661.875 Q1217.7,1662.2188 1217.3563,1662.625 Q1216.8563,1663.2188 1216.0594,1663.5469 Q1215.0125,1664 1213.7313,1664 Q1212.2313,1664 1211.0281,1663.4063 Q1210.0594,1662.9375 1209.3719,1661.9219 Q1208.7,1660.9063 1208.7,1659.7031 L1208.7,1658.6094 Q1208.7,1657.3594 1209.2938,1656.2656 Q1209.9031,1655.1719 1210.95,1654.5938 Q1212.0125,1654 1213.2,1654 Q1213.9188,1654 1214.5438,1654.25 Q1215.1688,1654.5 1215.7,1655 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="77" x="1234.2" y="1663.4102">DrawManager</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1170.45" x2="1342.45" y1="1674.5" y2="1674.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1177.45" y="1682.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="1189.45" y="1689.9189">m_Force : Vector2D</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1177.45" y="1696.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="1189.45" y="1703.7549">m_Position : Vector2D</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1170.45" x2="1342.45" y1="1710.1719" y2="1710.1719"/><ellipse cx="1180.45" cy="1721.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="1189.45" y="1725.5908">DrawManager()</text><ellipse cx="1180.45" cy="1735.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="1189.45" y="1739.4268">GetPosition() : Vector2D</text><ellipse cx="1180.45" cy="1748.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="1189.45" y="1753.2627">ApplyForce(Vector2D F) : void</text><ellipse cx="1180.45" cy="1762.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="1189.45" y="1767.0986">ApplyForceX(int Fx) : void</text><ellipse cx="1180.45" cy="1776.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="1189.45" y="1780.9346">ApplyForceY(int Fy) : void</text><ellipse cx="1180.45" cy="1790.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="1189.45" y="1794.7705">UnsetForce() : void</text><ellipse cx="1180.45" cy="1804.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="1189.45" y="1808.6064">Update() : void</text><!--MD5=[15af45a6dbda0b46b9bcc7341b4758d2]
class gfx.TextureManager--><rect codeLine="167" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="255.5391" id="gfx.TextureManager" style="stroke:#A80036;stroke-width:1.5;" width="559" x="306.95" y="1889"/><ellipse cx="538.2" cy="1905" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M540.2,1901.5 Q540.4031,1901 540.6375,1900.75 Q540.8719,1900.5 541.1375,1900.5 Q541.6063,1900.5 541.9031,1900.7813 Q542.2,1901.0625 542.2,1901.7188 L542.2,1903.2813 Q542.2,1903.9375 541.9188,1904.2188 Q541.6375,1904.5 541.2,1904.5 Q540.8094,1904.5 540.5594,1904.3281 Q540.3094,1904.1563 540.2,1903.7031 Q540.1531,1903.3906 539.9813,1903.2188 Q539.6688,1902.8906 539.1063,1902.7031 Q538.5438,1902.5 537.9813,1902.5 Q537.2781,1902.5 536.6844,1902.7813 Q536.1063,1903.0625 535.6531,1903.6875 Q535.2,1904.3125 535.2,1905.1719 L535.2,1906.0938 Q535.2,1907.125 536.0438,1907.8125 Q536.8875,1908.5 538.3875,1908.5 Q539.2781,1908.5 539.9031,1908.2969 Q540.2625,1908.1875 540.6688,1907.8281 Q540.9344,1907.625 541.075,1907.5625 Q541.2156,1907.5 541.3875,1907.5 Q541.7156,1907.5 541.95,1907.7656 Q542.2,1908.0156 542.2,1908.375 Q542.2,1908.7188 541.8563,1909.125 Q541.3563,1909.7188 540.5594,1910.0469 Q539.5125,1910.5 538.2313,1910.5 Q536.7313,1910.5 535.5281,1909.9063 Q534.5594,1909.4375 533.8719,1908.4219 Q533.2,1907.4063 533.2,1906.2031 L533.2,1905.1094 Q533.2,1903.8594 533.7938,1902.7656 Q534.4031,1901.6719 535.45,1901.0938 Q536.5125,1900.5 537.7,1900.5 Q538.4188,1900.5 539.0438,1900.75 Q539.6688,1901 540.2,1901.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="88" x="558.7" y="1909.9102">TextureManager</text><line style="stroke:#A80036;stroke-width:1.5;" x1="307.95" x2="864.95" y1="1921" y2="1921"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="314.95" y="1929"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="174" x="326.95" y="1936.4189">s_Instance : static TextureManager*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="314.95" y="1942.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="254" x="326.95" y="1950.2549">m_TextureMap : std::map&lt;std::string, SDL_Texture*&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="314.95" y="1956.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="326.95" y="1964.0908">fonts : std::map&lt;std::string, TTF_Font*&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="307.95" x2="864.95" y1="1970.5078" y2="1970.5078"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="314.95" y="1978.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="326.95" y="1985.9268">TextureManager()</text><ellipse cx="317.95" cy="1995.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="326.95" y="1999.7627">GetTexture(std::string id) : SDL_Texture*</text><ellipse cx="317.95" cy="2009.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="152" x="326.95" y="2013.5986">GetFont(std::string) : TTF_Font*</text><ellipse cx="317.95" cy="2023.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="326.95" y="2027.4346">GetInstance() : TextureManager*</text><ellipse cx="317.95" cy="2036.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="326.95" y="2041.2705">Load(std::string id, std::string filename) : bool</text><ellipse cx="317.95" cy="2050.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="326.95" y="2055.1064">AddFont(std::string, std::string, int) : void</text><ellipse cx="317.95" cy="2064.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="326.95" y="2068.9424">Clean() : void</text><ellipse cx="317.95" cy="2078.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="455" x="326.95" y="2082.7783">Draw(std::string id, int x, int y, int width, int height, int row, int col, SDL_RendererFlip flip) : void</text><ellipse cx="317.95" cy="2092.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="533" x="326.95" y="2096.6143">DrawFrame(std::string id, int x, int y, int width, int height, int row, int col, int frame, SDL_RendererFlip flip) : void</text><ellipse cx="317.95" cy="2106.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="475" x="326.95" y="2110.4502">DrawIcon(std::string id, int x, int y, int width, int height, int row, int col, SDL_RendererFlip flip) : void</text><ellipse cx="317.95" cy="2119.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="472" x="326.95" y="2124.2861">DrawTile(std::string tilesetID, int tileSize, int x, int y, int row, int frame, SDL_RendererFlip flip) : void</text><ellipse cx="317.95" cy="2133.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="326.95" y="2138.1221">Drop(std::string id) : void</text><!--MD5=[4c7c7f33a1ec25f7be8040bd6777f2d6]
class gfx.Transform--><rect codeLine="186" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="144.8516" id="gfx.Transform" style="stroke:#A80036;stroke-width:1.5;" width="163" x="1378.95" y="1656.5"/><ellipse cx="1427.7" cy="1672.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1429.7,1669 Q1429.9031,1668.5 1430.1375,1668.25 Q1430.3719,1668 1430.6375,1668 Q1431.1063,1668 1431.4031,1668.2813 Q1431.7,1668.5625 1431.7,1669.2188 L1431.7,1670.7813 Q1431.7,1671.4375 1431.4188,1671.7188 Q1431.1375,1672 1430.7,1672 Q1430.3094,1672 1430.0594,1671.8281 Q1429.8094,1671.6563 1429.7,1671.2031 Q1429.6531,1670.8906 1429.4813,1670.7188 Q1429.1688,1670.3906 1428.6063,1670.2031 Q1428.0438,1670 1427.4813,1670 Q1426.7781,1670 1426.1844,1670.2813 Q1425.6063,1670.5625 1425.1531,1671.1875 Q1424.7,1671.8125 1424.7,1672.6719 L1424.7,1673.5938 Q1424.7,1674.625 1425.5438,1675.3125 Q1426.3875,1676 1427.8875,1676 Q1428.7781,1676 1429.4031,1675.7969 Q1429.7625,1675.6875 1430.1688,1675.3281 Q1430.4344,1675.125 1430.575,1675.0625 Q1430.7156,1675 1430.8875,1675 Q1431.2156,1675 1431.45,1675.2656 Q1431.7,1675.5156 1431.7,1675.875 Q1431.7,1676.2188 1431.3563,1676.625 Q1430.8563,1677.2188 1430.0594,1677.5469 Q1429.0125,1678 1427.7313,1678 Q1426.2313,1678 1425.0281,1677.4063 Q1424.0594,1676.9375 1423.3719,1675.9219 Q1422.7,1674.9063 1422.7,1673.7031 L1422.7,1672.6094 Q1422.7,1671.3594 1423.2938,1670.2656 Q1423.9031,1669.1719 1424.95,1668.5938 Q1426.0125,1668 1427.2,1668 Q1427.9188,1668 1428.5438,1668.25 Q1429.1688,1668.5 1429.7,1669 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="57" x="1448.2" y="1677.4102">Transform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1379.95" x2="1540.95" y1="1688.5" y2="1688.5"/><ellipse cx="1389.95" cy="1699.5" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="27" x="1398.95" y="1703.9189">X : int</text><ellipse cx="1389.95" cy="1713.3359" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="28" x="1398.95" y="1717.7549">Y : int</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1379.95" x2="1540.95" y1="1724.1719" y2="1724.1719"/><ellipse cx="1389.95" cy="1735.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="1398.95" y="1739.5908">Transform(int x, int y)</text><ellipse cx="1389.95" cy="1749.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="1398.95" y="1753.4268">Log(std::string msg) : void</text><ellipse cx="1389.95" cy="1762.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="137" x="1398.95" y="1767.2627">Translate(Vector2D v) : void</text><ellipse cx="1389.95" cy="1776.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="1398.95" y="1781.0986">TranslateX(int x) : void</text><ellipse cx="1389.95" cy="1790.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="1398.95" y="1794.9346">TranslateY(int y) : void</text><!--MD5=[408c1a95a6004acb5e587067bbcd0af8]
class gfx.Vector2D--><rect codeLine="197" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="131.0156" id="gfx.Vector2D" style="stroke:#A80036;stroke-width:1.5;" width="273" x="1119.95" y="1951.5"/><ellipse cx="1227.2" cy="1967.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1229.2,1964 Q1229.4031,1963.5 1229.6375,1963.25 Q1229.8719,1963 1230.1375,1963 Q1230.6063,1963 1230.9031,1963.2813 Q1231.2,1963.5625 1231.2,1964.2188 L1231.2,1965.7813 Q1231.2,1966.4375 1230.9188,1966.7188 Q1230.6375,1967 1230.2,1967 Q1229.8094,1967 1229.5594,1966.8281 Q1229.3094,1966.6563 1229.2,1966.2031 Q1229.1531,1965.8906 1228.9813,1965.7188 Q1228.6688,1965.3906 1228.1063,1965.2031 Q1227.5438,1965 1226.9813,1965 Q1226.2781,1965 1225.6844,1965.2813 Q1225.1063,1965.5625 1224.6531,1966.1875 Q1224.2,1966.8125 1224.2,1967.6719 L1224.2,1968.5938 Q1224.2,1969.625 1225.0438,1970.3125 Q1225.8875,1971 1227.3875,1971 Q1228.2781,1971 1228.9031,1970.7969 Q1229.2625,1970.6875 1229.6688,1970.3281 Q1229.9344,1970.125 1230.075,1970.0625 Q1230.2156,1970 1230.3875,1970 Q1230.7156,1970 1230.95,1970.2656 Q1231.2,1970.5156 1231.2,1970.875 Q1231.2,1971.2188 1230.8563,1971.625 Q1230.3563,1972.2188 1229.5594,1972.5469 Q1228.5125,1973 1227.2313,1973 Q1225.7313,1973 1224.5281,1972.4063 Q1223.5594,1971.9375 1222.8719,1970.9219 Q1222.2,1969.9063 1222.2,1968.7031 L1222.2,1967.6094 Q1222.2,1966.3594 1222.7938,1965.2656 Q1223.4031,1964.1719 1224.45,1963.5938 Q1225.5125,1963 1226.7,1963 Q1227.4188,1963 1228.0438,1963.25 Q1228.6688,1963.5 1229.2,1964 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="50" x="1247.7" y="1972.4102">Vector2D</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1120.95" x2="1391.95" y1="1983.5" y2="1983.5"/><ellipse cx="1130.95" cy="1994.5" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="27" x="1139.95" y="1998.9189">X : int</text><ellipse cx="1130.95" cy="2008.3359" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="28" x="1139.95" y="2012.7549">Y : int</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1120.95" x2="1391.95" y1="2019.1719" y2="2019.1719"/><ellipse cx="1130.95" cy="2030.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="1139.95" y="2034.5908">Vector2D(int x, int y)</text><ellipse cx="1130.95" cy="2044.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="247" x="1139.95" y="2048.4268">operator+(const Vector2D&amp; v2) : Vector2D {query}</text><ellipse cx="1130.95" cy="2057.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="1139.95" y="2062.2627">operator-(const Vector2D&amp; v2) : Vector2D {query}</text><ellipse cx="1130.95" cy="2071.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="1139.95" y="2076.0986">Log(std::string msg) : void</text><!--MD5=[57210c06e20415b9d54619e815cd0c71]
class gfx.UILabel--><rect codeLine="273" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="158.6875" id="gfx.UILabel" style="stroke:#A80036;stroke-width:1.5;" width="399" x="86.95" y="1649.5"/><ellipse cx="260.7" cy="1665.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M262.7,1662 Q262.9031,1661.5 263.1375,1661.25 Q263.3719,1661 263.6375,1661 Q264.1063,1661 264.4031,1661.2813 Q264.7,1661.5625 264.7,1662.2188 L264.7,1663.7813 Q264.7,1664.4375 264.4188,1664.7188 Q264.1375,1665 263.7,1665 Q263.3094,1665 263.0594,1664.8281 Q262.8094,1664.6563 262.7,1664.2031 Q262.6531,1663.8906 262.4813,1663.7188 Q262.1688,1663.3906 261.6063,1663.2031 Q261.0438,1663 260.4813,1663 Q259.7781,1663 259.1844,1663.2813 Q258.6063,1663.5625 258.1531,1664.1875 Q257.7,1664.8125 257.7,1665.6719 L257.7,1666.5938 Q257.7,1667.625 258.5438,1668.3125 Q259.3875,1669 260.8875,1669 Q261.7781,1669 262.4031,1668.7969 Q262.7625,1668.6875 263.1688,1668.3281 Q263.4344,1668.125 263.575,1668.0625 Q263.7156,1668 263.8875,1668 Q264.2156,1668 264.45,1668.2656 Q264.7,1668.5156 264.7,1668.875 Q264.7,1669.2188 264.3563,1669.625 Q263.8563,1670.2188 263.0594,1670.5469 Q262.0125,1671 260.7313,1671 Q259.2313,1671 258.0281,1670.4063 Q257.0594,1669.9375 256.3719,1668.9219 Q255.7,1667.9063 255.7,1666.7031 L255.7,1665.6094 Q255.7,1664.3594 256.2938,1663.2656 Q256.9031,1662.1719 257.95,1661.5938 Q259.0125,1661 260.2,1661 Q260.9188,1661 261.5438,1661.25 Q262.1688,1661.5 262.7,1662 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="43" x="281.2" y="1670.4102">UILabel</text><line style="stroke:#A80036;stroke-width:1.5;" x1="87.95" x2="484.95" y1="1681.5" y2="1681.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="94.95" y="1689.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="106.95" y="1696.9189">textColour : SDL_Color</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="94.95" y="1703.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="106.95" y="1710.7549">position : SDL_Rect</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="94.95" y="1717.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="135" x="106.95" y="1724.5908">labelTexture : SDL_Texture*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="94.95" y="1731.0078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="106.95" y="1738.4268">labelFont : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="94.95" y="1744.8438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="106.95" y="1752.2627">labelText : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="87.95" x2="484.95" y1="1758.6797" y2="1758.6797"/><ellipse cx="97.95" cy="1769.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="106.95" y="1774.0986">UILabel(int xpos, int ypos, std::string text, std::string font, SDL_Color&amp; colour)</text><ellipse cx="97.95" cy="1783.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="106.95" y="1787.9346">SetLabelText(std::string text, std::string font) : void</text><ellipse cx="97.95" cy="1797.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="63" x="106.95" y="1801.7705">draw() : void</text><!--MD5=[032b4da80d473f4495ac8a06202750d4]
class world.Layer--><rect codeLine="130" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="75.6719" id="world.Layer" style="stroke:#A80036;stroke-width:1.5;" width="99" x="2144.95" y="836.5"/><ellipse cx="2176.15" cy="852.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2177.9,854 L2174.6031,854 L2174.1656,855 L2174.1656,855 L2174.6344,855 L2175.15,855.625 L2175.15,856 L2175.15,856.375 L2174.6344,857 L2174.1656,857 L2172.275,857 L2171.6656,857 L2171.15,856.375 L2171.15,856 L2171.15,855.625 L2171.6656,855 L2172.275,855 L2174.5875,849 L2173.7125,849 L2172.6656,849 L2172.15,848.375 L2172.15,848 L2172.15,847.625 L2172.6656,847 L2173.7125,847 L2177.3844,847 L2180.0719,855 L2180.6344,855 L2180.6344,855 L2181.15,855.625 L2181.15,856 L2181.15,856.375 L2180.6344,857 L2180.0719,857 L2178.1813,857 L2177.6656,857 L2177.15,856.375 L2177.15,856 L2177.15,855.625 L2177.6656,855 L2178.1813,855 L2178.1813,855 L2177.9,854 Z M2177.3531,852 L2176.15,848.4219 L2175.1188,852 L2177.3531,852 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="31" x="2193.75" y="857.4102">Layer</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2145.95" x2="2242.95" y1="868.5" y2="868.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="2145.95" x2="2242.95" y1="876.5" y2="876.5"/><ellipse cx="2155.95" cy="887.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="73" x="2164.95" y="891.9189">Render() : void</text><ellipse cx="2155.95" cy="901.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="71" x="2164.95" y="905.7549">Update() : void</text><!--MD5=[058b60769bf24e6f858063701ad81ab7]
class world.MapParser--><rect codeLine="136" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="186.3594" id="world.MapParser" style="stroke:#A80036;stroke-width:1.5;" width="595" x="1872.95" y="166.5"/><ellipse cx="2136.2" cy="182.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2138.2,179 Q2138.4031,178.5 2138.6375,178.25 Q2138.8719,178 2139.1375,178 Q2139.6063,178 2139.9031,178.2813 Q2140.2,178.5625 2140.2,179.2188 L2140.2,180.7813 Q2140.2,181.4375 2139.9188,181.7188 Q2139.6375,182 2139.2,182 Q2138.8094,182 2138.5594,181.8281 Q2138.3094,181.6563 2138.2,181.2031 Q2138.1531,180.8906 2137.9813,180.7188 Q2137.6688,180.3906 2137.1063,180.2031 Q2136.5438,180 2135.9813,180 Q2135.2781,180 2134.6844,180.2813 Q2134.1063,180.5625 2133.6531,181.1875 Q2133.2,181.8125 2133.2,182.6719 L2133.2,183.5938 Q2133.2,184.625 2134.0438,185.3125 Q2134.8875,186 2136.3875,186 Q2137.2781,186 2137.9031,185.7969 Q2138.2625,185.6875 2138.6688,185.3281 Q2138.9344,185.125 2139.075,185.0625 Q2139.2156,185 2139.3875,185 Q2139.7156,185 2139.95,185.2656 Q2140.2,185.5156 2140.2,185.875 Q2140.2,186.2188 2139.8563,186.625 Q2139.3563,187.2188 2138.5594,187.5469 Q2137.5125,188 2136.2313,188 Q2134.7313,188 2133.5281,187.4063 Q2132.5594,186.9375 2131.8719,185.9219 Q2131.2,184.9063 2131.2,183.7031 L2131.2,182.6094 Q2131.2,181.3594 2131.7938,180.2656 Q2132.4031,179.1719 2133.45,178.5938 Q2134.5125,178 2135.7,178 Q2136.4188,178 2137.0438,178.25 Q2137.6688,178.5 2138.2,179 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="60" x="2156.7" y="187.4102">MapParser</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1873.95" x2="2466.95" y1="198.5" y2="198.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1880.95" y="206.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="147" x="1892.95" y="213.9189">s_Instance : static MapParser*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1880.95" y="220.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="220" x="1892.95" y="227.7549">m_MapDict : std::map&lt;std::string, GameMap*&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1873.95" x2="2466.95" y1="234.1719" y2="234.1719"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1880.95" y="242.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="1892.95" y="249.5908">MapParser()</text><ellipse cx="1883.95" cy="259.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="1892.95" y="263.4268">GetMap(std::string id) : GameMap*</text><ellipse cx="1883.95" cy="272.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="131" x="1892.95" y="277.2627">GetInstance() : MapParser*</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1880.95" y="283.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="569" x="1892.95" y="291.0986">ParseTileLayer(TiXmlElement* xmlLayer, std::vector&lt;Tileset&gt; tilesets, int tilesize, int rowcount, int colcount) : TileLayer*</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1880.95" y="297.5156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="223" x="1892.95" y="304.9346">ParseTileset(TiXmlElement* xmlTileset) : Tileset</text><ellipse cx="1883.95" cy="314.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="1892.95" y="318.7705">Load() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1880.95" y="325.1875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="1892.95" y="332.6064">Parse(std::string id, std::string source) : bool</text><ellipse cx="1883.95" cy="342.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="1892.95" y="346.4424">Clean() : void</text><!--MD5=[3558dd23c0f3351bc17b27f38620e6cf]
class world.GameMap--><rect codeLine="265" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="117.1797" id="world.GameMap" style="stroke:#A80036;stroke-width:1.5;" width="199" x="2094.95" y="581"/><ellipse cx="2161.7" cy="597" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2163.7,593.5 Q2163.9031,593 2164.1375,592.75 Q2164.3719,592.5 2164.6375,592.5 Q2165.1063,592.5 2165.4031,592.7813 Q2165.7,593.0625 2165.7,593.7188 L2165.7,595.2813 Q2165.7,595.9375 2165.4188,596.2188 Q2165.1375,596.5 2164.7,596.5 Q2164.3094,596.5 2164.0594,596.3281 Q2163.8094,596.1563 2163.7,595.7031 Q2163.6531,595.3906 2163.4813,595.2188 Q2163.1688,594.8906 2162.6063,594.7031 Q2162.0438,594.5 2161.4813,594.5 Q2160.7781,594.5 2160.1844,594.7813 Q2159.6063,595.0625 2159.1531,595.6875 Q2158.7,596.3125 2158.7,597.1719 L2158.7,598.0938 Q2158.7,599.125 2159.5438,599.8125 Q2160.3875,600.5 2161.8875,600.5 Q2162.7781,600.5 2163.4031,600.2969 Q2163.7625,600.1875 2164.1688,599.8281 Q2164.4344,599.625 2164.575,599.5625 Q2164.7156,599.5 2164.8875,599.5 Q2165.2156,599.5 2165.45,599.7656 Q2165.7,600.0156 2165.7,600.375 Q2165.7,600.7188 2165.3563,601.125 Q2164.8563,601.7188 2164.0594,602.0469 Q2163.0125,602.5 2161.7313,602.5 Q2160.2313,602.5 2159.0281,601.9063 Q2158.0594,601.4375 2157.3719,600.4219 Q2156.7,599.4063 2156.7,598.2031 L2156.7,597.1094 Q2156.7,595.8594 2157.2938,594.7656 Q2157.9031,593.6719 2158.95,593.0938 Q2160.0125,592.5 2161.2,592.5 Q2161.9188,592.5 2162.5438,592.75 Q2163.1688,593 2163.7,593.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="57" x="2182.2" y="601.9102">GameMap</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2095.95" x2="2292.95" y1="613" y2="613"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2102.95" y="621"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="173" x="2114.95" y="628.4189">m_MapLayers : std::vector&lt;Layer*&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2095.95" x2="2292.95" y1="634.8359" y2="634.8359"/><ellipse cx="2105.95" cy="645.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="56" x="2114.95" y="650.2549">GameMap()</text><ellipse cx="2105.95" cy="659.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="2114.95" y="664.0908">GetLayers() : std::vector&lt;Layer*&gt;</text><ellipse cx="2105.95" cy="673.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="2114.95" y="677.9268">Render() : void</text><ellipse cx="2105.95" cy="687.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="2114.95" y="691.7627">Update() : void</text><!--MD5=[48516c7a7bc1f05290f510d0ff4cfebc]
class world.Tile--><rect codeLine="284" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="89.5078" id="world.Tile" style="stroke:#A80036;stroke-width:1.5;" width="239" x="1598.95" y="214.5"/><ellipse cx="1704.2" cy="230.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1706.2,227 Q1706.4031,226.5 1706.6375,226.25 Q1706.8719,226 1707.1375,226 Q1707.6063,226 1707.9031,226.2813 Q1708.2,226.5625 1708.2,227.2188 L1708.2,228.7813 Q1708.2,229.4375 1707.9188,229.7188 Q1707.6375,230 1707.2,230 Q1706.8094,230 1706.5594,229.8281 Q1706.3094,229.6563 1706.2,229.2031 Q1706.1531,228.8906 1705.9813,228.7188 Q1705.6688,228.3906 1705.1063,228.2031 Q1704.5438,228 1703.9813,228 Q1703.2781,228 1702.6844,228.2813 Q1702.1063,228.5625 1701.6531,229.1875 Q1701.2,229.8125 1701.2,230.6719 L1701.2,231.5938 Q1701.2,232.625 1702.0438,233.3125 Q1702.8875,234 1704.3875,234 Q1705.2781,234 1705.9031,233.7969 Q1706.2625,233.6875 1706.6688,233.3281 Q1706.9344,233.125 1707.075,233.0625 Q1707.2156,233 1707.3875,233 Q1707.7156,233 1707.95,233.2656 Q1708.2,233.5156 1708.2,233.875 Q1708.2,234.2188 1707.8563,234.625 Q1707.3563,235.2188 1706.5594,235.5469 Q1705.5125,236 1704.2313,236 Q1702.7313,236 1701.5281,235.4063 Q1700.5594,234.9375 1699.8719,233.9219 Q1699.2,232.9063 1699.2,231.7031 L1699.2,230.6094 Q1699.2,229.3594 1699.7938,228.2656 Q1700.4031,227.1719 1701.45,226.5938 Q1702.5125,226 1703.7,226 Q1704.4188,226 1705.0438,226.25 Q1705.6688,226.5 1706.2,227 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="20" x="1724.7" y="235.4102">Tile</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1599.95" x2="1836.95" y1="246.5" y2="246.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1606.95" y="254.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="111" x="1618.95" y="261.9189">s_Instance : static Tile*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1606.95" y="268.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="1618.95" y="275.7549">m_Tile : std::map&lt;std::string, SDL_Texture*&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1599.95" x2="1836.95" y1="282.1719" y2="282.1719"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1606.95" y="290.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="1618.95" y="297.5908">Tile()</text><!--MD5=[664963052afdfdad2e4e93f6abfb1c33]
class world.TileLayer--><rect codeLine="291" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="172.5234" id="world.TileLayer" style="stroke:#A80036;stroke-width:1.5;" width="498" x="1945.45" y="1193.5"/><ellipse cx="2165.2" cy="1209.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2167.2,1206 Q2167.4031,1205.5 2167.6375,1205.25 Q2167.8719,1205 2168.1375,1205 Q2168.6063,1205 2168.9031,1205.2813 Q2169.2,1205.5625 2169.2,1206.2188 L2169.2,1207.7813 Q2169.2,1208.4375 2168.9188,1208.7188 Q2168.6375,1209 2168.2,1209 Q2167.8094,1209 2167.5594,1208.8281 Q2167.3094,1208.6563 2167.2,1208.2031 Q2167.1531,1207.8906 2166.9813,1207.7188 Q2166.6688,1207.3906 2166.1063,1207.2031 Q2165.5438,1207 2164.9813,1207 Q2164.2781,1207 2163.6844,1207.2813 Q2163.1063,1207.5625 2162.6531,1208.1875 Q2162.2,1208.8125 2162.2,1209.6719 L2162.2,1210.5938 Q2162.2,1211.625 2163.0438,1212.3125 Q2163.8875,1213 2165.3875,1213 Q2166.2781,1213 2166.9031,1212.7969 Q2167.2625,1212.6875 2167.6688,1212.3281 Q2167.9344,1212.125 2168.075,1212.0625 Q2168.2156,1212 2168.3875,1212 Q2168.7156,1212 2168.95,1212.2656 Q2169.2,1212.5156 2169.2,1212.875 Q2169.2,1213.2188 2168.8563,1213.625 Q2168.3563,1214.2188 2167.5594,1214.5469 Q2166.5125,1215 2165.2313,1215 Q2163.7313,1215 2162.5281,1214.4063 Q2161.5594,1213.9375 2160.8719,1212.9219 Q2160.2,1211.9063 2160.2,1210.7031 L2160.2,1209.6094 Q2160.2,1208.3594 2160.7938,1207.2656 Q2161.4031,1206.1719 2162.45,1205.5938 Q2163.5125,1205 2164.7,1205 Q2165.4188,1205 2166.0438,1205.25 Q2166.6688,1205.5 2167.2,1206 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="50" x="2185.7" y="1214.4102">TileLayer</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1946.45" x2="2442.45" y1="1225.5" y2="1225.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1953.45" y="1233.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="1965.45" y="1240.9189">m_ColCount : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1953.45" y="1247.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="1965.45" y="1254.7549">m_RowCount : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1953.45" y="1261.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="1965.45" y="1268.5908">m_TileSize : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1953.45" y="1275.0078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="1965.45" y="1282.4268">m_Tilesets : vector&lt;Tileset&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1953.45" y="1288.8438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="177" x="1965.45" y="1296.2627">m_Tilemap : vector&lt;std::vector&lt;int&gt;&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1946.45" x2="2442.45" y1="1302.6797" y2="1302.6797"/><ellipse cx="1956.45" cy="1313.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="472" x="1965.45" y="1318.0986">TileLayer(int tilesize, int width, int height, vector&lt;std::vector&lt;int&gt;&gt; tilemap, vector&lt;Tileset&gt; tilesets)</text><ellipse cx="1956.45" cy="1327.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="1965.45" y="1331.9346">GetTileMap() : TileMap</text><ellipse cx="1956.45" cy="1341.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="1965.45" y="1345.7705">Render() : void</text><ellipse cx="1956.45" cy="1355.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="1965.45" y="1359.6064">Update() : void</text><!--MD5=[16a2a2eaaa6a5cc5f4df8c56f6e29488]
class world.Tileset--><rect codeLine="303" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="158.6875" id="world.Tileset" style="stroke:#A80036;stroke-width:1.5;" width="118" x="2135.45" y="1649.5"/><ellipse cx="2172.5" cy="1665.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2174.5,1662 Q2174.7031,1661.5 2174.9375,1661.25 Q2175.1719,1661 2175.4375,1661 Q2175.9063,1661 2176.2031,1661.2813 Q2176.5,1661.5625 2176.5,1662.2188 L2176.5,1663.7813 Q2176.5,1664.4375 2176.2188,1664.7188 Q2175.9375,1665 2175.5,1665 Q2175.1094,1665 2174.8594,1664.8281 Q2174.6094,1664.6563 2174.5,1664.2031 Q2174.4531,1663.8906 2174.2813,1663.7188 Q2173.9688,1663.3906 2173.4063,1663.2031 Q2172.8438,1663 2172.2813,1663 Q2171.5781,1663 2170.9844,1663.2813 Q2170.4063,1663.5625 2169.9531,1664.1875 Q2169.5,1664.8125 2169.5,1665.6719 L2169.5,1666.5938 Q2169.5,1667.625 2170.3438,1668.3125 Q2171.1875,1669 2172.6875,1669 Q2173.5781,1669 2174.2031,1668.7969 Q2174.5625,1668.6875 2174.9688,1668.3281 Q2175.2344,1668.125 2175.375,1668.0625 Q2175.5156,1668 2175.6875,1668 Q2176.0156,1668 2176.25,1668.2656 Q2176.5,1668.5156 2176.5,1668.875 Q2176.5,1669.2188 2176.1563,1669.625 Q2175.6563,1670.2188 2174.8594,1670.5469 Q2173.8125,1671 2172.5313,1671 Q2171.0313,1671 2169.8281,1670.4063 Q2168.8594,1669.9375 2168.1719,1668.9219 Q2167.5,1667.9063 2167.5,1666.7031 L2167.5,1665.6094 Q2167.5,1664.3594 2168.0938,1663.2656 Q2168.7031,1662.1719 2169.75,1661.5938 Q2170.8125,1661 2172,1661 Q2172.7188,1661 2173.3438,1661.25 Q2173.9688,1661.5 2174.5,1662 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="37" x="2191.4" y="1670.4102">Tileset</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2136.45" x2="2252.45" y1="1681.5" y2="1681.5"/><ellipse cx="2146.45" cy="1692.5" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="63" x="2155.45" y="1696.9189">ColCount : int</text><ellipse cx="2146.45" cy="1706.3359" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="2155.45" y="1710.7549">FirstID : int</text><ellipse cx="2146.45" cy="1720.1719" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="2155.45" y="1724.5908">LastID : int</text><ellipse cx="2146.45" cy="1734.0078" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="2155.45" y="1738.4268">RowCount : int</text><ellipse cx="2146.45" cy="1747.8438" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="2155.45" y="1752.2627">TileCount : int</text><ellipse cx="2146.45" cy="1761.6797" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="57" x="2155.45" y="1766.0986">TileSize : int</text><ellipse cx="2146.45" cy="1775.5156" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="2155.45" y="1779.9346">Name : std::string</text><ellipse cx="2146.45" cy="1789.3516" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="2155.45" y="1793.7705">Source : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2136.45" x2="2252.45" y1="1800.1875" y2="1800.1875"/><!--MD5=[9b15561b5a79df87694001dece61cd3f]
class states.Menu--><rect codeLine="150" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="241.7031" id="states.Menu" style="stroke:#A80036;stroke-width:1.5;" width="181" x="2829.95" y="138.5"/><ellipse cx="2901.2" cy="154.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2903.2,151 Q2903.4031,150.5 2903.6375,150.25 Q2903.8719,150 2904.1375,150 Q2904.6063,150 2904.9031,150.2813 Q2905.2,150.5625 2905.2,151.2188 L2905.2,152.7813 Q2905.2,153.4375 2904.9188,153.7188 Q2904.6375,154 2904.2,154 Q2903.8094,154 2903.5594,153.8281 Q2903.3094,153.6563 2903.2,153.2031 Q2903.1531,152.8906 2902.9813,152.7188 Q2902.6688,152.3906 2902.1063,152.2031 Q2901.5438,152 2900.9813,152 Q2900.2781,152 2899.6844,152.2813 Q2899.1063,152.5625 2898.6531,153.1875 Q2898.2,153.8125 2898.2,154.6719 L2898.2,155.5938 Q2898.2,156.625 2899.0438,157.3125 Q2899.8875,158 2901.3875,158 Q2902.2781,158 2902.9031,157.7969 Q2903.2625,157.6875 2903.6688,157.3281 Q2903.9344,157.125 2904.075,157.0625 Q2904.2156,157 2904.3875,157 Q2904.7156,157 2904.95,157.2656 Q2905.2,157.5156 2905.2,157.875 Q2905.2,158.2188 2904.8563,158.625 Q2904.3563,159.2188 2903.5594,159.5469 Q2902.5125,160 2901.2313,160 Q2899.7313,160 2898.5281,159.4063 Q2897.5594,158.9375 2896.8719,157.9219 Q2896.2,156.9063 2896.2,155.7031 L2896.2,154.6094 Q2896.2,153.3594 2896.7938,152.2656 Q2897.4031,151.1719 2898.45,150.5938 Q2899.5125,150 2900.7,150 Q2901.4188,150 2902.0438,150.25 Q2902.6688,150.5 2903.2,151 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="30" x="2921.7" y="159.4102">Menu</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2830.95" x2="3009.95" y1="170.5" y2="170.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2837.95" y="178.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="2849.95" y="185.9189">m_Renderer : SDL_Renderer*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2837.95" y="192.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="2849.95" y="199.7549">m_Window : SDL_Window*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2837.95" y="206.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="90" x="2849.95" y="213.5908">m_IsRunning : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2837.95" y="220.0078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="121" x="2849.95" y="227.4268">s_Instance : static Menu*</text><ellipse cx="2840.95" cy="236.8438" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="155" x="2849.95" y="241.2627">s_AlrPressedSpace : static bool</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2830.95" x2="3009.95" y1="247.6797" y2="247.6797"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2837.95" y="255.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="34" x="2849.95" y="263.0986">Menu()</text><ellipse cx="2840.95" cy="272.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="105" x="2849.95" y="276.9346">GetInstance() : Menu*</text><ellipse cx="2840.95" cy="286.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="2849.95" y="290.7705">GetRenderer() : SDL_Renderer*</text><ellipse cx="2840.95" cy="300.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="2849.95" y="304.6064">Clean() : bool</text><ellipse cx="2840.95" cy="314.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="2849.95" y="318.4424">Init() : bool</text><ellipse cx="2840.95" cy="327.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="2849.95" y="332.2783">IsRunning() : bool</text><ellipse cx="2840.95" cy="341.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="70" x="2849.95" y="346.1143">Events() : void</text><ellipse cx="2840.95" cy="355.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="56" x="2849.95" y="359.9502">Quit() : void</text><ellipse cx="2840.95" cy="369.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="2849.95" y="373.7861">Render() : void</text><!--MD5=[161adf73dd9d2b0eaa5a51b7c8d9fcc3]
class states.Game--><rect codeLine="218" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="435.4063" id="states.Game" style="stroke:#A80036;stroke-width:1.5;" width="270" x="2524.45" y="42"/><ellipse cx="2638.2" cy="58" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2640.2,54.5 Q2640.4031,54 2640.6375,53.75 Q2640.8719,53.5 2641.1375,53.5 Q2641.6063,53.5 2641.9031,53.7813 Q2642.2,54.0625 2642.2,54.7188 L2642.2,56.2813 Q2642.2,56.9375 2641.9188,57.2188 Q2641.6375,57.5 2641.2,57.5 Q2640.8094,57.5 2640.5594,57.3281 Q2640.3094,57.1563 2640.2,56.7031 Q2640.1531,56.3906 2639.9813,56.2188 Q2639.6688,55.8906 2639.1063,55.7031 Q2638.5438,55.5 2637.9813,55.5 Q2637.2781,55.5 2636.6844,55.7813 Q2636.1063,56.0625 2635.6531,56.6875 Q2635.2,57.3125 2635.2,58.1719 L2635.2,59.0938 Q2635.2,60.125 2636.0438,60.8125 Q2636.8875,61.5 2638.3875,61.5 Q2639.2781,61.5 2639.9031,61.2969 Q2640.2625,61.1875 2640.6688,60.8281 Q2640.9344,60.625 2641.075,60.5625 Q2641.2156,60.5 2641.3875,60.5 Q2641.7156,60.5 2641.95,60.7656 Q2642.2,61.0156 2642.2,61.375 Q2642.2,61.7188 2641.8563,62.125 Q2641.3563,62.7188 2640.5594,63.0469 Q2639.5125,63.5 2638.2313,63.5 Q2636.7313,63.5 2635.5281,62.9063 Q2634.5594,62.4375 2633.8719,61.4219 Q2633.2,60.4063 2633.2,59.2031 L2633.2,58.1094 Q2633.2,56.8594 2633.7938,55.7656 Q2634.4031,54.6719 2635.45,54.0938 Q2636.5125,53.5 2637.7,53.5 Q2638.4188,53.5 2639.0438,53.75 Q2639.6688,54 2640.2,54.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="34" x="2658.7" y="62.9102">Game</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2525.45" x2="2793.45" y1="74" y2="74"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2532.45" y="82"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="2544.45" y="89.4189">m_LevelMap : GameMap*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2532.45" y="95.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="2544.45" y="103.2549">m_Renderer : SDL_Renderer*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2532.45" y="109.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="2544.45" y="117.0908">m_Window : SDL_Window*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2532.45" y="123.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="90" x="2544.45" y="130.9268">m_IsRunning : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2532.45" y="137.3438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="123" x="2544.45" y="144.7627">s_Instance : static Game*</text><ellipse cx="2535.45" cy="154.1797" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="108" x="2544.45" y="158.5986">gameOver : static bool</text><ellipse cx="2535.45" cy="168.0156" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="106" x="2544.45" y="172.4346">playAgain : static bool</text><ellipse cx="2535.45" cy="181.8516" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="155" x="2544.45" y="186.2705">s_AlrPressedSpace : static bool</text><ellipse cx="2535.45" cy="195.6875" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="104" x="2544.45" y="200.1064">whoWins : static bool</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2525.45" x2="2793.45" y1="206.5234" y2="206.5234"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2532.45" y="214.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="36" x="2544.45" y="221.9424">Game()</text><ellipse cx="2535.45" cy="231.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="107" x="2544.45" y="235.7783">GetInstance() : Game*</text><ellipse cx="2535.45" cy="245.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="2544.45" y="249.6143">GetMap() : GameMap*</text><ellipse cx="2535.45" cy="259.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="2544.45" y="263.4502">GetRenderer() : SDL_Renderer*</text><ellipse cx="2535.45" cy="272.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="2544.45" y="277.2861">Clean() : bool</text><ellipse cx="2535.45" cy="286.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="2544.45" y="291.1221">Init() : bool</text><ellipse cx="2535.45" cy="300.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="2544.45" y="304.958">IsRunning() : bool</text><ellipse cx="2535.45" cy="314.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="2544.45" y="318.7939">getPlayAgain() : bool</text><ellipse cx="2535.45" cy="328.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="2544.45" y="332.6299">getWhoWins() : bool</text><ellipse cx="2535.45" cy="342.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="2544.45" y="346.4658">GetBombItemList() : std::vector&lt;BombCollectable&gt;*</text><ellipse cx="2535.45" cy="355.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="2544.45" y="360.3018">GetBombPlantedList() : std::vector&lt;BombPlanted&gt;*</text><ellipse cx="2535.45" cy="369.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="136" x="2544.45" y="374.1377">BombPlayer(int m_pid) : void</text><ellipse cx="2535.45" cy="383.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="138" x="2544.45" y="387.9736">CollectBomb(int m_pid) : void</text><ellipse cx="2535.45" cy="397.3906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="70" x="2544.45" y="401.8096">Events() : void</text><ellipse cx="2535.45" cy="411.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="2544.45" y="415.6455">PlantBomb(int m_pid) : void</text><ellipse cx="2535.45" cy="425.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="56" x="2544.45" y="429.4814">Quit() : void</text><ellipse cx="2535.45" cy="438.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="2544.45" y="443.3174">Render() : void</text><ellipse cx="2535.45" cy="452.7344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="91" x="2544.45" y="457.1533">SpawnItem() : void</text><ellipse cx="2535.45" cy="466.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="2544.45" y="470.9893">Update() : void</text><!--MD5=[5aa411387f1ac4e94a30f54c7c993f84]
class interfaces.Board--><rect codeLine="249" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="214.0313" id="interfaces.Board" style="stroke:#A80036;stroke-width:1.5;" width="391" x="3067.95" y="152.5"/><ellipse cx="3242.7" cy="168.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3244.7,165 Q3244.9031,164.5 3245.1375,164.25 Q3245.3719,164 3245.6375,164 Q3246.1063,164 3246.4031,164.2813 Q3246.7,164.5625 3246.7,165.2188 L3246.7,166.7813 Q3246.7,167.4375 3246.4188,167.7188 Q3246.1375,168 3245.7,168 Q3245.3094,168 3245.0594,167.8281 Q3244.8094,167.6563 3244.7,167.2031 Q3244.6531,166.8906 3244.4813,166.7188 Q3244.1688,166.3906 3243.6063,166.2031 Q3243.0438,166 3242.4813,166 Q3241.7781,166 3241.1844,166.2813 Q3240.6063,166.5625 3240.1531,167.1875 Q3239.7,167.8125 3239.7,168.6719 L3239.7,169.5938 Q3239.7,170.625 3240.5438,171.3125 Q3241.3875,172 3242.8875,172 Q3243.7781,172 3244.4031,171.7969 Q3244.7625,171.6875 3245.1688,171.3281 Q3245.4344,171.125 3245.575,171.0625 Q3245.7156,171 3245.8875,171 Q3246.2156,171 3246.45,171.2656 Q3246.7,171.5156 3246.7,171.875 Q3246.7,172.2188 3246.3563,172.625 Q3245.8563,173.2188 3245.0594,173.5469 Q3244.0125,174 3242.7313,174 Q3241.2313,174 3240.0281,173.4063 Q3239.0594,172.9375 3238.3719,171.9219 Q3237.7,170.9063 3237.7,169.7031 L3237.7,168.6094 Q3237.7,167.3594 3238.2938,166.2656 Q3238.9031,165.1719 3239.95,164.5938 Q3241.0125,164 3242.2,164 Q3242.9188,164 3243.5438,164.25 Q3244.1688,164.5 3244.7,165 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="33" x="3263.2" y="173.4102">Board</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3068.95" x2="3457.95" y1="184.5" y2="184.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3075.95" y="192.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="3087.95" y="199.9189">m_board : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3075.95" y="206.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="124" x="3087.95" y="213.7549">s_Instance : static Board*</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3068.95" x2="3457.95" y1="220.1719" y2="220.1719"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3075.95" y="228.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="37" x="3087.95" y="235.5908">Board()</text><ellipse cx="3078.95" cy="245.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="108" x="3087.95" y="249.4268">GetInstance() : Board*</text><ellipse cx="3078.95" cy="258.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="3087.95" y="263.2627">canPlayerMove(int m_pid, int prevX, int prevY, int newX, int newY) : bool</text><ellipse cx="3078.95" cy="272.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="3087.95" y="277.0986">canPlayerPlant(int m_pid, int prevX, int prevY) : bool</text><ellipse cx="3078.95" cy="286.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="3087.95" y="290.9346">consoleBoard() : bool</text><ellipse cx="3078.95" cy="300.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="79" x="3087.95" y="304.7705">initBoard() : bool</text><ellipse cx="3078.95" cy="314.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="365" x="3087.95" y="318.6064">updateBoardMove(int m_pid, int prevX, int prevY, int newX, int newY) : bool</text><ellipse cx="3078.95" cy="328.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="3087.95" y="332.4424">updateBoardPlant(int m_pid, int prevX, int prevY) : bool</text><ellipse cx="3078.95" cy="341.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="3087.95" y="346.2783">getTileID(int x, int y) : int</text><ellipse cx="3078.95" cy="355.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="3087.95" y="360.1143">updateBoardWithItem(int x, int y, int iid) : void</text><!--MD5=[629c6d17119cecbb56307adb03ce148e]
class utils.IOHandler--><rect codeLine="314" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="172.5234" id="utils.IOHandler" style="stroke:#A80036;stroke-width:1.5;" width="222" x="1297.45" y="173"/><ellipse cx="1376.2" cy="189" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1378.2,185.5 Q1378.4031,185 1378.6375,184.75 Q1378.8719,184.5 1379.1375,184.5 Q1379.6063,184.5 1379.9031,184.7813 Q1380.2,185.0625 1380.2,185.7188 L1380.2,187.2813 Q1380.2,187.9375 1379.9188,188.2188 Q1379.6375,188.5 1379.2,188.5 Q1378.8094,188.5 1378.5594,188.3281 Q1378.3094,188.1563 1378.2,187.7031 Q1378.1531,187.3906 1377.9813,187.2188 Q1377.6688,186.8906 1377.1063,186.7031 Q1376.5438,186.5 1375.9813,186.5 Q1375.2781,186.5 1374.6844,186.7813 Q1374.1063,187.0625 1373.6531,187.6875 Q1373.2,188.3125 1373.2,189.1719 L1373.2,190.0938 Q1373.2,191.125 1374.0438,191.8125 Q1374.8875,192.5 1376.3875,192.5 Q1377.2781,192.5 1377.9031,192.2969 Q1378.2625,192.1875 1378.6688,191.8281 Q1378.9344,191.625 1379.075,191.5625 Q1379.2156,191.5 1379.3875,191.5 Q1379.7156,191.5 1379.95,191.7656 Q1380.2,192.0156 1380.2,192.375 Q1380.2,192.7188 1379.8563,193.125 Q1379.3563,193.7188 1378.5594,194.0469 Q1377.5125,194.5 1376.2313,194.5 Q1374.7313,194.5 1373.5281,193.9063 Q1372.5594,193.4375 1371.8719,192.4219 Q1371.2,191.4063 1371.2,190.2031 L1371.2,189.1094 Q1371.2,187.8594 1371.7938,186.7656 Q1372.4031,185.6719 1373.45,185.0938 Q1374.5125,184.5 1375.7,184.5 Q1376.4188,184.5 1377.0438,184.75 Q1377.6688,185 1378.2,185.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="56" x="1396.7" y="193.9102">IOHandler</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1298.45" x2="1518.45" y1="205" y2="205"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1305.45" y="213"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="1317.45" y="220.4189">m_KeyStates : const Uint8*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1305.45" y="226.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="142" x="1317.45" y="234.2549">s_Instance : static IOHandler*</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1298.45" x2="1518.45" y1="240.6719" y2="240.6719"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1305.45" y="248.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="55" x="1317.45" y="256.0908">IOHandler()</text><ellipse cx="1308.45" cy="265.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="126" x="1317.45" y="269.9268">GetInstance() : IOHandler*</text><ellipse cx="1308.45" cy="279.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="1317.45" y="283.7627">KeyPressed(SDL_Scancode key) : bool</text><ellipse cx="1308.45" cy="293.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="1317.45" y="297.5986">KeyReleased(SDL_Scancode key) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1305.45" y="304.0156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="1317.45" y="311.4346">KeyDown() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1305.45" y="317.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="69" x="1317.45" y="325.2705">KeyUp() : void</text><ellipse cx="1308.45" cy="334.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="1317.45" y="339.1064">Listen() : void</text><!--MD5=[c94bf9e2a94e1f74890cbcf91aab3a62]
class utils.IOObject--><rect codeLine="327" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="89.5078" id="utils.IOObject" style="stroke:#A80036;stroke-width:1.5;" width="130" x="1132.45" y="214.5"/><ellipse cx="1169.5" cy="230.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1171.25,232 L1167.9531,232 L1167.5156,233 L1167.5156,233 L1167.9844,233 L1168.5,233.625 L1168.5,234 L1168.5,234.375 L1167.9844,235 L1167.5156,235 L1165.625,235 L1165.0156,235 L1164.5,234.375 L1164.5,234 L1164.5,233.625 L1165.0156,233 L1165.625,233 L1167.9375,227 L1167.0625,227 L1166.0156,227 L1165.5,226.375 L1165.5,226 L1165.5,225.625 L1166.0156,225 L1167.0625,225 L1170.7344,225 L1173.4219,233 L1173.9844,233 L1173.9844,233 L1174.5,233.625 L1174.5,234 L1174.5,234.375 L1173.9844,235 L1173.4219,235 L1171.5313,235 L1171.0156,235 L1170.5,234.375 L1170.5,234 L1170.5,233.625 L1171.0156,233 L1171.5313,233 L1171.5313,233 L1171.25,232 Z M1170.7031,230 L1169.5,226.4219 L1168.4688,230 L1170.7031,230 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="49" x="1188.4" y="235.4102">IOObject</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1133.45" x2="1261.45" y1="246.5" y2="246.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="1133.45" x2="1261.45" y1="254.5" y2="254.5"/><ellipse cx="1143.45" cy="265.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="66" x="1152.45" y="269.9189">Clean() : void</text><ellipse cx="1143.45" cy="279.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="62" x="1152.45" y="283.7549">Draw() : void</text><ellipse cx="1143.45" cy="293.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="104" x="1152.45" y="297.5908">Update(float dt) : void</text><!--MD5=[e7d94b46357b5bc331758902d85e5c6c]
class utils.ItemTimer--><rect codeLine="333" fill="#FEFECE" filter="url(#f1dz1wvx1av7t9)" height="200.1953" id="utils.ItemTimer" style="stroke:#A80036;stroke-width:1.5;" width="234" x="863.45" y="159.5"/><ellipse cx="948.2" cy="175.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M950.2,172 Q950.4031,171.5 950.6375,171.25 Q950.8719,171 951.1375,171 Q951.6062,171 951.9031,171.2813 Q952.2,171.5625 952.2,172.2188 L952.2,173.7813 Q952.2,174.4375 951.9187,174.7188 Q951.6375,175 951.2,175 Q950.8094,175 950.5594,174.8281 Q950.3094,174.6563 950.2,174.2031 Q950.1531,173.8906 949.9812,173.7188 Q949.6687,173.3906 949.1062,173.2031 Q948.5437,173 947.9812,173 Q947.2781,173 946.6844,173.2813 Q946.1062,173.5625 945.6531,174.1875 Q945.2,174.8125 945.2,175.6719 L945.2,176.5938 Q945.2,177.625 946.0437,178.3125 Q946.8875,179 948.3875,179 Q949.2781,179 949.9031,178.7969 Q950.2625,178.6875 950.6687,178.3281 Q950.9344,178.125 951.075,178.0625 Q951.2156,178 951.3875,178 Q951.7156,178 951.95,178.2656 Q952.2,178.5156 952.2,178.875 Q952.2,179.2188 951.8562,179.625 Q951.3562,180.2188 950.5594,180.5469 Q949.5125,181 948.2312,181 Q946.7312,181 945.5281,180.4063 Q944.5594,179.9375 943.8719,178.9219 Q943.2,177.9063 943.2,176.7031 L943.2,175.6094 Q943.2,174.3594 943.7937,173.2656 Q944.4031,172.1719 945.45,171.5938 Q946.5125,171 947.7,171 Q948.4187,171 949.0437,171.25 Q949.6687,171.5 950.2,172 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="56" x="968.7" y="180.4102">ItemTimer</text><line style="stroke:#A80036;stroke-width:1.5;" x1="864.45" x2="1096.45" y1="191.5" y2="191.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="871.45" y="199.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="883.45" y="206.9189">m_ReadyToSpawn : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="871.45" y="213.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="883.45" y="220.7549">m_TimerHasStarted : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="871.45" y="227.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="883.45" y="234.5908">m_timerThread : std::thread</text><line style="stroke:#A80036;stroke-width:1.5;" x1="864.45" x2="1096.45" y1="241.0078" y2="241.0078"/><ellipse cx="874.45" cy="252.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="883.45" y="256.4268">ItemTimer()</text><ellipse cx="874.45" cy="265.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="883.45" y="270.2627">getReadyToSpawn() : bool</text><ellipse cx="874.45" cy="279.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="883.45" y="284.0986">getTimerHasStarted() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="871.45" y="290.5156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="208" x="883.45" y="297.9346">intRand(const int&amp; min, const int&amp; max) : int</text><ellipse cx="874.45" cy="307.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="883.45" y="311.7705">setReadyToSpawn(bool val) : void</text><ellipse cx="874.45" cy="321.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="883.45" y="325.6064">setTimerHasStarted(bool val) : void</text><ellipse cx="874.45" cy="335.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="883.45" y="339.4424">startTimer() : void</text><ellipse cx="874.45" cy="348.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="883.45" y="353.2783">stopTimer() : void</text><!--MD5=[10f778e5ada94756d417f03c09e3f7bc]
reverse link entities.creatures.Creature to entities.creatures.Player--><path codeLine="349" d="M1197.45,967.33 C1197.45,979.79 1197.45,993.06 1197.45,1006.82 " fill="none" id="entities.creatures.Creature-backto-entities.creatures.Player" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1190.45,967.17,1197.45,947.17,1204.45,967.17,1190.45,967.17" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[a835d6e75637d0a35a79f17d88e81d24]
reverse link entities.Entity to entities.creatures.Creature--><path codeLine="352" d="M1197.45,746.35 C1197.45,765.07 1197.45,784.17 1197.45,801.67 " fill="none" id="entities.Entity-backto-entities.creatures.Creature" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1190.45,746.27,1197.45,726.27,1204.45,746.27,1190.45,746.27" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[04317c9b876fc3e4a5c0fa61d8f86068]
reverse link entities.Entity to entities.items.Item--><path codeLine="355" d="M1120.67,739.05 C1115.16,743.14 1109.41,746.85 1103.45,750 C1075.39,764.86 1062.67,748.23 1032.45,758 C984.25,773.58 934.65,801.17 896.31,825.47 " fill="none" id="entities.Entity-backto-entities.items.Item" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1116.2,733.66,1136.01,726.14,1125.21,744.37,1116.2,733.66" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[16d80ee4e8157af449c78820c72f45ec]
reverse link utils.IOObject to entities.Entity--><path codeLine="358" d="M1197.45,324.95 C1197.45,387.77 1197.45,483.7 1197.45,552.9 " fill="none" id="utils.IOObject-backto-entities.Entity" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1190.45,324.6,1197.45,304.6,1204.45,324.6,1190.45,324.6" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[099af974e4d8c4930944301d06aadd20]
reverse link entities.items.Item to entities.items.BombCollectable--><path codeLine="361" d="M742.97,936.78 C717.22,957.54 689.82,981.87 667.45,1007 C616.68,1064.04 570.46,1137.24 538.29,1193.34 " fill="none" id="entities.items.Item-backto-entities.items.BombCollectable" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="738.7,931.24,758.74,924.34,747.37,942.23,738.7,931.24" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[6684e57e27f659cc4f7d8353e9c665cd]
reverse link entities.items.Item to entities.items.BombPlanted--><path codeLine="364" d="M827.45,960.62 C827.45,1018.24 827.45,1095.18 827.45,1159 " fill="none" id="entities.items.Item-backto-entities.items.BombPlanted" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="820.45,960.33,827.45,940.33,834.45,960.33,820.45,960.33" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[17096a5022e9768a8096a03d462e8eef]
reverse link world.Layer to world.TileLayer--><path codeLine="367" d="M2194.45,933.13 C2194.45,1001.21 2194.45,1115.11 2194.45,1193.49 " fill="none" id="world.Layer-backto-world.TileLayer" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="2187.45,932.74,2194.45,912.74,2201.45,932.74,2187.45,932.74" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[8d2db7110221b90f4d8ef6a899383274]
reverse link entities.items.BombCollectable to gfx.TextureManager--><path codeLine="372" d="M323.76,1354.02 C230.46,1404.25 122.88,1480.81 69.45,1585 C19.26,1682.88 6,1742.65 69.45,1832.5 C124.6,1910.59 215.98,1955.65 306.71,1981.59 " fill="none" id="entities.items.BombCollectable-backto-gfx.TextureManager" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="335.35,1347.87,328.1755,1347.1446,324.7465,1353.4883,331.921,1354.2137,335.35,1347.87" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[7b43d8d9c5e321060e85453c7686acf2]
reverse link entities.items.BombPlanted to gfx.Animation--><path codeLine="375" d="M827.45,1414.21 C827.45,1483.05 827.45,1565.62 827.45,1628.78 " fill="none" id="entities.items.BombPlanted-backto-gfx.Animation" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="827.45,1401.08,823.45,1407.08,827.45,1413.08,831.45,1407.08,827.45,1401.08" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[1033a3e59b607c4d0988c914c9ff53e9]
reverse link gfx.DrawManager to gfx.Vector2D--><path codeLine="378" d="M1256.45,1829.02 C1256.45,1869.46 1256.45,1915.1 1256.45,1951.17 " fill="none" id="gfx.DrawManager-backto-gfx.Vector2D" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="1256.45,1815.81,1252.45,1821.81,1256.45,1827.81,1260.45,1821.81,1256.45,1815.81" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[06c8f4031f32bc58dc0f9b17d595e51a]
reverse link entities.Entity to gfx.Transform--><path codeLine="381" d="M1285.2,683.25 C1314.59,702.04 1344.44,726.99 1362.45,758 C1534.21,1053.63 1495.93,1486.66 1472.14,1656.19 " fill="none" id="entities.Entity-backto-gfx.Transform" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="1273.99,676.35,1277.0031,682.9014,1284.2094,682.6399,1281.1964,676.0885,1273.99,676.35" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[e6c69a633ed1049a0e7609d1d310e69c]
reverse link states.Game to world.GameMap--><path codeLine="384" d="M2514.9,472.93 C2505.09,482.88 2494.92,492.32 2484.45,501 C2428.26,547.59 2353.64,582.5 2294.16,605.49 " fill="none" id="states.Game-backto-world.GameMap" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="2524.2,463.24,2517.159,464.7969,2515.888,471.8951,2522.929,470.3382,2524.2,463.24" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[46ac167ed1ddf2cf564eff04ea1b5b2a]
reverse link world.GameMap to world.Layer--><path codeLine="387" d="M2194.45,711.11 C2194.45,752.3 2194.45,802.59 2194.45,836.19 " fill="none" id="world.GameMap-backto-world.Layer" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="2194.45,698.1,2190.45,704.1,2194.45,710.1,2198.45,704.1,2194.45,698.1" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[93f83c5ab99c1d2280c924b910bccc7b]
reverse link world.MapParser to world.GameMap--><path codeLine="390" d="M2177.16,366.15 C2181.57,435.62 2187.17,523.87 2190.79,580.76 " fill="none" id="world.MapParser-backto-world.GameMap" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="2176.32,352.97,2172.7106,359.2128,2177.085,364.9456,2180.6943,358.7028,2176.32,352.97" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[a7cc82530030d4968bd2040d06b31cef]
reverse link entities.creatures.Player to gfx.Animation--><path codeLine="393" d="M1040.22,1510.97 C1022.67,1533.75 1004.58,1556.14 986.45,1577 C971.35,1594.39 954.5,1611.99 937.58,1628.73 " fill="none" id="entities.creatures.Player-backto-gfx.Animation" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="1048.25,1500.48,1041.4261,1502.8111,1040.9533,1510.0067,1047.7772,1507.6756,1048.25,1500.48" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[dbbe94031ce551aebe6dc52ae1f57bf7]
reverse link entities.creatures.Player to gfx.DrawManager--><path codeLine="396" d="M1235.11,1566.33 C1238.72,1593.65 1242.15,1619.63 1245.16,1642.46 " fill="none" id="entities.creatures.Player-backto-gfx.DrawManager" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="1233.39,1553.26,1230.2091,1559.7316,1234.9595,1565.1569,1238.1404,1558.6853,1233.39,1553.26" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[992167aa91069c83fccfdba82f6392d8]
reverse link gfx.Animation to gfx.TextureManager--><path codeLine="399" d="M735.38,1839.26 C721.68,1855.52 707.45,1872.4 693.48,1888.99 " fill="none" id="gfx.Animation-backto-gfx.TextureManager" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="743.84,1829.23,736.9157,1831.2435,736.1112,1838.4096,743.0355,1836.3961,743.84,1829.23" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[23cd05996af9d076982a26ce4bae3957]
reverse link world.TileLayer to world.Tileset--><path codeLine="402" d="M2194.45,1379.89 C2194.45,1461.02 2194.45,1574.34 2194.45,1649.37 " fill="none" id="world.TileLayer-backto-world.Tileset" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2194.45,1366.66,2190.45,1372.66,2194.45,1378.66,2198.45,1372.66,2194.45,1366.66" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[8d908eaf75ddca2c96c3833d97718841]
@startuml
/' Objects '/
abstract class entities.Entity {
	+Entity(Properties* props)
	#m_Flip : SDL_RendererFlip
	#m_Transform : Transform*
	#m_Height : int
	#m_Width : int
	#m_TextureID : std::string
	+{abstract} Clean() : void
	+{abstract} Draw() : void
	+{abstract} Update(float dt) : void
}

abstract class entities.items.Item {
	+Item(Properties* props)
	+getItemX() : int
	+getItemY() : int
	+{abstract} Clean() : void
	+{abstract} Draw() : void
	+{abstract} Update(float dt) : void
}

class entities.items.BombCollectable {
	+BombCollectable(Properties* props)
	-m_BombItemTextureM : TextureManager*
	-m_ItemBombID : int
	-m_NumBombsSpawned : int
	-s_BombsSpawnedList : std::vector<BombCollectable>
	+getListOfSpawnedBombs() : std::vector<BombCollectable>*
	+Clean() : void
	+Draw() : void
	+Update(float dt) : void
}


class entities.items.BombPlanted {
	+BombPlanted(Properties* props)
	-m_BombAnimation : Animation*
	-m_PlantedBombTexture : SDL_Texture*
	+m_countDown : bool
	+m_isBombPlanted : bool
	+m_start : long
	+{static} s_bombID : static int
	+GetBombPlantedTextureName() : std::string
	-textureName : std::string
	-s_PlantedBombList : std::vector<BombPlanted>
	+getListOfPlantedBombs() : std::vector<BombPlanted>*
	+Clean() : void
	+Draw() : void
	+Update(float dt) : void
}


abstract class entities.creatures.Creature {
	+Creature(Properties* props)
	#m_Health : int
	#m_Speed : int
	#m_Name : std::string
	+{abstract} Clean() : void
	+{abstract} Draw() : void
	+{abstract} Update(float dt) : void
}

class entities.creatures.Player {
	+Player(Properties* props)
	-m_Animation : Animation*
	-m_DrawManager : DrawManager*
	-m_bombPlaced : bool
	-m_getBombed : bool
	-m_putBomb : bool
	+GetBomb() : int
	+GetBombCol() : int
	+GetHealth() : int
	-m_Health : int
	-m_Speed : int
	-m_bombCollectable : int
	-m_bombHeld : int
	-m_bombx : int
	-m_bomby : int
	-m_pid : int
	-newX : int
	-newY : int
	+{static} s_AlrPressedP1 : static bool
	+{static} s_AlrPressedP2 : static bool
	+{static} s_countdown : static bool
	+{static} s_PlayerCount : static int
	+{static} s_p1facing : static int
	+{static} s_p2facing : static int
	+{static} s_start : static long
	+Clean() : void
	+Draw() : void
	+GetInput() : void
	+Update(float dt) : void
	+bombCountdown() : void
	+collectBomb() : void
	+getBombedAnimation() : void
	+getCurrentAnimation() : void
	+placeBombCountdown(BombPlanted bombPlanted) : void
	+plantBomb() : void
	+takeDamage() : void
}

class gfx.Animation {
	+Animation()
	-m_Flip : SDL_RendererFlip
	-m_AnimSpeed : int
	-m_FrameCount : int
	-m_SpriteCol : int
	-m_SpriteFrame : int
	-m_SpriteRow : int
	-m_TextureID : std::string
	+Draw(float x, float y, int spriteWidth, int spriteHeight) : void
	+SetProperties(std::string textureID, int spriteRow, int spriteCol, int frameCount, int animSpeed, SDL_RendererFlip flip) : void
	+Update() : void
}


class gfx.DrawManager {
	+DrawManager()
	+GetPosition() : Vector2D
	-m_Force : Vector2D
	-m_Position : Vector2D
	+ApplyForce(Vector2D F) : void
	+ApplyForceX(int Fx) : void
	+ApplyForceY(int Fy) : void
	+UnsetForce() : void
	+Update() : void
}

abstract class world.Layer {
	+{abstract} Render() : void
	+{abstract} Update() : void
}


class world.MapParser {
	-MapParser()
	+GetMap(std::string id) : GameMap*
	+{static} GetInstance() : MapParser*
	-ParseTileLayer(TiXmlElement* xmlLayer, std::vector<Tileset> tilesets, int tilesize, int rowcount, int colcount) : TileLayer*
	-ParseTileset(TiXmlElement* xmlTileset) : Tileset
	+Load() : bool
	-Parse(std::string id, std::string source) : bool
	-{static} s_Instance : static MapParser*
	-m_MapDict : std::map<std::string, GameMap*>
	+Clean() : void
}


class states.Menu {
	-Menu()
	+{static} GetInstance() : Menu*
	+GetRenderer() : SDL_Renderer*
	-m_Renderer : SDL_Renderer*
	-m_Window : SDL_Window*
	+Clean() : bool
	+Init() : bool
	+IsRunning() : bool
	-m_IsRunning : bool
	-{static} s_Instance : static Menu*
	+{static} s_AlrPressedSpace : static bool
	+Events() : void
	+Quit() : void
	+Render() : void
}

class gfx.TextureManager {
	-TextureManager()
	+GetTexture(std::string id) : SDL_Texture*
	+GetFont(std::string) : TTF_Font*
	+{static} GetInstance() : TextureManager*
	+Load(std::string id, std::string filename) : bool
	-{static} s_Instance : static TextureManager*
	-m_TextureMap : std::map<std::string, SDL_Texture*>
	-fonts : std::map<std::string, TTF_Font*>
	+AddFont(std::string, std::string, int) : void
	+Clean() : void
	+Draw(std::string id, int x, int y, int width, int height, int row, int col, SDL_RendererFlip flip) : void
	+DrawFrame(std::string id, int x, int y, int width, int height, int row, int col, int frame, SDL_RendererFlip flip) : void
	+DrawIcon(std::string id, int x, int y, int width, int height, int row, int col, SDL_RendererFlip flip) : void
	+DrawTile(std::string tilesetID, int tileSize, int x, int y, int row, int frame, SDL_RendererFlip flip) : void
	+Drop(std::string id) : void
}


class gfx.Transform {
	+Transform(int x, int y)
	+X : int
	+Y : int
	+Log(std::string msg) : void
	+Translate(Vector2D v) : void
	+TranslateX(int x) : void
	+TranslateY(int y) : void
}


class gfx.Vector2D {
	+Vector2D(int x, int y)
	+operator+(const Vector2D& v2) : Vector2D {query}
	+operator-(const Vector2D& v2) : Vector2D {query}
	+X : int
	+Y : int
	+Log(std::string msg) : void
}

class entities.Properties {
	+Properties(std::string textureID, int x, int y, int width, int height, SDL_RendererFlip flip)
	+Flip : SDL_RendererFlip
	+Height : int
	+PrevX : int
	+PrevY : int
	+Width : int
	+X : int
	+Y : int
	+TextureID : std::string
}

class states.Game {
	-Game()
	+{static} GetInstance() : Game*
	+GetMap() : GameMap*
	-m_LevelMap : GameMap*
	+GetRenderer() : SDL_Renderer*
	-m_Renderer : SDL_Renderer*
	-m_Window : SDL_Window*
	+Clean() : bool
	+Init() : bool
	+IsRunning() : bool
	+getPlayAgain() : bool
	+getWhoWins() : bool
	-m_IsRunning : bool
	-{static} s_Instance : static Game*
	+{static} gameOver : static bool
	+{static} playAgain : static bool
	+{static} s_AlrPressedSpace : static bool
	+{static} whoWins : static bool
	+GetBombItemList() : std::vector<BombCollectable>*
	+GetBombPlantedList() : std::vector<BombPlanted>*
	+BombPlayer(int m_pid) : void
	+CollectBomb(int m_pid) : void
	+Events() : void
	+PlantBomb(int m_pid) : void
	+Quit() : void
	+Render() : void
	+SpawnItem() : void
	+Update() : void
}

class interfaces.Board {
	-Board()
	+{static} GetInstance() : Board*
	+canPlayerMove(int m_pid, int prevX, int prevY, int newX, int newY) : bool
	+canPlayerPlant(int m_pid, int prevX, int prevY) : bool
	+consoleBoard() : bool
	+initBoard() : bool
	+updateBoardMove(int m_pid, int prevX, int prevY, int newX, int newY) : bool
	+updateBoardPlant(int m_pid, int prevX, int prevY) : bool
	+getTileID(int x, int y) : int
	-m_board : int
	-{static} s_Instance : static Board*
	+updateBoardWithItem(int x, int y, int iid) : void
}


class world.GameMap {
	+GameMap()
	+GetLayers() : std::vector<Layer*>
	-m_MapLayers : std::vector<Layer*>
	+Render() : void
	+Update() : void
}

class gfx.UILabel {
	+UILabel(int xpos, int ypos, std::string text, std::string font, SDL_Color& colour)
	-textColour : SDL_Color
	-position : SDL_Rect
	-labelTexture : SDL_Texture*
	-labelFont : std::string
	-labelText : std::string
	+SetLabelText(std::string text, std::string font) : void
	+draw() : void
}

class world.Tile {
	-Tile()
	-{static} s_Instance : static Tile*
	-m_Tile : std::map<std::string, SDL_Texture*>
}


class world.TileLayer {
	+TileLayer(int tilesize, int width, int height, vector<std::vector<int>> tilemap, vector<Tileset> tilesets)
	+GetTileMap() : TileMap
	-m_ColCount : int
	-m_RowCount : int
	-m_TileSize : int
	-m_Tilesets : vector<Tileset>
	-m_Tilemap : vector<std::vector<int>>
	+Render() : void
	+Update() : void
}

class world.Tileset {
	+ColCount : int
	+FirstID : int
	+LastID : int
	+RowCount : int
	+TileCount : int
	+TileSize : int
	+Name : std::string
	+Source : std::string
}

class utils.IOHandler {
	-IOHandler()
	+{static} GetInstance() : IOHandler*
	+KeyPressed(SDL_Scancode key) : bool
	+KeyReleased(SDL_Scancode key) : bool
	-m_KeyStates : const Uint8*
	-{static} s_Instance : static IOHandler*
	-KeyDown() : void
	-KeyUp() : void
	+Listen() : void
}


abstract class utils.IOObject {
	+{abstract} Clean() : void
	+{abstract} Draw() : void
	+{abstract} Update(float dt) : void
}

class utils.ItemTimer {
	+ItemTimer()
	+getReadyToSpawn() : bool
	+getTimerHasStarted() : bool
	-m_ReadyToSpawn : bool
	-m_TimerHasStarted : bool
	-intRand(const int& min, const int& max) : int
	-m_timerThread : std::thread
	+setReadyToSpawn(bool val) : void
	+setTimerHasStarted(bool val) : void
	+startTimer() : void
	+stopTimer() : void
}

/' Inheritance relationships '/

.entities.creatures.Creature <|- - .entities.creatures.Player


.entities.Entity <|- - .entities.creatures.Creature


.entities.Entity <|- - .entities.items.Item


.utils.IOObject <|- - .entities.Entity


.entities.items.Item <|- - .entities.items.BombCollectable


.entities.items.Item <|- - .entities.items.BombPlanted


.world.Layer <|- - .world.TileLayer

/' Aggregation relationships '/


.entities.items.BombCollectable o- - .gfx.TextureManager


.entities.items.BombPlanted o- - .gfx.Animation


.gfx.DrawManager o- - .gfx.Vector2D


.entities.Entity o- - .gfx.Transform


.states.Game o- - .world.GameMap


.world.GameMap o- - .world.Layer


.world.MapParser o- - .world.GameMap


.entities.creatures.Player o- - .gfx.Animation


.entities.creatures.Player o- - .gfx.DrawManager


.gfx.Animation o- - .gfx.TextureManager


.world.TileLayer *- - .world.Tileset


/' Nested objects '/


@enduml

@startuml
abstract class entities.Entity {
	+Entity(Properties* props)
	#m_Flip : SDL_RendererFlip
	#m_Transform : Transform*
	#m_Height : int
	#m_Width : int
	#m_TextureID : std::string
	+{abstract} Clean() : void
	+{abstract} Draw() : void
	+{abstract} Update(float dt) : void
}

abstract class entities.items.Item {
	+Item(Properties* props)
	+getItemX() : int
	+getItemY() : int
	+{abstract} Clean() : void
	+{abstract} Draw() : void
	+{abstract} Update(float dt) : void
}

class entities.items.BombCollectable {
	+BombCollectable(Properties* props)
	-m_BombItemTextureM : TextureManager*
	-m_ItemBombID : int
	-m_NumBombsSpawned : int
	-s_BombsSpawnedList : std::vector<BombCollectable>
	+getListOfSpawnedBombs() : std::vector<BombCollectable>*
	+Clean() : void
	+Draw() : void
	+Update(float dt) : void
}


class entities.items.BombPlanted {
	+BombPlanted(Properties* props)
	-m_BombAnimation : Animation*
	-m_PlantedBombTexture : SDL_Texture*
	+m_countDown : bool
	+m_isBombPlanted : bool
	+m_start : long
	+{static} s_bombID : static int
	+GetBombPlantedTextureName() : std::string
	-textureName : std::string
	-s_PlantedBombList : std::vector<BombPlanted>
	+getListOfPlantedBombs() : std::vector<BombPlanted>*
	+Clean() : void
	+Draw() : void
	+Update(float dt) : void
}


abstract class entities.creatures.Creature {
	+Creature(Properties* props)
	#m_Health : int
	#m_Speed : int
	#m_Name : std::string
	+{abstract} Clean() : void
	+{abstract} Draw() : void
	+{abstract} Update(float dt) : void
}

class entities.creatures.Player {
	+Player(Properties* props)
	-m_Animation : Animation*
	-m_DrawManager : DrawManager*
	-m_bombPlaced : bool
	-m_getBombed : bool
	-m_putBomb : bool
	+GetBomb() : int
	+GetBombCol() : int
	+GetHealth() : int
	-m_Health : int
	-m_Speed : int
	-m_bombCollectable : int
	-m_bombHeld : int
	-m_bombx : int
	-m_bomby : int
	-m_pid : int
	-newX : int
	-newY : int
	+{static} s_AlrPressedP1 : static bool
	+{static} s_AlrPressedP2 : static bool
	+{static} s_countdown : static bool
	+{static} s_PlayerCount : static int
	+{static} s_p1facing : static int
	+{static} s_p2facing : static int
	+{static} s_start : static long
	+Clean() : void
	+Draw() : void
	+GetInput() : void
	+Update(float dt) : void
	+bombCountdown() : void
	+collectBomb() : void
	+getBombedAnimation() : void
	+getCurrentAnimation() : void
	+placeBombCountdown(BombPlanted bombPlanted) : void
	+plantBomb() : void
	+takeDamage() : void
}

class gfx.Animation {
	+Animation()
	-m_Flip : SDL_RendererFlip
	-m_AnimSpeed : int
	-m_FrameCount : int
	-m_SpriteCol : int
	-m_SpriteFrame : int
	-m_SpriteRow : int
	-m_TextureID : std::string
	+Draw(float x, float y, int spriteWidth, int spriteHeight) : void
	+SetProperties(std::string textureID, int spriteRow, int spriteCol, int frameCount, int animSpeed, SDL_RendererFlip flip) : void
	+Update() : void
}


class gfx.DrawManager {
	+DrawManager()
	+GetPosition() : Vector2D
	-m_Force : Vector2D
	-m_Position : Vector2D
	+ApplyForce(Vector2D F) : void
	+ApplyForceX(int Fx) : void
	+ApplyForceY(int Fy) : void
	+UnsetForce() : void
	+Update() : void
}

abstract class world.Layer {
	+{abstract} Render() : void
	+{abstract} Update() : void
}


class world.MapParser {
	-MapParser()
	+GetMap(std::string id) : GameMap*
	+{static} GetInstance() : MapParser*
	-ParseTileLayer(TiXmlElement* xmlLayer, std::vector<Tileset> tilesets, int tilesize, int rowcount, int colcount) : TileLayer*
	-ParseTileset(TiXmlElement* xmlTileset) : Tileset
	+Load() : bool
	-Parse(std::string id, std::string source) : bool
	-{static} s_Instance : static MapParser*
	-m_MapDict : std::map<std::string, GameMap*>
	+Clean() : void
}


class states.Menu {
	-Menu()
	+{static} GetInstance() : Menu*
	+GetRenderer() : SDL_Renderer*
	-m_Renderer : SDL_Renderer*
	-m_Window : SDL_Window*
	+Clean() : bool
	+Init() : bool
	+IsRunning() : bool
	-m_IsRunning : bool
	-{static} s_Instance : static Menu*
	+{static} s_AlrPressedSpace : static bool
	+Events() : void
	+Quit() : void
	+Render() : void
}

class gfx.TextureManager {
	-TextureManager()
	+GetTexture(std::string id) : SDL_Texture*
	+GetFont(std::string) : TTF_Font*
	+{static} GetInstance() : TextureManager*
	+Load(std::string id, std::string filename) : bool
	-{static} s_Instance : static TextureManager*
	-m_TextureMap : std::map<std::string, SDL_Texture*>
	-fonts : std::map<std::string, TTF_Font*>
	+AddFont(std::string, std::string, int) : void
	+Clean() : void
	+Draw(std::string id, int x, int y, int width, int height, int row, int col, SDL_RendererFlip flip) : void
	+DrawFrame(std::string id, int x, int y, int width, int height, int row, int col, int frame, SDL_RendererFlip flip) : void
	+DrawIcon(std::string id, int x, int y, int width, int height, int row, int col, SDL_RendererFlip flip) : void
	+DrawTile(std::string tilesetID, int tileSize, int x, int y, int row, int frame, SDL_RendererFlip flip) : void
	+Drop(std::string id) : void
}


class gfx.Transform {
	+Transform(int x, int y)
	+X : int
	+Y : int
	+Log(std::string msg) : void
	+Translate(Vector2D v) : void
	+TranslateX(int x) : void
	+TranslateY(int y) : void
}


class gfx.Vector2D {
	+Vector2D(int x, int y)
	+operator+(const Vector2D& v2) : Vector2D {query}
	+operator-(const Vector2D& v2) : Vector2D {query}
	+X : int
	+Y : int
	+Log(std::string msg) : void
}

class entities.Properties {
	+Properties(std::string textureID, int x, int y, int width, int height, SDL_RendererFlip flip)
	+Flip : SDL_RendererFlip
	+Height : int
	+PrevX : int
	+PrevY : int
	+Width : int
	+X : int
	+Y : int
	+TextureID : std::string
}

class states.Game {
	-Game()
	+{static} GetInstance() : Game*
	+GetMap() : GameMap*
	-m_LevelMap : GameMap*
	+GetRenderer() : SDL_Renderer*
	-m_Renderer : SDL_Renderer*
	-m_Window : SDL_Window*
	+Clean() : bool
	+Init() : bool
	+IsRunning() : bool
	+getPlayAgain() : bool
	+getWhoWins() : bool
	-m_IsRunning : bool
	-{static} s_Instance : static Game*
	+{static} gameOver : static bool
	+{static} playAgain : static bool
	+{static} s_AlrPressedSpace : static bool
	+{static} whoWins : static bool
	+GetBombItemList() : std::vector<BombCollectable>*
	+GetBombPlantedList() : std::vector<BombPlanted>*
	+BombPlayer(int m_pid) : void
	+CollectBomb(int m_pid) : void
	+Events() : void
	+PlantBomb(int m_pid) : void
	+Quit() : void
	+Render() : void
	+SpawnItem() : void
	+Update() : void
}

class interfaces.Board {
	-Board()
	+{static} GetInstance() : Board*
	+canPlayerMove(int m_pid, int prevX, int prevY, int newX, int newY) : bool
	+canPlayerPlant(int m_pid, int prevX, int prevY) : bool
	+consoleBoard() : bool
	+initBoard() : bool
	+updateBoardMove(int m_pid, int prevX, int prevY, int newX, int newY) : bool
	+updateBoardPlant(int m_pid, int prevX, int prevY) : bool
	+getTileID(int x, int y) : int
	-m_board : int
	-{static} s_Instance : static Board*
	+updateBoardWithItem(int x, int y, int iid) : void
}


class world.GameMap {
	+GameMap()
	+GetLayers() : std::vector<Layer*>
	-m_MapLayers : std::vector<Layer*>
	+Render() : void
	+Update() : void
}

class gfx.UILabel {
	+UILabel(int xpos, int ypos, std::string text, std::string font, SDL_Color& colour)
	-textColour : SDL_Color
	-position : SDL_Rect
	-labelTexture : SDL_Texture*
	-labelFont : std::string
	-labelText : std::string
	+SetLabelText(std::string text, std::string font) : void
	+draw() : void
}

class world.Tile {
	-Tile()
	-{static} s_Instance : static Tile*
	-m_Tile : std::map<std::string, SDL_Texture*>
}


class world.TileLayer {
	+TileLayer(int tilesize, int width, int height, vector<std::vector<int>> tilemap, vector<Tileset> tilesets)
	+GetTileMap() : TileMap
	-m_ColCount : int
	-m_RowCount : int
	-m_TileSize : int
	-m_Tilesets : vector<Tileset>
	-m_Tilemap : vector<std::vector<int>>
	+Render() : void
	+Update() : void
}

class world.Tileset {
	+ColCount : int
	+FirstID : int
	+LastID : int
	+RowCount : int
	+TileCount : int
	+TileSize : int
	+Name : std::string
	+Source : std::string
}

class utils.IOHandler {
	-IOHandler()
	+{static} GetInstance() : IOHandler*
	+KeyPressed(SDL_Scancode key) : bool
	+KeyReleased(SDL_Scancode key) : bool
	-m_KeyStates : const Uint8*
	-{static} s_Instance : static IOHandler*
	-KeyDown() : void
	-KeyUp() : void
	+Listen() : void
}


abstract class utils.IOObject {
	+{abstract} Clean() : void
	+{abstract} Draw() : void
	+{abstract} Update(float dt) : void
}

class utils.ItemTimer {
	+ItemTimer()
	+getReadyToSpawn() : bool
	+getTimerHasStarted() : bool
	-m_ReadyToSpawn : bool
	-m_TimerHasStarted : bool
	-intRand(const int& min, const int& max) : int
	-m_timerThread : std::thread
	+setReadyToSpawn(bool val) : void
	+setTimerHasStarted(bool val) : void
	+startTimer() : void
	+stopTimer() : void
}


.entities.creatures.Creature <|- - .entities.creatures.Player


.entities.Entity <|- - .entities.creatures.Creature


.entities.Entity <|- - .entities.items.Item


.utils.IOObject <|- - .entities.Entity


.entities.items.Item <|- - .entities.items.BombCollectable


.entities.items.Item <|- - .entities.items.BombPlanted


.world.Layer <|- - .world.TileLayer



.entities.items.BombCollectable o- - .gfx.TextureManager


.entities.items.BombPlanted o- - .gfx.Animation


.gfx.DrawManager o- - .gfx.Vector2D


.entities.Entity o- - .gfx.Transform


.states.Game o- - .world.GameMap


.world.GameMap o- - .world.Layer


.world.MapParser o- - .world.GameMap


.entities.creatures.Player o- - .gfx.Animation


.entities.creatures.Player o- - .gfx.DrawManager


.gfx.Animation o- - .gfx.TextureManager


.world.TileLayer *- - .world.Tileset




@enduml

PlantUML version 1.2021.01(Tue Feb 02 15:55:08 SGT 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: SG
--></g></svg>