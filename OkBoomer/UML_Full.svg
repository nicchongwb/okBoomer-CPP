<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2181px" preserveAspectRatio="none" style="width:3277px;height:2181px;" version="1.1" viewBox="0 0 3277 2181" width="3277px" zoomAndPan="magnify"><defs><filter height="300%" id="f1qtde1bwp7gow" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[2a013135f1f90689be40a3c084fed702]
cluster entities--><polygon fill="#FFFFFF" filter="url(#f1qtde1bwp7gow)" points="886,517,945,517,952,540.6094,1542,540.6094,1542,742,886,742,886,517" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="886" x2="952" y1="540.6094" y2="540.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="53" x="890" y="533.5332">entities</text><!--MD5=[1cda01132c61fe02d01ee0e1238bf64b]
cluster entities.items--><polygon fill="#FFFFFF" filter="url(#f1qtde1bwp7gow)" points="552,786.5,653,786.5,660,810.1094,1219,810.1094,1219,1430.5,552,1430.5,552,786.5" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="552" x2="660" y1="810.1094" y2="810.1094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="95" x="556" y="803.0332">entities.items</text><!--MD5=[b47934f7eddf50b05bebba079a2d5c33]
cluster entities.creatures--><polygon fill="#FFFFFF" filter="url(#f1qtde1bwp7gow)" points="1284,779.5,1415,779.5,1422,803.1094,1614,803.1094,1614,1582.5,1284,1582.5,1284,779.5" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1284" x2="1422" y1="803.1094" y2="803.1094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="125" x="1288" y="796.0332">entities.creatures</text><!--MD5=[67f236fd0af0b11b2ef5a832d8415319]
cluster gfx--><polygon fill="#FFFFFF" filter="url(#f1qtde1bwp7gow)" points="303,1606.5,331,1606.5,338,1630.1094,1791,1630.1094,1791,2174.5,303,2174.5,303,1606.5" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="303" x2="338" y1="1630.1094" y2="1630.1094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="22" x="307" y="1623.0332">gfx</text><!--MD5=[38fe1c859229b9f23ba24ebfd54228a3]
cluster world--><polygon fill="#FFFFFF" filter="url(#f1qtde1bwp7gow)" points="1815,130.5,1860,130.5,1867,154.1094,2717,154.1094,2717,1838,1815,1838,1815,130.5" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="1815" x2="1867" y1="154.1094" y2="154.1094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="39" x="1819" y="147.0332">world</text><!--MD5=[61ef0e7cedb036059990bfe942fe9360]
cluster states--><polygon fill="#FFFFFF" filter="url(#f1qtde1bwp7gow)" points="2741,6,2790,6,2797,29.6094,3260,29.6094,3260,493,2741,493,2741,6" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="2741" x2="2797" y1="29.6094" y2="29.6094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="43" x="2745" y="22.5332">states</text><!--MD5=[c52f45833d539af9e29a9d34b8b7302b]
cluster utils--><polygon fill="#FFFFFF" filter="url(#f1qtde1bwp7gow)" points="16,116.5,52,116.5,59,140.1094,862,140.1094,862,755.5,16,755.5,16,116.5" style="stroke:#000000;stroke-width:1.5;"/><line style="stroke:#000000;stroke-width:1.5;" x1="16" x2="59" y1="140.1094" y2="140.1094"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="30" x="20" y="133.0332">utils</text><!--MD5=[6ea7ee656260804a75c4cf9e9f7baa9f]
class entities.Entity--><rect codeLine="2" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="172.5234" id="entities.Entity" style="stroke:#A80036;stroke-width:1.5;" width="153" x="1372.5" y="553"/><ellipse cx="1429.75" cy="569" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1431.5,570.5 L1428.2031,570.5 L1427.7656,571.5 L1427.7656,571.5 L1428.2344,571.5 L1428.75,572.125 L1428.75,572.5 L1428.75,572.875 L1428.2344,573.5 L1427.7656,573.5 L1425.875,573.5 L1425.2656,573.5 L1424.75,572.875 L1424.75,572.5 L1424.75,572.125 L1425.2656,571.5 L1425.875,571.5 L1428.1875,565.5 L1427.3125,565.5 L1426.2656,565.5 L1425.75,564.875 L1425.75,564.5 L1425.75,564.125 L1426.2656,563.5 L1427.3125,563.5 L1430.9844,563.5 L1433.6719,571.5 L1434.2344,571.5 L1434.2344,571.5 L1434.75,572.125 L1434.75,572.5 L1434.75,572.875 L1434.2344,573.5 L1433.6719,573.5 L1431.7813,573.5 L1431.2656,573.5 L1430.75,572.875 L1430.75,572.5 L1430.75,572.125 L1431.2656,571.5 L1431.7813,571.5 L1431.7813,571.5 L1431.5,570.5 Z M1430.9531,568.5 L1429.75,564.9219 L1428.7188,568.5 L1430.9531,568.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="30" x="1450.25" y="573.9102">Entity</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1373.5" x2="1524.5" y1="585" y2="585"/><polygon fill="none" points="1383.5,591,1387.5,595,1383.5,599,1379.5,595" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="1392.5" y="600.4189">m_Flip : SDL_RendererFlip</text><polygon fill="none" points="1383.5,604.8359,1387.5,608.8359,1383.5,612.8359,1379.5,608.8359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="1392.5" y="614.2549">m_Transform : Transform*</text><polygon fill="none" points="1383.5,618.6719,1387.5,622.6719,1383.5,626.6719,1379.5,622.6719" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="1392.5" y="628.0908">m_Height : int</text><polygon fill="none" points="1383.5,632.5078,1387.5,636.5078,1383.5,640.5078,1379.5,636.5078" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="1392.5" y="641.9268">m_Width : int</text><polygon fill="none" points="1383.5,646.3438,1387.5,650.3438,1383.5,654.3438,1379.5,650.3438" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="1392.5" y="655.7627">m_TextureID : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1373.5" x2="1524.5" y1="662.1797" y2="662.1797"/><ellipse cx="1383.5" cy="673.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="1392.5" y="677.5986">Entity(Properties* props)</text><ellipse cx="1383.5" cy="687.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="66" x="1392.5" y="691.4346">Clean() : void</text><ellipse cx="1383.5" cy="700.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="62" x="1392.5" y="705.2705">Draw() : void</text><ellipse cx="1383.5" cy="714.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="104" x="1392.5" y="719.1064">Update(float dt) : void</text><!--MD5=[70e37a7b411d2923c69276d426f1144b]
class entities.Properties--><rect codeLine="206" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="172.5234" id="entities.Properties" style="stroke:#A80036;stroke-width:1.5;" width="435" x="902.5" y="553"/><ellipse cx="1087.25" cy="569" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1089.25,565.5 Q1089.4531,565 1089.6875,564.75 Q1089.9219,564.5 1090.1875,564.5 Q1090.6563,564.5 1090.9531,564.7813 Q1091.25,565.0625 1091.25,565.7188 L1091.25,567.2813 Q1091.25,567.9375 1090.9688,568.2188 Q1090.6875,568.5 1090.25,568.5 Q1089.8594,568.5 1089.6094,568.3281 Q1089.3594,568.1563 1089.25,567.7031 Q1089.2031,567.3906 1089.0313,567.2188 Q1088.7188,566.8906 1088.1563,566.7031 Q1087.5938,566.5 1087.0313,566.5 Q1086.3281,566.5 1085.7344,566.7813 Q1085.1563,567.0625 1084.7031,567.6875 Q1084.25,568.3125 1084.25,569.1719 L1084.25,570.0938 Q1084.25,571.125 1085.0938,571.8125 Q1085.9375,572.5 1087.4375,572.5 Q1088.3281,572.5 1088.9531,572.2969 Q1089.3125,572.1875 1089.7188,571.8281 Q1089.9844,571.625 1090.125,571.5625 Q1090.2656,571.5 1090.4375,571.5 Q1090.7656,571.5 1091,571.7656 Q1091.25,572.0156 1091.25,572.375 Q1091.25,572.7188 1090.9063,573.125 Q1090.4063,573.7188 1089.6094,574.0469 Q1088.5625,574.5 1087.2813,574.5 Q1085.7813,574.5 1084.5781,573.9063 Q1083.6094,573.4375 1082.9219,572.4219 Q1082.25,571.4063 1082.25,570.2031 L1082.25,569.1094 Q1082.25,567.8594 1082.8438,566.7656 Q1083.4531,565.6719 1084.5,565.0938 Q1085.5625,564.5 1086.75,564.5 Q1087.4688,564.5 1088.0938,564.75 Q1088.7188,565 1089.25,565.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="57" x="1107.75" y="573.9102">Properties</text><line style="stroke:#A80036;stroke-width:1.5;" x1="903.5" x2="1336.5" y1="585" y2="585"/><ellipse cx="913.5" cy="596" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="922.5" y="600.4189">Flip : SDL_RendererFlip</text><ellipse cx="913.5" cy="609.8359" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="922.5" y="614.2549">Height : int</text><ellipse cx="913.5" cy="623.6719" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="49" x="922.5" y="628.0908">PrevX : int</text><ellipse cx="913.5" cy="637.5078" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="922.5" y="641.9268">PrevY : int</text><ellipse cx="913.5" cy="651.3438" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="47" x="922.5" y="655.7627">Width : int</text><ellipse cx="913.5" cy="665.1797" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="27" x="922.5" y="669.5986">X : int</text><ellipse cx="913.5" cy="679.0156" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="28" x="922.5" y="683.4346">Y : int</text><ellipse cx="913.5" cy="692.8516" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="103" x="922.5" y="697.2705">TextureID : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="903.5" x2="1336.5" y1="703.6875" y2="703.6875"/><ellipse cx="913.5" cy="714.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="409" x="922.5" y="719.1064">Properties(std::string textureID, int x, int y, int width, int height, SDL_RendererFlip flip)</text><!--MD5=[940610cbb1f849f08cd09d0d13097334]
class entities.items.Item--><rect codeLine="14" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="131.0156" id="entities.items.Item" style="stroke:#A80036;stroke-width:1.5;" width="137" x="991.5" y="822.5"/><ellipse cx="1043.25" cy="838.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1045,840 L1041.7031,840 L1041.2656,841 L1041.2656,841 L1041.7344,841 L1042.25,841.625 L1042.25,842 L1042.25,842.375 L1041.7344,843 L1041.2656,843 L1039.375,843 L1038.7656,843 L1038.25,842.375 L1038.25,842 L1038.25,841.625 L1038.7656,841 L1039.375,841 L1041.6875,835 L1040.8125,835 L1039.7656,835 L1039.25,834.375 L1039.25,834 L1039.25,833.625 L1039.7656,833 L1040.8125,833 L1044.4844,833 L1047.1719,841 L1047.7344,841 L1047.7344,841 L1048.25,841.625 L1048.25,842 L1048.25,842.375 L1047.7344,843 L1047.1719,843 L1045.2813,843 L1044.7656,843 L1044.25,842.375 L1044.25,842 L1044.25,841.625 L1044.7656,841 L1045.2813,841 L1045.2813,841 L1045,840 Z M1044.4531,838 L1043.25,834.4219 L1042.2188,838 L1044.4531,838 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="25" x="1063.75" y="843.4102">Item</text><line style="stroke:#A80036;stroke-width:1.5;" x1="992.5" x2="1127.5" y1="854.5" y2="854.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="992.5" x2="1127.5" y1="862.5" y2="862.5"/><ellipse cx="1002.5" cy="873.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="1011.5" y="877.9189">Item(Properties* props)</text><ellipse cx="1002.5" cy="887.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="69" x="1011.5" y="891.7549">getItemX() : int</text><ellipse cx="1002.5" cy="901.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="70" x="1011.5" y="905.5908">getItemY() : int</text><ellipse cx="1002.5" cy="915.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="66" x="1011.5" y="919.4268">Clean() : void</text><ellipse cx="1002.5" cy="928.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="62" x="1011.5" y="933.2627">Draw() : void</text><ellipse cx="1002.5" cy="942.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="104" x="1011.5" y="947.0986">Update(float dt) : void</text><!--MD5=[20708c2183c059c6e7611171a8a57f32]
class entities.items.BombCollectable--><rect codeLine="23" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="172.5234" id="entities.items.BombCollectable" style="stroke:#A80036;stroke-width:1.5;" width="314" x="568" y="1207"/><ellipse cx="673.25" cy="1223" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M675.25,1219.5 Q675.4531,1219 675.6875,1218.75 Q675.9219,1218.5 676.1875,1218.5 Q676.6563,1218.5 676.9531,1218.7813 Q677.25,1219.0625 677.25,1219.7188 L677.25,1221.2813 Q677.25,1221.9375 676.9688,1222.2188 Q676.6875,1222.5 676.25,1222.5 Q675.8594,1222.5 675.6094,1222.3281 Q675.3594,1222.1563 675.25,1221.7031 Q675.2031,1221.3906 675.0313,1221.2188 Q674.7188,1220.8906 674.1563,1220.7031 Q673.5938,1220.5 673.0313,1220.5 Q672.3281,1220.5 671.7344,1220.7813 Q671.1563,1221.0625 670.7031,1221.6875 Q670.25,1222.3125 670.25,1223.1719 L670.25,1224.0938 Q670.25,1225.125 671.0938,1225.8125 Q671.9375,1226.5 673.4375,1226.5 Q674.3281,1226.5 674.9531,1226.2969 Q675.3125,1226.1875 675.7188,1225.8281 Q675.9844,1225.625 676.125,1225.5625 Q676.2656,1225.5 676.4375,1225.5 Q676.7656,1225.5 677,1225.7656 Q677.25,1226.0156 677.25,1226.375 Q677.25,1226.7188 676.9063,1227.125 Q676.4063,1227.7188 675.6094,1228.0469 Q674.5625,1228.5 673.2813,1228.5 Q671.7813,1228.5 670.5781,1227.9063 Q669.6094,1227.4375 668.9219,1226.4219 Q668.25,1225.4063 668.25,1224.2031 L668.25,1223.1094 Q668.25,1221.8594 668.8438,1220.7656 Q669.4531,1219.6719 670.5,1219.0938 Q671.5625,1218.5 672.75,1218.5 Q673.4688,1218.5 674.0938,1218.75 Q674.7188,1219 675.25,1219.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="95" x="693.75" y="1227.9102">BombCollectable</text><line style="stroke:#A80036;stroke-width:1.5;" x1="569" x2="881" y1="1239" y2="1239"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="576" y="1247"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="588" y="1254.4189">m_BombItemTextureM : TextureManager*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="576" y="1260.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="588" y="1268.2549">m_ItemBombID : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="576" y="1274.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="135" x="588" y="1282.0908">m_NumBombsSpawned : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="576" y="1288.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="588" y="1295.9268">s_BombsSpawnedList : std::vector&lt;BombCollectable&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="569" x2="881" y1="1302.3438" y2="1302.3438"/><ellipse cx="579" cy="1313.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="171" x="588" y="1317.7627">BombCollectable(Properties* props)</text><ellipse cx="579" cy="1327.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="588" y="1331.5986">getListOfSpawnedBombs() : std::vector&lt;BombCollectable&gt;*</text><ellipse cx="579" cy="1341.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="588" y="1345.4346">Clean() : void</text><ellipse cx="579" cy="1354.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="588" y="1359.2705">Draw() : void</text><ellipse cx="579" cy="1368.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="588" y="1373.1064">Update(float dt) : void</text><!--MD5=[165d5a49fb56ee5d873275063b7611fd]
class entities.items.BombPlanted--><rect codeLine="36" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="241.7031" id="entities.items.BombPlanted" style="stroke:#A80036;stroke-width:1.5;" width="285" x="917.5" y="1172.5"/><ellipse cx="1018.25" cy="1188.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1020.25,1185 Q1020.4531,1184.5 1020.6875,1184.25 Q1020.9219,1184 1021.1875,1184 Q1021.6563,1184 1021.9531,1184.2813 Q1022.25,1184.5625 1022.25,1185.2188 L1022.25,1186.7813 Q1022.25,1187.4375 1021.9688,1187.7188 Q1021.6875,1188 1021.25,1188 Q1020.8594,1188 1020.6094,1187.8281 Q1020.3594,1187.6563 1020.25,1187.2031 Q1020.2031,1186.8906 1020.0313,1186.7188 Q1019.7188,1186.3906 1019.1563,1186.2031 Q1018.5938,1186 1018.0313,1186 Q1017.3281,1186 1016.7344,1186.2813 Q1016.1563,1186.5625 1015.7031,1187.1875 Q1015.25,1187.8125 1015.25,1188.6719 L1015.25,1189.5938 Q1015.25,1190.625 1016.0938,1191.3125 Q1016.9375,1192 1018.4375,1192 Q1019.3281,1192 1019.9531,1191.7969 Q1020.3125,1191.6875 1020.7188,1191.3281 Q1020.9844,1191.125 1021.125,1191.0625 Q1021.2656,1191 1021.4375,1191 Q1021.7656,1191 1022,1191.2656 Q1022.25,1191.5156 1022.25,1191.875 Q1022.25,1192.2188 1021.9063,1192.625 Q1021.4063,1193.2188 1020.6094,1193.5469 Q1019.5625,1194 1018.2813,1194 Q1016.7813,1194 1015.5781,1193.4063 Q1014.6094,1192.9375 1013.9219,1191.9219 Q1013.25,1190.9063 1013.25,1189.7031 L1013.25,1188.6094 Q1013.25,1187.3594 1013.8438,1186.2656 Q1014.4531,1185.1719 1015.5,1184.5938 Q1016.5625,1184 1017.75,1184 Q1018.4688,1184 1019.0938,1184.25 Q1019.7188,1184.5 1020.25,1185 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="75" x="1038.75" y="1193.4102">BombPlanted</text><line style="stroke:#A80036;stroke-width:1.5;" x1="918.5" x2="1201.5" y1="1204.5" y2="1204.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="925.5" y="1212.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="937.5" y="1219.9189">m_BombAnimation : Animation*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="925.5" y="1226.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="189" x="937.5" y="1233.7549">m_PlantedBombTexture : SDL_Texture*</text><ellipse cx="928.5" cy="1243.1719" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="937.5" y="1247.5908">m_countDown : bool</text><ellipse cx="928.5" cy="1257.0078" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="937.5" y="1261.4268">m_isBombPlanted : bool</text><ellipse cx="928.5" cy="1270.8438" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="937.5" y="1275.2627">m_start : long</text><ellipse cx="928.5" cy="1284.6797" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="96" x="937.5" y="1289.0986">s_bombID : static int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="925.5" y="1295.5156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="937.5" y="1302.9346">textureName : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="925.5" y="1309.3516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="937.5" y="1316.7705">s_PlantedBombList : std::vector&lt;BombPlanted&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="918.5" x2="1201.5" y1="1323.1875" y2="1323.1875"/><ellipse cx="928.5" cy="1334.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="937.5" y="1338.6064">BombPlanted(Properties* props)</text><ellipse cx="928.5" cy="1348.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="208" x="937.5" y="1352.4424">GetBombPlantedTextureName() : std::string</text><ellipse cx="928.5" cy="1361.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="937.5" y="1366.2783">getListOfPlantedBombs() : std::vector&lt;BombPlanted&gt;*</text><ellipse cx="928.5" cy="1375.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="937.5" y="1380.1143">Clean() : void</text><ellipse cx="928.5" cy="1389.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="937.5" y="1393.9502">Draw() : void</text><ellipse cx="928.5" cy="1403.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="937.5" y="1407.7861">Update(float dt) : void</text><!--MD5=[fff4fbefb74200d5cc792fdc24d62f59]
class entities.creatures.Creature--><rect codeLine="54" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="144.8516" id="entities.creatures.Creature" style="stroke:#A80036;stroke-width:1.5;" width="160" x="1369" y="815.5"/><ellipse cx="1420.75" cy="831.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1422.5,833 L1419.2031,833 L1418.7656,834 L1418.7656,834 L1419.2344,834 L1419.75,834.625 L1419.75,835 L1419.75,835.375 L1419.2344,836 L1418.7656,836 L1416.875,836 L1416.2656,836 L1415.75,835.375 L1415.75,835 L1415.75,834.625 L1416.2656,834 L1416.875,834 L1419.1875,828 L1418.3125,828 L1417.2656,828 L1416.75,827.375 L1416.75,827 L1416.75,826.625 L1417.2656,826 L1418.3125,826 L1421.9844,826 L1424.6719,834 L1425.2344,834 L1425.2344,834 L1425.75,834.625 L1425.75,835 L1425.75,835.375 L1425.2344,836 L1424.6719,836 L1422.7813,836 L1422.2656,836 L1421.75,835.375 L1421.75,835 L1421.75,834.625 L1422.2656,834 L1422.7813,834 L1422.7813,834 L1422.5,833 Z M1421.9531,831 L1420.75,827.4219 L1419.7188,831 L1421.9531,831 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="48" x="1441.25" y="836.4102">Creature</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1370" x2="1528" y1="847.5" y2="847.5"/><polygon fill="none" points="1380,853.5,1384,857.5,1380,861.5,1376,857.5" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="1389" y="862.9189">m_Health : int</text><polygon fill="none" points="1380,867.3359,1384,871.3359,1380,875.3359,1376,871.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="1389" y="876.7549">m_Speed : int</text><polygon fill="none" points="1380,881.1719,1384,885.1719,1380,889.1719,1376,885.1719" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="1389" y="890.5908">m_Name : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1370" x2="1528" y1="897.0078" y2="897.0078"/><ellipse cx="1380" cy="908.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="1389" y="912.4268">Creature(Properties* props)</text><ellipse cx="1380" cy="921.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="66" x="1389" y="926.2627">Clean() : void</text><ellipse cx="1380" cy="935.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="62" x="1389" y="940.0986">Draw() : void</text><ellipse cx="1380" cy="949.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="104" x="1389" y="953.9346">Update(float dt) : void</text><!--MD5=[79e611175aab30d878e28b1060269c5b]
class entities.creatures.Player--><rect codeLine="64" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="546.0938" id="entities.creatures.Player" style="stroke:#A80036;stroke-width:1.5;" width="298" x="1300" y="1020.5"/><ellipse cx="1427.75" cy="1036.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1429.75,1033 Q1429.9531,1032.5 1430.1875,1032.25 Q1430.4219,1032 1430.6875,1032 Q1431.1563,1032 1431.4531,1032.2813 Q1431.75,1032.5625 1431.75,1033.2188 L1431.75,1034.7813 Q1431.75,1035.4375 1431.4688,1035.7188 Q1431.1875,1036 1430.75,1036 Q1430.3594,1036 1430.1094,1035.8281 Q1429.8594,1035.6563 1429.75,1035.2031 Q1429.7031,1034.8906 1429.5313,1034.7188 Q1429.2188,1034.3906 1428.6563,1034.2031 Q1428.0938,1034 1427.5313,1034 Q1426.8281,1034 1426.2344,1034.2813 Q1425.6563,1034.5625 1425.2031,1035.1875 Q1424.75,1035.8125 1424.75,1036.6719 L1424.75,1037.5938 Q1424.75,1038.625 1425.5938,1039.3125 Q1426.4375,1040 1427.9375,1040 Q1428.8281,1040 1429.4531,1039.7969 Q1429.8125,1039.6875 1430.2188,1039.3281 Q1430.4844,1039.125 1430.625,1039.0625 Q1430.7656,1039 1430.9375,1039 Q1431.2656,1039 1431.5,1039.2656 Q1431.75,1039.5156 1431.75,1039.875 Q1431.75,1040.2188 1431.4063,1040.625 Q1430.9063,1041.2188 1430.1094,1041.5469 Q1429.0625,1042 1427.7813,1042 Q1426.2813,1042 1425.0781,1041.4063 Q1424.1094,1040.9375 1423.4219,1039.9219 Q1422.75,1038.9063 1422.75,1037.7031 L1422.75,1036.6094 Q1422.75,1035.3594 1423.3438,1034.2656 Q1423.9531,1033.1719 1425,1032.5938 Q1426.0625,1032 1427.25,1032 Q1427.9688,1032 1428.5938,1032.25 Q1429.2188,1032.5 1429.75,1033 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="34" x="1448.25" y="1041.4102">Player</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1301" x2="1597" y1="1052.5" y2="1052.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1308" y="1060.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="1320" y="1067.9189">m_Animation : Animation*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1308" y="1074.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="1320" y="1081.7549">m_DrawManager : DrawManager*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1308" y="1088.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="1320" y="1095.5908">m_bombPlaced : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1308" y="1102.0078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="1320" y="1109.4268">m_getBombed : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1308" y="1115.8438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="1320" y="1123.2627">m_putBomb : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1308" y="1129.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="1320" y="1137.0986">m_Health : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1308" y="1143.5156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="65" x="1320" y="1150.9346">m_Speed : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1308" y="1157.3516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="1320" y="1164.7705">m_bombCollectable : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1308" y="1171.1875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="81" x="1320" y="1178.6064">m_bombHeld : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1308" y="1185.0234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="1320" y="1192.4424">m_bombx : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1308" y="1198.8594"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="1320" y="1206.2783">m_bomby : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1308" y="1212.6953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="48" x="1320" y="1220.1143">m_pid : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1308" y="1226.5313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="49" x="1320" y="1233.9502">newX : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1308" y="1240.3672"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="1320" y="1247.7861">newY : int</text><ellipse cx="1311" cy="1257.2031" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="136" x="1320" y="1261.6221">s_AlrPressedP1 : static bool</text><ellipse cx="1311" cy="1271.0391" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="136" x="1320" y="1275.458">s_AlrPressedP2 : static bool</text><ellipse cx="1311" cy="1284.875" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="125" x="1320" y="1289.2939">s_countdown : static bool</text><ellipse cx="1311" cy="1298.7109" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="119" x="1320" y="1303.1299">s_PlayerCount : static int</text><ellipse cx="1311" cy="1312.5469" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="103" x="1320" y="1316.9658">s_p1facing : static int</text><ellipse cx="1311" cy="1326.3828" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="103" x="1320" y="1330.8018">s_p2facing : static int</text><ellipse cx="1311" cy="1340.2188" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="92" x="1320" y="1344.6377">s_start : static long</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1301" x2="1597" y1="1351.0547" y2="1351.0547"/><ellipse cx="1311" cy="1362.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="1320" y="1366.4736">Player(Properties* props)</text><ellipse cx="1311" cy="1375.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="1320" y="1380.3096">GetBomb() : int</text><ellipse cx="1311" cy="1389.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="1320" y="1394.1455">GetBombCol() : int</text><ellipse cx="1311" cy="1403.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="75" x="1320" y="1407.9814">GetHealth() : int</text><ellipse cx="1311" cy="1417.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="1320" y="1421.8174">Clean() : void</text><ellipse cx="1311" cy="1431.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="1320" y="1435.6533">Draw() : void</text><ellipse cx="1311" cy="1445.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="1320" y="1449.4893">GetInput() : void</text><ellipse cx="1311" cy="1458.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="1320" y="1463.3252">Update(float dt) : void</text><ellipse cx="1311" cy="1472.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="1320" y="1477.1611">bombCountdown() : void</text><ellipse cx="1311" cy="1486.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="1320" y="1490.9971">collectBomb() : void</text><ellipse cx="1311" cy="1500.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="138" x="1320" y="1504.833">getBombedAnimation() : void</text><ellipse cx="1311" cy="1514.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="135" x="1320" y="1518.6689">getCurrentAnimation() : void</text><ellipse cx="1311" cy="1528.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="1320" y="1532.5049">placeBombCountdown(BombPlanted bombPlanted) : void</text><ellipse cx="1311" cy="1541.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="1320" y="1546.3408">plantBomb() : void</text><ellipse cx="1311" cy="1555.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="1320" y="1560.1768">takeDamage() : void</text><!--MD5=[31b39ed9b6cb36778e2b2be9841862c5]
class gfx.Animation--><rect codeLine="103" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="200.1953" id="gfx.Animation" style="stroke:#A80036;stroke-width:1.5;" width="613" x="753.5" y="1642.5"/><ellipse cx="1028.25" cy="1658.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1030.25,1655 Q1030.4531,1654.5 1030.6875,1654.25 Q1030.9219,1654 1031.1875,1654 Q1031.6563,1654 1031.9531,1654.2813 Q1032.25,1654.5625 1032.25,1655.2188 L1032.25,1656.7813 Q1032.25,1657.4375 1031.9688,1657.7188 Q1031.6875,1658 1031.25,1658 Q1030.8594,1658 1030.6094,1657.8281 Q1030.3594,1657.6563 1030.25,1657.2031 Q1030.2031,1656.8906 1030.0313,1656.7188 Q1029.7188,1656.3906 1029.1563,1656.2031 Q1028.5938,1656 1028.0313,1656 Q1027.3281,1656 1026.7344,1656.2813 Q1026.1563,1656.5625 1025.7031,1657.1875 Q1025.25,1657.8125 1025.25,1658.6719 L1025.25,1659.5938 Q1025.25,1660.625 1026.0938,1661.3125 Q1026.9375,1662 1028.4375,1662 Q1029.3281,1662 1029.9531,1661.7969 Q1030.3125,1661.6875 1030.7188,1661.3281 Q1030.9844,1661.125 1031.125,1661.0625 Q1031.2656,1661 1031.4375,1661 Q1031.7656,1661 1032,1661.2656 Q1032.25,1661.5156 1032.25,1661.875 Q1032.25,1662.2188 1031.9063,1662.625 Q1031.4063,1663.2188 1030.6094,1663.5469 Q1029.5625,1664 1028.2813,1664 Q1026.7813,1664 1025.5781,1663.4063 Q1024.6094,1662.9375 1023.9219,1661.9219 Q1023.25,1660.9063 1023.25,1659.7031 L1023.25,1658.6094 Q1023.25,1657.3594 1023.8438,1656.2656 Q1024.4531,1655.1719 1025.5,1654.5938 Q1026.5625,1654 1027.75,1654 Q1028.4688,1654 1029.0938,1654.25 Q1029.7188,1654.5 1030.25,1655 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="55" x="1048.75" y="1663.4102">Animation</text><line style="stroke:#A80036;stroke-width:1.5;" x1="754.5" x2="1365.5" y1="1674.5" y2="1674.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="761.5" y="1682.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="773.5" y="1689.9189">m_Flip : SDL_RendererFlip</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="761.5" y="1696.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="773.5" y="1703.7549">m_AnimSpeed : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="761.5" y="1710.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="773.5" y="1717.5908">m_FrameCount : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="761.5" y="1724.0078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="773.5" y="1731.4268">m_SpriteCol : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="761.5" y="1737.8438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="773.5" y="1745.2627">m_SpriteFrame : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="761.5" y="1751.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="773.5" y="1759.0986">m_SpriteRow : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="761.5" y="1765.5156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="773.5" y="1772.9346">m_TextureID : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="754.5" x2="1365.5" y1="1779.3516" y2="1779.3516"/><ellipse cx="764.5" cy="1790.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="55" x="773.5" y="1794.7705">Animation()</text><ellipse cx="764.5" cy="1804.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="773.5" y="1808.6064">Draw(float x, float y, int spriteWidth, int spriteHeight) : void</text><ellipse cx="764.5" cy="1818.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="587" x="773.5" y="1822.4424">SetProperties(std::string textureID, int spriteRow, int spriteCol, int frameCount, int animSpeed, SDL_RendererFlip flip) : void</text><ellipse cx="764.5" cy="1831.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="773.5" y="1836.2783">Update() : void</text><!--MD5=[61c3fa5585ca85434ecfc87dbde0af51]
class gfx.DrawManager--><rect codeLine="118" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="172.5234" id="gfx.DrawManager" style="stroke:#A80036;stroke-width:1.5;" width="174" x="1402" y="1656"/><ellipse cx="1446.25" cy="1672" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1448.25,1668.5 Q1448.4531,1668 1448.6875,1667.75 Q1448.9219,1667.5 1449.1875,1667.5 Q1449.6563,1667.5 1449.9531,1667.7813 Q1450.25,1668.0625 1450.25,1668.7188 L1450.25,1670.2813 Q1450.25,1670.9375 1449.9688,1671.2188 Q1449.6875,1671.5 1449.25,1671.5 Q1448.8594,1671.5 1448.6094,1671.3281 Q1448.3594,1671.1563 1448.25,1670.7031 Q1448.2031,1670.3906 1448.0313,1670.2188 Q1447.7188,1669.8906 1447.1563,1669.7031 Q1446.5938,1669.5 1446.0313,1669.5 Q1445.3281,1669.5 1444.7344,1669.7813 Q1444.1563,1670.0625 1443.7031,1670.6875 Q1443.25,1671.3125 1443.25,1672.1719 L1443.25,1673.0938 Q1443.25,1674.125 1444.0938,1674.8125 Q1444.9375,1675.5 1446.4375,1675.5 Q1447.3281,1675.5 1447.9531,1675.2969 Q1448.3125,1675.1875 1448.7188,1674.8281 Q1448.9844,1674.625 1449.125,1674.5625 Q1449.2656,1674.5 1449.4375,1674.5 Q1449.7656,1674.5 1450,1674.7656 Q1450.25,1675.0156 1450.25,1675.375 Q1450.25,1675.7188 1449.9063,1676.125 Q1449.4063,1676.7188 1448.6094,1677.0469 Q1447.5625,1677.5 1446.2813,1677.5 Q1444.7813,1677.5 1443.5781,1676.9063 Q1442.6094,1676.4375 1441.9219,1675.4219 Q1441.25,1674.4063 1441.25,1673.2031 L1441.25,1672.1094 Q1441.25,1670.8594 1441.8438,1669.7656 Q1442.4531,1668.6719 1443.5,1668.0938 Q1444.5625,1667.5 1445.75,1667.5 Q1446.4688,1667.5 1447.0938,1667.75 Q1447.7188,1668 1448.25,1668.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="77" x="1466.75" y="1676.9102">DrawManager</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1403" x2="1575" y1="1688" y2="1688"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1410" y="1696"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="97" x="1422" y="1703.4189">m_Force : Vector2D</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1410" y="1709.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="1422" y="1717.2549">m_Position : Vector2D</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1403" x2="1575" y1="1723.6719" y2="1723.6719"/><ellipse cx="1413" cy="1734.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="1422" y="1739.0908">DrawManager()</text><ellipse cx="1413" cy="1748.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="1422" y="1752.9268">GetPosition() : Vector2D</text><ellipse cx="1413" cy="1762.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="1422" y="1766.7627">ApplyForce(Vector2D F) : void</text><ellipse cx="1413" cy="1776.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="1422" y="1780.5986">ApplyForceX(int Fx) : void</text><ellipse cx="1413" cy="1790.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="1422" y="1794.4346">ApplyForceY(int Fy) : void</text><ellipse cx="1413" cy="1803.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="1422" y="1808.2705">UnsetForce() : void</text><ellipse cx="1413" cy="1817.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="1422" y="1822.1064">Update() : void</text><!--MD5=[15af45a6dbda0b46b9bcc7341b4758d2]
class gfx.TextureManager--><rect codeLine="167" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="255.5391" id="gfx.TextureManager" style="stroke:#A80036;stroke-width:1.5;" width="559" x="539.5" y="1902.5"/><ellipse cx="770.75" cy="1918.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M772.75,1915 Q772.9531,1914.5 773.1875,1914.25 Q773.4219,1914 773.6875,1914 Q774.1563,1914 774.4531,1914.2813 Q774.75,1914.5625 774.75,1915.2188 L774.75,1916.7813 Q774.75,1917.4375 774.4688,1917.7188 Q774.1875,1918 773.75,1918 Q773.3594,1918 773.1094,1917.8281 Q772.8594,1917.6563 772.75,1917.2031 Q772.7031,1916.8906 772.5313,1916.7188 Q772.2188,1916.3906 771.6563,1916.2031 Q771.0938,1916 770.5313,1916 Q769.8281,1916 769.2344,1916.2813 Q768.6563,1916.5625 768.2031,1917.1875 Q767.75,1917.8125 767.75,1918.6719 L767.75,1919.5938 Q767.75,1920.625 768.5938,1921.3125 Q769.4375,1922 770.9375,1922 Q771.8281,1922 772.4531,1921.7969 Q772.8125,1921.6875 773.2188,1921.3281 Q773.4844,1921.125 773.625,1921.0625 Q773.7656,1921 773.9375,1921 Q774.2656,1921 774.5,1921.2656 Q774.75,1921.5156 774.75,1921.875 Q774.75,1922.2188 774.4063,1922.625 Q773.9063,1923.2188 773.1094,1923.5469 Q772.0625,1924 770.7813,1924 Q769.2813,1924 768.0781,1923.4063 Q767.1094,1922.9375 766.4219,1921.9219 Q765.75,1920.9063 765.75,1919.7031 L765.75,1918.6094 Q765.75,1917.3594 766.3438,1916.2656 Q766.9531,1915.1719 768,1914.5938 Q769.0625,1914 770.25,1914 Q770.9688,1914 771.5938,1914.25 Q772.2188,1914.5 772.75,1915 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="88" x="791.25" y="1923.4102">TextureManager</text><line style="stroke:#A80036;stroke-width:1.5;" x1="540.5" x2="1097.5" y1="1934.5" y2="1934.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="547.5" y="1942.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="174" x="559.5" y="1949.9189">s_Instance : static TextureManager*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="547.5" y="1956.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="254" x="559.5" y="1963.7549">m_TextureMap : std::map&lt;std::string, SDL_Texture*&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="547.5" y="1970.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="559.5" y="1977.5908">fonts : std::map&lt;std::string, TTF_Font*&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="540.5" x2="1097.5" y1="1984.0078" y2="1984.0078"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="547.5" y="1992.0078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="559.5" y="1999.4268">TextureManager()</text><ellipse cx="550.5" cy="2008.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="559.5" y="2013.2627">GetTexture(std::string id) : SDL_Texture*</text><ellipse cx="550.5" cy="2022.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="152" x="559.5" y="2027.0986">GetFont(std::string) : TTF_Font*</text><ellipse cx="550.5" cy="2036.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="559.5" y="2040.9346">GetInstance() : TextureManager*</text><ellipse cx="550.5" cy="2050.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="559.5" y="2054.7705">Load(std::string id, std::string filename) : bool</text><ellipse cx="550.5" cy="2064.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="559.5" y="2068.6064">AddFont(std::string, std::string, int) : void</text><ellipse cx="550.5" cy="2078.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="559.5" y="2082.4424">Clean() : void</text><ellipse cx="550.5" cy="2091.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="455" x="559.5" y="2096.2783">Draw(std::string id, int x, int y, int width, int height, int row, int col, SDL_RendererFlip flip) : void</text><ellipse cx="550.5" cy="2105.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="533" x="559.5" y="2110.1143">DrawFrame(std::string id, int x, int y, int width, int height, int row, int col, int frame, SDL_RendererFlip flip) : void</text><ellipse cx="550.5" cy="2119.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="475" x="559.5" y="2123.9502">DrawIcon(std::string id, int x, int y, int width, int height, int row, int col, SDL_RendererFlip flip) : void</text><ellipse cx="550.5" cy="2133.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="472" x="559.5" y="2137.7861">DrawTile(std::string tilesetID, int tileSize, int x, int y, int row, int frame, SDL_RendererFlip flip) : void</text><ellipse cx="550.5" cy="2147.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="559.5" y="2151.6221">Drop(std::string id) : void</text><!--MD5=[4c7c7f33a1ec25f7be8040bd6777f2d6]
class gfx.Transform--><rect codeLine="186" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="144.8516" id="gfx.Transform" style="stroke:#A80036;stroke-width:1.5;" width="163" x="1611.5" y="1670"/><ellipse cx="1660.25" cy="1686" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1662.25,1682.5 Q1662.4531,1682 1662.6875,1681.75 Q1662.9219,1681.5 1663.1875,1681.5 Q1663.6563,1681.5 1663.9531,1681.7813 Q1664.25,1682.0625 1664.25,1682.7188 L1664.25,1684.2813 Q1664.25,1684.9375 1663.9688,1685.2188 Q1663.6875,1685.5 1663.25,1685.5 Q1662.8594,1685.5 1662.6094,1685.3281 Q1662.3594,1685.1563 1662.25,1684.7031 Q1662.2031,1684.3906 1662.0313,1684.2188 Q1661.7188,1683.8906 1661.1563,1683.7031 Q1660.5938,1683.5 1660.0313,1683.5 Q1659.3281,1683.5 1658.7344,1683.7813 Q1658.1563,1684.0625 1657.7031,1684.6875 Q1657.25,1685.3125 1657.25,1686.1719 L1657.25,1687.0938 Q1657.25,1688.125 1658.0938,1688.8125 Q1658.9375,1689.5 1660.4375,1689.5 Q1661.3281,1689.5 1661.9531,1689.2969 Q1662.3125,1689.1875 1662.7188,1688.8281 Q1662.9844,1688.625 1663.125,1688.5625 Q1663.2656,1688.5 1663.4375,1688.5 Q1663.7656,1688.5 1664,1688.7656 Q1664.25,1689.0156 1664.25,1689.375 Q1664.25,1689.7188 1663.9063,1690.125 Q1663.4063,1690.7188 1662.6094,1691.0469 Q1661.5625,1691.5 1660.2813,1691.5 Q1658.7813,1691.5 1657.5781,1690.9063 Q1656.6094,1690.4375 1655.9219,1689.4219 Q1655.25,1688.4063 1655.25,1687.2031 L1655.25,1686.1094 Q1655.25,1684.8594 1655.8438,1683.7656 Q1656.4531,1682.6719 1657.5,1682.0938 Q1658.5625,1681.5 1659.75,1681.5 Q1660.4688,1681.5 1661.0938,1681.75 Q1661.7188,1682 1662.25,1682.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="57" x="1680.75" y="1690.9102">Transform</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1612.5" x2="1773.5" y1="1702" y2="1702"/><ellipse cx="1622.5" cy="1713" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="27" x="1631.5" y="1717.4189">X : int</text><ellipse cx="1622.5" cy="1726.8359" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="28" x="1631.5" y="1731.2549">Y : int</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1612.5" x2="1773.5" y1="1737.6719" y2="1737.6719"/><ellipse cx="1622.5" cy="1748.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="1631.5" y="1753.0908">Transform(int x, int y)</text><ellipse cx="1622.5" cy="1762.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="1631.5" y="1766.9268">Log(std::string msg) : void</text><ellipse cx="1622.5" cy="1776.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="137" x="1631.5" y="1780.7627">Translate(Vector2D v) : void</text><ellipse cx="1622.5" cy="1790.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="1631.5" y="1794.5986">TranslateX(int x) : void</text><ellipse cx="1622.5" cy="1804.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="1631.5" y="1808.4346">TranslateY(int y) : void</text><!--MD5=[408c1a95a6004acb5e587067bbcd0af8]
class gfx.Vector2D--><rect codeLine="197" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="131.0156" id="gfx.Vector2D" style="stroke:#A80036;stroke-width:1.5;" width="273" x="1352.5" y="1965"/><ellipse cx="1459.75" cy="1981" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1461.75,1977.5 Q1461.9531,1977 1462.1875,1976.75 Q1462.4219,1976.5 1462.6875,1976.5 Q1463.1563,1976.5 1463.4531,1976.7813 Q1463.75,1977.0625 1463.75,1977.7188 L1463.75,1979.2813 Q1463.75,1979.9375 1463.4688,1980.2188 Q1463.1875,1980.5 1462.75,1980.5 Q1462.3594,1980.5 1462.1094,1980.3281 Q1461.8594,1980.1563 1461.75,1979.7031 Q1461.7031,1979.3906 1461.5313,1979.2188 Q1461.2188,1978.8906 1460.6563,1978.7031 Q1460.0938,1978.5 1459.5313,1978.5 Q1458.8281,1978.5 1458.2344,1978.7813 Q1457.6563,1979.0625 1457.2031,1979.6875 Q1456.75,1980.3125 1456.75,1981.1719 L1456.75,1982.0938 Q1456.75,1983.125 1457.5938,1983.8125 Q1458.4375,1984.5 1459.9375,1984.5 Q1460.8281,1984.5 1461.4531,1984.2969 Q1461.8125,1984.1875 1462.2188,1983.8281 Q1462.4844,1983.625 1462.625,1983.5625 Q1462.7656,1983.5 1462.9375,1983.5 Q1463.2656,1983.5 1463.5,1983.7656 Q1463.75,1984.0156 1463.75,1984.375 Q1463.75,1984.7188 1463.4063,1985.125 Q1462.9063,1985.7188 1462.1094,1986.0469 Q1461.0625,1986.5 1459.7813,1986.5 Q1458.2813,1986.5 1457.0781,1985.9063 Q1456.1094,1985.4375 1455.4219,1984.4219 Q1454.75,1983.4063 1454.75,1982.2031 L1454.75,1981.1094 Q1454.75,1979.8594 1455.3438,1978.7656 Q1455.9531,1977.6719 1457,1977.0938 Q1458.0625,1976.5 1459.25,1976.5 Q1459.9688,1976.5 1460.5938,1976.75 Q1461.2188,1977 1461.75,1977.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="50" x="1480.25" y="1985.9102">Vector2D</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1353.5" x2="1624.5" y1="1997" y2="1997"/><ellipse cx="1363.5" cy="2008" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="27" x="1372.5" y="2012.4189">X : int</text><ellipse cx="1363.5" cy="2021.8359" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="28" x="1372.5" y="2026.2549">Y : int</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1353.5" x2="1624.5" y1="2032.6719" y2="2032.6719"/><ellipse cx="1363.5" cy="2043.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="1372.5" y="2048.0908">Vector2D(int x, int y)</text><ellipse cx="1363.5" cy="2057.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="247" x="1372.5" y="2061.9268">operator+(const Vector2D&amp; v2) : Vector2D {query}</text><ellipse cx="1363.5" cy="2071.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="1372.5" y="2075.7627">operator-(const Vector2D&amp; v2) : Vector2D {query}</text><ellipse cx="1363.5" cy="2085.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="1372.5" y="2089.5986">Log(std::string msg) : void</text><!--MD5=[57210c06e20415b9d54619e815cd0c71]
class gfx.UILabel--><rect codeLine="273" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="158.6875" id="gfx.UILabel" style="stroke:#A80036;stroke-width:1.5;" width="399" x="319.5" y="1663"/><ellipse cx="493.25" cy="1679" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M495.25,1675.5 Q495.4531,1675 495.6875,1674.75 Q495.9219,1674.5 496.1875,1674.5 Q496.6563,1674.5 496.9531,1674.7813 Q497.25,1675.0625 497.25,1675.7188 L497.25,1677.2813 Q497.25,1677.9375 496.9688,1678.2188 Q496.6875,1678.5 496.25,1678.5 Q495.8594,1678.5 495.6094,1678.3281 Q495.3594,1678.1563 495.25,1677.7031 Q495.2031,1677.3906 495.0313,1677.2188 Q494.7188,1676.8906 494.1563,1676.7031 Q493.5938,1676.5 493.0313,1676.5 Q492.3281,1676.5 491.7344,1676.7813 Q491.1563,1677.0625 490.7031,1677.6875 Q490.25,1678.3125 490.25,1679.1719 L490.25,1680.0938 Q490.25,1681.125 491.0938,1681.8125 Q491.9375,1682.5 493.4375,1682.5 Q494.3281,1682.5 494.9531,1682.2969 Q495.3125,1682.1875 495.7188,1681.8281 Q495.9844,1681.625 496.125,1681.5625 Q496.2656,1681.5 496.4375,1681.5 Q496.7656,1681.5 497,1681.7656 Q497.25,1682.0156 497.25,1682.375 Q497.25,1682.7188 496.9063,1683.125 Q496.4063,1683.7188 495.6094,1684.0469 Q494.5625,1684.5 493.2813,1684.5 Q491.7813,1684.5 490.5781,1683.9063 Q489.6094,1683.4375 488.9219,1682.4219 Q488.25,1681.4063 488.25,1680.2031 L488.25,1679.1094 Q488.25,1677.8594 488.8438,1676.7656 Q489.4531,1675.6719 490.5,1675.0938 Q491.5625,1674.5 492.75,1674.5 Q493.4688,1674.5 494.0938,1674.75 Q494.7188,1675 495.25,1675.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="43" x="513.75" y="1683.9102">UILabel</text><line style="stroke:#A80036;stroke-width:1.5;" x1="320.5" x2="717.5" y1="1695" y2="1695"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="327.5" y="1703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="339.5" y="1710.4189">textColour : SDL_Color</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="327.5" y="1716.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="94" x="339.5" y="1724.2549">position : SDL_Rect</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="327.5" y="1730.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="135" x="339.5" y="1738.0908">labelTexture : SDL_Texture*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="327.5" y="1744.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="339.5" y="1751.9268">labelFont : std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="327.5" y="1758.3438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="339.5" y="1765.7627">labelText : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="320.5" x2="717.5" y1="1772.1797" y2="1772.1797"/><ellipse cx="330.5" cy="1783.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="339.5" y="1787.5986">UILabel(int xpos, int ypos, std::string text, std::string font, SDL_Color&amp; colour)</text><ellipse cx="330.5" cy="1797.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="339.5" y="1801.4346">SetLabelText(std::string text, std::string font) : void</text><ellipse cx="330.5" cy="1810.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="63" x="339.5" y="1815.2705">draw() : void</text><!--MD5=[032b4da80d473f4495ac8a06202750d4]
class world.Layer--><rect codeLine="130" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="75.6719" id="world.Layer" style="stroke:#A80036;stroke-width:1.5;" width="99" x="2377.5" y="850"/><ellipse cx="2408.7" cy="866" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2410.45,867.5 L2407.1531,867.5 L2406.7156,868.5 L2406.7156,868.5 L2407.1844,868.5 L2407.7,869.125 L2407.7,869.5 L2407.7,869.875 L2407.1844,870.5 L2406.7156,870.5 L2404.825,870.5 L2404.2156,870.5 L2403.7,869.875 L2403.7,869.5 L2403.7,869.125 L2404.2156,868.5 L2404.825,868.5 L2407.1375,862.5 L2406.2625,862.5 L2405.2156,862.5 L2404.7,861.875 L2404.7,861.5 L2404.7,861.125 L2405.2156,860.5 L2406.2625,860.5 L2409.9344,860.5 L2412.6219,868.5 L2413.1844,868.5 L2413.1844,868.5 L2413.7,869.125 L2413.7,869.5 L2413.7,869.875 L2413.1844,870.5 L2412.6219,870.5 L2410.7313,870.5 L2410.2156,870.5 L2409.7,869.875 L2409.7,869.5 L2409.7,869.125 L2410.2156,868.5 L2410.7313,868.5 L2410.7313,868.5 L2410.45,867.5 Z M2409.9031,865.5 L2408.7,861.9219 L2407.6688,865.5 L2409.9031,865.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="31" x="2426.3" y="870.9102">Layer</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2378.5" x2="2475.5" y1="882" y2="882"/><line style="stroke:#A80036;stroke-width:1.5;" x1="2378.5" x2="2475.5" y1="890" y2="890"/><ellipse cx="2388.5" cy="901" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="73" x="2397.5" y="905.4189">Render() : void</text><ellipse cx="2388.5" cy="914.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="71" x="2397.5" y="919.2549">Update() : void</text><!--MD5=[058b60769bf24e6f858063701ad81ab7]
class world.MapParser--><rect codeLine="136" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="186.3594" id="world.MapParser" style="stroke:#A80036;stroke-width:1.5;" width="595" x="2105.5" y="166.5"/><ellipse cx="2368.75" cy="182.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2370.75,179 Q2370.9531,178.5 2371.1875,178.25 Q2371.4219,178 2371.6875,178 Q2372.1563,178 2372.4531,178.2813 Q2372.75,178.5625 2372.75,179.2188 L2372.75,180.7813 Q2372.75,181.4375 2372.4688,181.7188 Q2372.1875,182 2371.75,182 Q2371.3594,182 2371.1094,181.8281 Q2370.8594,181.6563 2370.75,181.2031 Q2370.7031,180.8906 2370.5313,180.7188 Q2370.2188,180.3906 2369.6563,180.2031 Q2369.0938,180 2368.5313,180 Q2367.8281,180 2367.2344,180.2813 Q2366.6563,180.5625 2366.2031,181.1875 Q2365.75,181.8125 2365.75,182.6719 L2365.75,183.5938 Q2365.75,184.625 2366.5938,185.3125 Q2367.4375,186 2368.9375,186 Q2369.8281,186 2370.4531,185.7969 Q2370.8125,185.6875 2371.2188,185.3281 Q2371.4844,185.125 2371.625,185.0625 Q2371.7656,185 2371.9375,185 Q2372.2656,185 2372.5,185.2656 Q2372.75,185.5156 2372.75,185.875 Q2372.75,186.2188 2372.4063,186.625 Q2371.9063,187.2188 2371.1094,187.5469 Q2370.0625,188 2368.7813,188 Q2367.2813,188 2366.0781,187.4063 Q2365.1094,186.9375 2364.4219,185.9219 Q2363.75,184.9063 2363.75,183.7031 L2363.75,182.6094 Q2363.75,181.3594 2364.3438,180.2656 Q2364.9531,179.1719 2366,178.5938 Q2367.0625,178 2368.25,178 Q2368.9688,178 2369.5938,178.25 Q2370.2188,178.5 2370.75,179 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="60" x="2389.25" y="187.4102">MapParser</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2106.5" x2="2699.5" y1="198.5" y2="198.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2113.5" y="206.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="147" x="2125.5" y="213.9189">s_Instance : static MapParser*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2113.5" y="220.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="220" x="2125.5" y="227.7549">m_MapDict : std::map&lt;std::string, GameMap*&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2106.5" x2="2699.5" y1="234.1719" y2="234.1719"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2113.5" y="242.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="60" x="2125.5" y="249.5908">MapParser()</text><ellipse cx="2116.5" cy="259.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="2125.5" y="263.4268">GetMap(std::string id) : GameMap*</text><ellipse cx="2116.5" cy="272.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="131" x="2125.5" y="277.2627">GetInstance() : MapParser*</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2113.5" y="283.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="569" x="2125.5" y="291.0986">ParseTileLayer(TiXmlElement* xmlLayer, std::vector&lt;Tileset&gt; tilesets, int tilesize, int rowcount, int colcount) : TileLayer*</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2113.5" y="297.5156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="223" x="2125.5" y="304.9346">ParseTileset(TiXmlElement* xmlTileset) : Tileset</text><ellipse cx="2116.5" cy="314.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="2125.5" y="318.7705">Load() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2113.5" y="325.1875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="2125.5" y="332.6064">Parse(std::string id, std::string source) : bool</text><ellipse cx="2116.5" cy="342.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="2125.5" y="346.4424">Clean() : void</text><!--MD5=[3558dd23c0f3351bc17b27f38620e6cf]
class world.GameMap--><rect codeLine="265" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="117.1797" id="world.GameMap" style="stroke:#A80036;stroke-width:1.5;" width="199" x="2327.5" y="581"/><ellipse cx="2394.25" cy="597" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2396.25,593.5 Q2396.4531,593 2396.6875,592.75 Q2396.9219,592.5 2397.1875,592.5 Q2397.6563,592.5 2397.9531,592.7813 Q2398.25,593.0625 2398.25,593.7188 L2398.25,595.2813 Q2398.25,595.9375 2397.9688,596.2188 Q2397.6875,596.5 2397.25,596.5 Q2396.8594,596.5 2396.6094,596.3281 Q2396.3594,596.1563 2396.25,595.7031 Q2396.2031,595.3906 2396.0313,595.2188 Q2395.7188,594.8906 2395.1563,594.7031 Q2394.5938,594.5 2394.0313,594.5 Q2393.3281,594.5 2392.7344,594.7813 Q2392.1563,595.0625 2391.7031,595.6875 Q2391.25,596.3125 2391.25,597.1719 L2391.25,598.0938 Q2391.25,599.125 2392.0938,599.8125 Q2392.9375,600.5 2394.4375,600.5 Q2395.3281,600.5 2395.9531,600.2969 Q2396.3125,600.1875 2396.7188,599.8281 Q2396.9844,599.625 2397.125,599.5625 Q2397.2656,599.5 2397.4375,599.5 Q2397.7656,599.5 2398,599.7656 Q2398.25,600.0156 2398.25,600.375 Q2398.25,600.7188 2397.9063,601.125 Q2397.4063,601.7188 2396.6094,602.0469 Q2395.5625,602.5 2394.2813,602.5 Q2392.7813,602.5 2391.5781,601.9063 Q2390.6094,601.4375 2389.9219,600.4219 Q2389.25,599.4063 2389.25,598.2031 L2389.25,597.1094 Q2389.25,595.8594 2389.8438,594.7656 Q2390.4531,593.6719 2391.5,593.0938 Q2392.5625,592.5 2393.75,592.5 Q2394.4688,592.5 2395.0938,592.75 Q2395.7188,593 2396.25,593.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="57" x="2414.75" y="601.9102">GameMap</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2328.5" x2="2525.5" y1="613" y2="613"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2335.5" y="621"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="173" x="2347.5" y="628.4189">m_MapLayers : std::vector&lt;Layer*&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2328.5" x2="2525.5" y1="634.8359" y2="634.8359"/><ellipse cx="2338.5" cy="645.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="56" x="2347.5" y="650.2549">GameMap()</text><ellipse cx="2338.5" cy="659.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="2347.5" y="664.0908">GetLayers() : std::vector&lt;Layer*&gt;</text><ellipse cx="2338.5" cy="673.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="2347.5" y="677.9268">Render() : void</text><ellipse cx="2338.5" cy="687.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="2347.5" y="691.7627">Update() : void</text><!--MD5=[48516c7a7bc1f05290f510d0ff4cfebc]
class world.Tile--><rect codeLine="284" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="89.5078" id="world.Tile" style="stroke:#A80036;stroke-width:1.5;" width="239" x="1831.5" y="214.5"/><ellipse cx="1936.75" cy="230.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1938.75,227 Q1938.9531,226.5 1939.1875,226.25 Q1939.4219,226 1939.6875,226 Q1940.1563,226 1940.4531,226.2813 Q1940.75,226.5625 1940.75,227.2188 L1940.75,228.7813 Q1940.75,229.4375 1940.4688,229.7188 Q1940.1875,230 1939.75,230 Q1939.3594,230 1939.1094,229.8281 Q1938.8594,229.6563 1938.75,229.2031 Q1938.7031,228.8906 1938.5313,228.7188 Q1938.2188,228.3906 1937.6563,228.2031 Q1937.0938,228 1936.5313,228 Q1935.8281,228 1935.2344,228.2813 Q1934.6563,228.5625 1934.2031,229.1875 Q1933.75,229.8125 1933.75,230.6719 L1933.75,231.5938 Q1933.75,232.625 1934.5938,233.3125 Q1935.4375,234 1936.9375,234 Q1937.8281,234 1938.4531,233.7969 Q1938.8125,233.6875 1939.2188,233.3281 Q1939.4844,233.125 1939.625,233.0625 Q1939.7656,233 1939.9375,233 Q1940.2656,233 1940.5,233.2656 Q1940.75,233.5156 1940.75,233.875 Q1940.75,234.2188 1940.4063,234.625 Q1939.9063,235.2188 1939.1094,235.5469 Q1938.0625,236 1936.7813,236 Q1935.2813,236 1934.0781,235.4063 Q1933.1094,234.9375 1932.4219,233.9219 Q1931.75,232.9063 1931.75,231.7031 L1931.75,230.6094 Q1931.75,229.3594 1932.3438,228.2656 Q1932.9531,227.1719 1934,226.5938 Q1935.0625,226 1936.25,226 Q1936.9688,226 1937.5938,226.25 Q1938.2188,226.5 1938.75,227 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="20" x="1957.25" y="235.4102">Tile</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1832.5" x2="2069.5" y1="246.5" y2="246.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1839.5" y="254.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="111" x="1851.5" y="261.9189">s_Instance : static Tile*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1839.5" y="268.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="1851.5" y="275.7549">m_Tile : std::map&lt;std::string, SDL_Texture*&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1832.5" x2="2069.5" y1="282.1719" y2="282.1719"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="1839.5" y="290.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="24" x="1851.5" y="297.5908">Tile()</text><!--MD5=[664963052afdfdad2e4e93f6abfb1c33]
class world.TileLayer--><rect codeLine="291" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="172.5234" id="world.TileLayer" style="stroke:#A80036;stroke-width:1.5;" width="498" x="2178" y="1207"/><ellipse cx="2397.75" cy="1223" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2399.75,1219.5 Q2399.9531,1219 2400.1875,1218.75 Q2400.4219,1218.5 2400.6875,1218.5 Q2401.1563,1218.5 2401.4531,1218.7813 Q2401.75,1219.0625 2401.75,1219.7188 L2401.75,1221.2813 Q2401.75,1221.9375 2401.4688,1222.2188 Q2401.1875,1222.5 2400.75,1222.5 Q2400.3594,1222.5 2400.1094,1222.3281 Q2399.8594,1222.1563 2399.75,1221.7031 Q2399.7031,1221.3906 2399.5313,1221.2188 Q2399.2188,1220.8906 2398.6563,1220.7031 Q2398.0938,1220.5 2397.5313,1220.5 Q2396.8281,1220.5 2396.2344,1220.7813 Q2395.6563,1221.0625 2395.2031,1221.6875 Q2394.75,1222.3125 2394.75,1223.1719 L2394.75,1224.0938 Q2394.75,1225.125 2395.5938,1225.8125 Q2396.4375,1226.5 2397.9375,1226.5 Q2398.8281,1226.5 2399.4531,1226.2969 Q2399.8125,1226.1875 2400.2188,1225.8281 Q2400.4844,1225.625 2400.625,1225.5625 Q2400.7656,1225.5 2400.9375,1225.5 Q2401.2656,1225.5 2401.5,1225.7656 Q2401.75,1226.0156 2401.75,1226.375 Q2401.75,1226.7188 2401.4063,1227.125 Q2400.9063,1227.7188 2400.1094,1228.0469 Q2399.0625,1228.5 2397.7813,1228.5 Q2396.2813,1228.5 2395.0781,1227.9063 Q2394.1094,1227.4375 2393.4219,1226.4219 Q2392.75,1225.4063 2392.75,1224.2031 L2392.75,1223.1094 Q2392.75,1221.8594 2393.3438,1220.7656 Q2393.9531,1219.6719 2395,1219.0938 Q2396.0625,1218.5 2397.25,1218.5 Q2397.9688,1218.5 2398.5938,1218.75 Q2399.2188,1219 2399.75,1219.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="50" x="2418.25" y="1227.9102">TileLayer</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2179" x2="2675" y1="1239" y2="1239"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2186" y="1247"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="77" x="2198" y="1254.4189">m_ColCount : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2186" y="1260.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="2198" y="1268.2549">m_RowCount : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2186" y="1274.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="2198" y="1282.0908">m_TileSize : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2186" y="1288.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="134" x="2198" y="1295.9268">m_Tilesets : vector&lt;Tileset&gt;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2186" y="1302.3438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="177" x="2198" y="1309.7627">m_Tilemap : vector&lt;std::vector&lt;int&gt;&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2179" x2="2675" y1="1316.1797" y2="1316.1797"/><ellipse cx="2189" cy="1327.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="472" x="2198" y="1331.5986">TileLayer(int tilesize, int width, int height, vector&lt;std::vector&lt;int&gt;&gt; tilemap, vector&lt;Tileset&gt; tilesets)</text><ellipse cx="2189" cy="1341.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="2198" y="1345.4346">GetTileMap() : TileMap</text><ellipse cx="2189" cy="1354.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="2198" y="1359.2705">Render() : void</text><ellipse cx="2189" cy="1368.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="2198" y="1373.1064">Update() : void</text><!--MD5=[16a2a2eaaa6a5cc5f4df8c56f6e29488]
class world.Tileset--><rect codeLine="303" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="158.6875" id="world.Tileset" style="stroke:#A80036;stroke-width:1.5;" width="118" x="2368" y="1663"/><ellipse cx="2405.05" cy="1679" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2407.05,1675.5 Q2407.2531,1675 2407.4875,1674.75 Q2407.7219,1674.5 2407.9875,1674.5 Q2408.4563,1674.5 2408.7531,1674.7813 Q2409.05,1675.0625 2409.05,1675.7188 L2409.05,1677.2813 Q2409.05,1677.9375 2408.7688,1678.2188 Q2408.4875,1678.5 2408.05,1678.5 Q2407.6594,1678.5 2407.4094,1678.3281 Q2407.1594,1678.1563 2407.05,1677.7031 Q2407.0031,1677.3906 2406.8313,1677.2188 Q2406.5188,1676.8906 2405.9563,1676.7031 Q2405.3938,1676.5 2404.8313,1676.5 Q2404.1281,1676.5 2403.5344,1676.7813 Q2402.9563,1677.0625 2402.5031,1677.6875 Q2402.05,1678.3125 2402.05,1679.1719 L2402.05,1680.0938 Q2402.05,1681.125 2402.8938,1681.8125 Q2403.7375,1682.5 2405.2375,1682.5 Q2406.1281,1682.5 2406.7531,1682.2969 Q2407.1125,1682.1875 2407.5188,1681.8281 Q2407.7844,1681.625 2407.925,1681.5625 Q2408.0656,1681.5 2408.2375,1681.5 Q2408.5656,1681.5 2408.8,1681.7656 Q2409.05,1682.0156 2409.05,1682.375 Q2409.05,1682.7188 2408.7063,1683.125 Q2408.2063,1683.7188 2407.4094,1684.0469 Q2406.3625,1684.5 2405.0813,1684.5 Q2403.5813,1684.5 2402.3781,1683.9063 Q2401.4094,1683.4375 2400.7219,1682.4219 Q2400.05,1681.4063 2400.05,1680.2031 L2400.05,1679.1094 Q2400.05,1677.8594 2400.6438,1676.7656 Q2401.2531,1675.6719 2402.3,1675.0938 Q2403.3625,1674.5 2404.55,1674.5 Q2405.2688,1674.5 2405.8938,1674.75 Q2406.5188,1675 2407.05,1675.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="37" x="2423.95" y="1683.9102">Tileset</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2369" x2="2485" y1="1695" y2="1695"/><ellipse cx="2379" cy="1706" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="63" x="2388" y="1710.4189">ColCount : int</text><ellipse cx="2379" cy="1719.8359" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="2388" y="1724.2549">FirstID : int</text><ellipse cx="2379" cy="1733.6719" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="2388" y="1738.0908">LastID : int</text><ellipse cx="2379" cy="1747.5078" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="2388" y="1751.9268">RowCount : int</text><ellipse cx="2379" cy="1761.3438" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="2388" y="1765.7627">TileCount : int</text><ellipse cx="2379" cy="1775.1797" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="57" x="2388" y="1779.5986">TileSize : int</text><ellipse cx="2379" cy="1789.0156" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="2388" y="1793.4346">Name : std::string</text><ellipse cx="2379" cy="1802.8516" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="92" x="2388" y="1807.2705">Source : std::string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2369" x2="2485" y1="1813.6875" y2="1813.6875"/><!--MD5=[9b15561b5a79df87694001dece61cd3f]
class states.Menu--><rect codeLine="150" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="241.7031" id="states.Menu" style="stroke:#A80036;stroke-width:1.5;" width="181" x="3062.5" y="138.5"/><ellipse cx="3133.75" cy="154.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3135.75,151 Q3135.9531,150.5 3136.1875,150.25 Q3136.4219,150 3136.6875,150 Q3137.1563,150 3137.4531,150.2813 Q3137.75,150.5625 3137.75,151.2188 L3137.75,152.7813 Q3137.75,153.4375 3137.4688,153.7188 Q3137.1875,154 3136.75,154 Q3136.3594,154 3136.1094,153.8281 Q3135.8594,153.6563 3135.75,153.2031 Q3135.7031,152.8906 3135.5313,152.7188 Q3135.2188,152.3906 3134.6563,152.2031 Q3134.0938,152 3133.5313,152 Q3132.8281,152 3132.2344,152.2813 Q3131.6563,152.5625 3131.2031,153.1875 Q3130.75,153.8125 3130.75,154.6719 L3130.75,155.5938 Q3130.75,156.625 3131.5938,157.3125 Q3132.4375,158 3133.9375,158 Q3134.8281,158 3135.4531,157.7969 Q3135.8125,157.6875 3136.2188,157.3281 Q3136.4844,157.125 3136.625,157.0625 Q3136.7656,157 3136.9375,157 Q3137.2656,157 3137.5,157.2656 Q3137.75,157.5156 3137.75,157.875 Q3137.75,158.2188 3137.4063,158.625 Q3136.9063,159.2188 3136.1094,159.5469 Q3135.0625,160 3133.7813,160 Q3132.2813,160 3131.0781,159.4063 Q3130.1094,158.9375 3129.4219,157.9219 Q3128.75,156.9063 3128.75,155.7031 L3128.75,154.6094 Q3128.75,153.3594 3129.3438,152.2656 Q3129.9531,151.1719 3131,150.5938 Q3132.0625,150 3133.25,150 Q3133.9688,150 3134.5938,150.25 Q3135.2188,150.5 3135.75,151 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="30" x="3154.25" y="159.4102">Menu</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3063.5" x2="3242.5" y1="170.5" y2="170.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3070.5" y="178.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="3082.5" y="185.9189">m_Renderer : SDL_Renderer*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3070.5" y="192.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="3082.5" y="199.7549">m_Window : SDL_Window*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3070.5" y="206.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="90" x="3082.5" y="213.5908">m_IsRunning : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3070.5" y="220.0078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="121" x="3082.5" y="227.4268">s_Instance : static Menu*</text><ellipse cx="3073.5" cy="236.8438" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="155" x="3082.5" y="241.2627">s_AlrPressedSpace : static bool</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3063.5" x2="3242.5" y1="247.6797" y2="247.6797"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="3070.5" y="255.6797"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="34" x="3082.5" y="263.0986">Menu()</text><ellipse cx="3073.5" cy="272.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="105" x="3082.5" y="276.9346">GetInstance() : Menu*</text><ellipse cx="3073.5" cy="286.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="3082.5" y="290.7705">GetRenderer() : SDL_Renderer*</text><ellipse cx="3073.5" cy="300.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="3082.5" y="304.6064">Clean() : bool</text><ellipse cx="3073.5" cy="314.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="3082.5" y="318.4424">Init() : bool</text><ellipse cx="3073.5" cy="327.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="3082.5" y="332.2783">IsRunning() : bool</text><ellipse cx="3073.5" cy="341.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="70" x="3082.5" y="346.1143">Events() : void</text><ellipse cx="3073.5" cy="355.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="56" x="3082.5" y="359.9502">Quit() : void</text><ellipse cx="3073.5" cy="369.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="3082.5" y="373.7861">Render() : void</text><!--MD5=[161adf73dd9d2b0eaa5a51b7c8d9fcc3]
class states.Game--><rect codeLine="218" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="435.4063" id="states.Game" style="stroke:#A80036;stroke-width:1.5;" width="270" x="2757" y="42"/><ellipse cx="2870.75" cy="58" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2872.75,54.5 Q2872.9531,54 2873.1875,53.75 Q2873.4219,53.5 2873.6875,53.5 Q2874.1563,53.5 2874.4531,53.7813 Q2874.75,54.0625 2874.75,54.7188 L2874.75,56.2813 Q2874.75,56.9375 2874.4688,57.2188 Q2874.1875,57.5 2873.75,57.5 Q2873.3594,57.5 2873.1094,57.3281 Q2872.8594,57.1563 2872.75,56.7031 Q2872.7031,56.3906 2872.5313,56.2188 Q2872.2188,55.8906 2871.6563,55.7031 Q2871.0938,55.5 2870.5313,55.5 Q2869.8281,55.5 2869.2344,55.7813 Q2868.6563,56.0625 2868.2031,56.6875 Q2867.75,57.3125 2867.75,58.1719 L2867.75,59.0938 Q2867.75,60.125 2868.5938,60.8125 Q2869.4375,61.5 2870.9375,61.5 Q2871.8281,61.5 2872.4531,61.2969 Q2872.8125,61.1875 2873.2188,60.8281 Q2873.4844,60.625 2873.625,60.5625 Q2873.7656,60.5 2873.9375,60.5 Q2874.2656,60.5 2874.5,60.7656 Q2874.75,61.0156 2874.75,61.375 Q2874.75,61.7188 2874.4063,62.125 Q2873.9063,62.7188 2873.1094,63.0469 Q2872.0625,63.5 2870.7813,63.5 Q2869.2813,63.5 2868.0781,62.9063 Q2867.1094,62.4375 2866.4219,61.4219 Q2865.75,60.4063 2865.75,59.2031 L2865.75,58.1094 Q2865.75,56.8594 2866.3438,55.7656 Q2866.9531,54.6719 2868,54.0938 Q2869.0625,53.5 2870.25,53.5 Q2870.9688,53.5 2871.5938,53.75 Q2872.2188,54 2872.75,54.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="34" x="2891.25" y="62.9102">Game</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2758" x2="3026" y1="74" y2="74"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2765" y="82"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="2777" y="89.4189">m_LevelMap : GameMap*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2765" y="95.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="143" x="2777" y="103.2549">m_Renderer : SDL_Renderer*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2765" y="109.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="2777" y="117.0908">m_Window : SDL_Window*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2765" y="123.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="90" x="2777" y="130.9268">m_IsRunning : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2765" y="137.3438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="123" x="2777" y="144.7627">s_Instance : static Game*</text><ellipse cx="2768" cy="154.1797" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="108" x="2777" y="158.5986">gameOver : static bool</text><ellipse cx="2768" cy="168.0156" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="106" x="2777" y="172.4346">playAgain : static bool</text><ellipse cx="2768" cy="181.8516" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="155" x="2777" y="186.2705">s_AlrPressedSpace : static bool</text><ellipse cx="2768" cy="195.6875" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="104" x="2777" y="200.1064">whoWins : static bool</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2758" x2="3026" y1="206.5234" y2="206.5234"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="2765" y="214.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="36" x="2777" y="221.9424">Game()</text><ellipse cx="2768" cy="231.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="107" x="2777" y="235.7783">GetInstance() : Game*</text><ellipse cx="2768" cy="245.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="106" x="2777" y="249.6143">GetMap() : GameMap*</text><ellipse cx="2768" cy="259.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="154" x="2777" y="263.4502">GetRenderer() : SDL_Renderer*</text><ellipse cx="2768" cy="272.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="64" x="2777" y="277.2861">Clean() : bool</text><ellipse cx="2768" cy="286.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="50" x="2777" y="291.1221">Init() : bool</text><ellipse cx="2768" cy="300.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="2777" y="304.958">IsRunning() : bool</text><ellipse cx="2768" cy="314.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="2777" y="318.7939">getPlayAgain() : bool</text><ellipse cx="2768" cy="328.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="2777" y="332.6299">getWhoWins() : bool</text><ellipse cx="2768" cy="342.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="2777" y="346.4658">GetBombItemList() : std::vector&lt;BombCollectable&gt;*</text><ellipse cx="2768" cy="355.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="2777" y="360.3018">GetBombPlantedList() : std::vector&lt;BombPlanted&gt;*</text><ellipse cx="2768" cy="369.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="136" x="2777" y="374.1377">BombPlayer(int m_pid) : void</text><ellipse cx="2768" cy="383.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="138" x="2777" y="387.9736">CollectBomb(int m_pid) : void</text><ellipse cx="2768" cy="397.3906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="70" x="2777" y="401.8096">Events() : void</text><ellipse cx="2768" cy="411.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="2777" y="415.6455">PlantBomb(int m_pid) : void</text><ellipse cx="2768" cy="425.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="56" x="2777" y="429.4814">Quit() : void</text><ellipse cx="2768" cy="438.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="72" x="2777" y="443.3174">Render() : void</text><ellipse cx="2768" cy="452.7344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="91" x="2777" y="457.1533">SpawnItem() : void</text><ellipse cx="2768" cy="466.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="71" x="2777" y="470.9893">Update() : void</text><!--MD5=[dca5add05f152826089ba23671ae244c]
class utils.Board--><rect codeLine="249" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="214.0313" id="utils.Board" style="stroke:#A80036;stroke-width:1.5;" width="391" x="32.5" y="152.5"/><ellipse cx="207.25" cy="168.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M209.25,165 Q209.4531,164.5 209.6875,164.25 Q209.9219,164 210.1875,164 Q210.6563,164 210.9531,164.2813 Q211.25,164.5625 211.25,165.2188 L211.25,166.7813 Q211.25,167.4375 210.9688,167.7188 Q210.6875,168 210.25,168 Q209.8594,168 209.6094,167.8281 Q209.3594,167.6563 209.25,167.2031 Q209.2031,166.8906 209.0313,166.7188 Q208.7188,166.3906 208.1563,166.2031 Q207.5938,166 207.0313,166 Q206.3281,166 205.7344,166.2813 Q205.1563,166.5625 204.7031,167.1875 Q204.25,167.8125 204.25,168.6719 L204.25,169.5938 Q204.25,170.625 205.0938,171.3125 Q205.9375,172 207.4375,172 Q208.3281,172 208.9531,171.7969 Q209.3125,171.6875 209.7188,171.3281 Q209.9844,171.125 210.125,171.0625 Q210.2656,171 210.4375,171 Q210.7656,171 211,171.2656 Q211.25,171.5156 211.25,171.875 Q211.25,172.2188 210.9063,172.625 Q210.4063,173.2188 209.6094,173.5469 Q208.5625,174 207.2813,174 Q205.7813,174 204.5781,173.4063 Q203.6094,172.9375 202.9219,171.9219 Q202.25,170.9063 202.25,169.7031 L202.25,168.6094 Q202.25,167.3594 202.8438,166.2656 Q203.4531,165.1719 204.5,164.5938 Q205.5625,164 206.75,164 Q207.4688,164 208.0938,164.25 Q208.7188,164.5 209.25,165 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="33" x="227.75" y="173.4102">Board</text><line style="stroke:#A80036;stroke-width:1.5;" x1="33.5" x2="422.5" y1="184.5" y2="184.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="40.5" y="192.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="52.5" y="199.9189">m_board : int</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="40.5" y="206.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="124" x="52.5" y="213.7549">s_Instance : static Board*</text><line style="stroke:#A80036;stroke-width:1.5;" x1="33.5" x2="422.5" y1="220.1719" y2="220.1719"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="40.5" y="228.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="37" x="52.5" y="235.5908">Board()</text><ellipse cx="43.5" cy="245.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="108" x="52.5" y="249.4268">GetInstance() : Board*</text><ellipse cx="43.5" cy="258.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="52.5" y="263.2627">canPlayerMove(int m_pid, int prevX, int prevY, int newX, int newY) : bool</text><ellipse cx="43.5" cy="272.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="52.5" y="277.0986">canPlayerPlant(int m_pid, int prevX, int prevY) : bool</text><ellipse cx="43.5" cy="286.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="52.5" y="290.9346">consoleBoard() : bool</text><ellipse cx="43.5" cy="300.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="79" x="52.5" y="304.7705">initBoard() : bool</text><ellipse cx="43.5" cy="314.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="365" x="52.5" y="318.6064">updateBoardMove(int m_pid, int prevX, int prevY, int newX, int newY) : bool</text><ellipse cx="43.5" cy="328.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="52.5" y="332.4424">updateBoardPlant(int m_pid, int prevX, int prevY) : bool</text><ellipse cx="43.5" cy="341.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="52.5" y="346.2783">getTileID(int x, int y) : int</text><ellipse cx="43.5" cy="355.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="52.5" y="360.1143">updateBoardWithItem(int x, int y, int iid) : void</text><!--MD5=[629c6d17119cecbb56307adb03ce148e]
class utils.IOHandler--><rect codeLine="314" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="172.5234" id="utils.IOHandler" style="stroke:#A80036;stroke-width:1.5;" width="222" x="624" y="173"/><ellipse cx="702.75" cy="189" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M704.75,185.5 Q704.9531,185 705.1875,184.75 Q705.4219,184.5 705.6875,184.5 Q706.1563,184.5 706.4531,184.7813 Q706.75,185.0625 706.75,185.7188 L706.75,187.2813 Q706.75,187.9375 706.4688,188.2188 Q706.1875,188.5 705.75,188.5 Q705.3594,188.5 705.1094,188.3281 Q704.8594,188.1563 704.75,187.7031 Q704.7031,187.3906 704.5313,187.2188 Q704.2188,186.8906 703.6563,186.7031 Q703.0938,186.5 702.5313,186.5 Q701.8281,186.5 701.2344,186.7813 Q700.6563,187.0625 700.2031,187.6875 Q699.75,188.3125 699.75,189.1719 L699.75,190.0938 Q699.75,191.125 700.5938,191.8125 Q701.4375,192.5 702.9375,192.5 Q703.8281,192.5 704.4531,192.2969 Q704.8125,192.1875 705.2188,191.8281 Q705.4844,191.625 705.625,191.5625 Q705.7656,191.5 705.9375,191.5 Q706.2656,191.5 706.5,191.7656 Q706.75,192.0156 706.75,192.375 Q706.75,192.7188 706.4063,193.125 Q705.9063,193.7188 705.1094,194.0469 Q704.0625,194.5 702.7813,194.5 Q701.2813,194.5 700.0781,193.9063 Q699.1094,193.4375 698.4219,192.4219 Q697.75,191.4063 697.75,190.2031 L697.75,189.1094 Q697.75,187.8594 698.3438,186.7656 Q698.9531,185.6719 700,185.0938 Q701.0625,184.5 702.25,184.5 Q702.9688,184.5 703.5938,184.75 Q704.2188,185 704.75,185.5 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="56" x="723.25" y="193.9102">IOHandler</text><line style="stroke:#A80036;stroke-width:1.5;" x1="625" x2="845" y1="205" y2="205"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="632" y="213"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="644" y="220.4189">m_KeyStates : const Uint8*</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="632" y="226.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="142" x="644" y="234.2549">s_Instance : static IOHandler*</text><line style="stroke:#A80036;stroke-width:1.5;" x1="625" x2="845" y1="240.6719" y2="240.6719"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="632" y="248.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="55" x="644" y="256.0908">IOHandler()</text><ellipse cx="635" cy="265.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="126" x="644" y="269.9268">GetInstance() : IOHandler*</text><ellipse cx="635" cy="279.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="644" y="283.7627">KeyPressed(SDL_Scancode key) : bool</text><ellipse cx="635" cy="293.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="644" y="297.5986">KeyReleased(SDL_Scancode key) : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="632" y="304.0156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="644" y="311.4346">KeyDown() : void</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="632" y="317.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="69" x="644" y="325.2705">KeyUp() : void</text><ellipse cx="635" cy="334.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="644" y="339.1064">Listen() : void</text><!--MD5=[c94bf9e2a94e1f74890cbcf91aab3a62]
class utils.IOObject--><rect codeLine="327" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="89.5078" id="utils.IOObject" style="stroke:#A80036;stroke-width:1.5;" width="130" x="459" y="214.5"/><ellipse cx="496.05" cy="230.5" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M497.8,232 L494.5031,232 L494.0656,233 L494.0656,233 L494.5344,233 L495.05,233.625 L495.05,234 L495.05,234.375 L494.5344,235 L494.0656,235 L492.175,235 L491.5656,235 L491.05,234.375 L491.05,234 L491.05,233.625 L491.5656,233 L492.175,233 L494.4875,227 L493.6125,227 L492.5656,227 L492.05,226.375 L492.05,226 L492.05,225.625 L492.5656,225 L493.6125,225 L497.2844,225 L499.9719,233 L500.5344,233 L500.5344,233 L501.05,233.625 L501.05,234 L501.05,234.375 L500.5344,235 L499.9719,235 L498.0813,235 L497.5656,235 L497.05,234.375 L497.05,234 L497.05,233.625 L497.5656,233 L498.0813,233 L498.0813,233 L497.8,232 Z M497.2531,230 L496.05,226.4219 L495.0188,230 L497.2531,230 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="49" x="514.95" y="235.4102">IOObject</text><line style="stroke:#A80036;stroke-width:1.5;" x1="460" x2="588" y1="246.5" y2="246.5"/><line style="stroke:#A80036;stroke-width:1.5;" x1="460" x2="588" y1="254.5" y2="254.5"/><ellipse cx="470" cy="265.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="66" x="479" y="269.9189">Clean() : void</text><ellipse cx="470" cy="279.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="62" x="479" y="283.7549">Draw() : void</text><ellipse cx="470" cy="293.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="104" x="479" y="297.5908">Update(float dt) : void</text><!--MD5=[e7d94b46357b5bc331758902d85e5c6c]
class utils.ItemTimer--><rect codeLine="333" fill="#FEFECE" filter="url(#f1qtde1bwp7gow)" height="200.1953" id="utils.ItemTimer" style="stroke:#A80036;stroke-width:1.5;" width="234" x="111" y="539.5"/><ellipse cx="195.75" cy="555.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M197.75,552 Q197.9531,551.5 198.1875,551.25 Q198.4219,551 198.6875,551 Q199.1563,551 199.4531,551.2813 Q199.75,551.5625 199.75,552.2188 L199.75,553.7813 Q199.75,554.4375 199.4688,554.7188 Q199.1875,555 198.75,555 Q198.3594,555 198.1094,554.8281 Q197.8594,554.6563 197.75,554.2031 Q197.7031,553.8906 197.5313,553.7188 Q197.2188,553.3906 196.6563,553.2031 Q196.0938,553 195.5313,553 Q194.8281,553 194.2344,553.2813 Q193.6563,553.5625 193.2031,554.1875 Q192.75,554.8125 192.75,555.6719 L192.75,556.5938 Q192.75,557.625 193.5938,558.3125 Q194.4375,559 195.9375,559 Q196.8281,559 197.4531,558.7969 Q197.8125,558.6875 198.2188,558.3281 Q198.4844,558.125 198.625,558.0625 Q198.7656,558 198.9375,558 Q199.2656,558 199.5,558.2656 Q199.75,558.5156 199.75,558.875 Q199.75,559.2188 199.4063,559.625 Q198.9063,560.2188 198.1094,560.5469 Q197.0625,561 195.7813,561 Q194.2813,561 193.0781,560.4063 Q192.1094,559.9375 191.4219,558.9219 Q190.75,557.9063 190.75,556.7031 L190.75,555.6094 Q190.75,554.3594 191.3438,553.2656 Q191.9531,552.1719 193,551.5938 Q194.0625,551 195.25,551 Q195.9688,551 196.5938,551.25 Q197.2188,551.5 197.75,552 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="56" x="216.25" y="560.4102">ItemTimer</text><line style="stroke:#A80036;stroke-width:1.5;" x1="112" x2="344" y1="571.5" y2="571.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="119" y="579.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="131" y="586.9189">m_ReadyToSpawn : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="119" y="593.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="123" x="131" y="600.7549">m_TimerHasStarted : bool</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="119" y="607.1719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="131" y="614.5908">m_timerThread : std::thread</text><line style="stroke:#A80036;stroke-width:1.5;" x1="112" x2="344" y1="621.0078" y2="621.0078"/><ellipse cx="122" cy="632.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="53" x="131" y="636.4268">ItemTimer()</text><ellipse cx="122" cy="645.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="131" y="650.2627">getReadyToSpawn() : bool</text><ellipse cx="122" cy="659.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="131" y="664.0986">getTimerHasStarted() : bool</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="119" y="670.5156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="208" x="131" y="677.9346">intRand(const int&amp; min, const int&amp; max) : int</text><ellipse cx="122" cy="687.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="131" y="691.7705">setReadyToSpawn(bool val) : void</text><ellipse cx="122" cy="701.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="131" y="705.6064">setTimerHasStarted(bool val) : void</text><ellipse cx="122" cy="715.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="85" x="131" y="719.4424">startTimer() : void</text><ellipse cx="122" cy="728.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="84" x="131" y="733.2783">stopTimer() : void</text><!--MD5=[10f778e5ada94756d417f03c09e3f7bc]
reverse link entities.creatures.Creature to entities.creatures.Player--><path codeLine="349" d="M1449,980.83 C1449,993.29 1449,1006.56 1449,1020.32 " fill="none" id="entities.creatures.Creature-backto-entities.creatures.Player" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1442,980.67,1449,960.67,1456,980.67,1442,980.67" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[a835d6e75637d0a35a79f17d88e81d24]
reverse link entities.Entity to entities.creatures.Creature--><path codeLine="352" d="M1449,746.17 C1449,769.44 1449,793.56 1449,815.13 " fill="none" id="entities.Entity-backto-entities.creatures.Creature" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1442,746.02,1449,726.02,1456,746.02,1442,746.02" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[04317c9b876fc3e4a5c0fa61d8f86068]
reverse link entities.Entity to entities.items.Item--><path codeLine="355" d="M1384.37,741.07 C1375.42,749.74 1365.62,757.49 1355,763.5 C1327.37,779.15 1314.39,762.29 1284,771.5 C1229.14,788.12 1171.77,817.97 1128.83,843.17 " fill="none" id="entities.Entity-backto-entities.items.Item" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1379.41,736.12,1398.17,726.26,1389.66,745.66,1379.41,736.12" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[16d80ee4e8157af449c78820c72f45ec]
reverse link utils.IOObject to entities.Entity--><path codeLine="358" d="M526.67,324.98 C532.84,381.63 551.6,461.06 607,501 C623.86,513.15 1336.54,499.46 1355,509 C1374.5,519.07 1390.92,535.26 1404.29,552.83 " fill="none" id="utils.IOObject-backto-entities.Entity" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="519.69,325.42,524.9,304.89,533.63,324.19,519.69,325.42" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[099af974e4d8c4930944301d06aadd20]
reverse link entities.items.Item to entities.items.BombCollectable--><path codeLine="361" d="M975.52,950.28 C949.76,971.04 922.37,995.37 900,1020.5 C849.23,1077.54 803.01,1150.74 770.84,1206.84 " fill="none" id="entities.items.Item-backto-entities.items.BombCollectable" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="971.25,944.74,991.29,937.84,979.92,955.73,971.25,944.74" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[6684e57e27f659cc4f7d8353e9c665cd]
reverse link entities.items.Item to entities.items.BombPlanted--><path codeLine="364" d="M1060,974.12 C1060,1031.74 1060,1108.68 1060,1172.5 " fill="none" id="entities.items.Item-backto-entities.items.BombPlanted" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1053,973.83,1060,953.83,1067,973.83,1053,973.83" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[17096a5022e9768a8096a03d462e8eef]
reverse link world.Layer to world.TileLayer--><path codeLine="367" d="M2427,946.63 C2427,1014.71 2427,1128.61 2427,1206.99 " fill="none" id="world.Layer-backto-world.TileLayer" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="2420,946.24,2427,926.24,2434,946.24,2420,946.24" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[8d2db7110221b90f4d8ef6a899383274]
reverse link entities.items.BombCollectable to gfx.TextureManager--><path codeLine="372" d="M556.31,1367.52 C463.01,1417.75 355.43,1494.31 302,1598.5 C251.81,1696.38 238.55,1756.15 302,1846 C357.15,1924.09 448.53,1969.15 539.25,1995.09 " fill="none" id="entities.items.BombCollectable-backto-gfx.TextureManager" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="567.9,1361.37,560.7248,1360.6516,557.3019,1366.9986,564.4772,1367.717,567.9,1361.37" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[7b43d8d9c5e321060e85453c7686acf2]
reverse link entities.items.BombPlanted to gfx.Animation--><path codeLine="375" d="M1060,1427.71 C1060,1496.55 1060,1579.12 1060,1642.28 " fill="none" id="entities.items.BombPlanted-backto-gfx.Animation" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="1060,1414.58,1056,1420.58,1060,1426.58,1064,1420.58,1060,1414.58" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[1033a3e59b607c4d0988c914c9ff53e9]
reverse link gfx.DrawManager to gfx.Vector2D--><path codeLine="378" d="M1489,1842.52 C1489,1882.96 1489,1928.6 1489,1964.67 " fill="none" id="gfx.DrawManager-backto-gfx.Vector2D" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="1489,1829.31,1485,1835.31,1489,1841.31,1493,1835.31,1489,1829.31" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[06c8f4031f32bc58dc0f9b17d595e51a]
reverse link entities.Entity to gfx.Transform--><path codeLine="381" d="M1536.46,689.42 C1566.15,710.64 1596.28,738.31 1614,771.5 C1774.58,1072.19 1731.12,1501.39 1705.49,1669.79 " fill="none" id="entities.Entity-backto-gfx.Transform" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="1525.56,681.89,1528.2154,688.5944,1535.4254,688.7219,1532.77,682.0175,1525.56,681.89" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[e6c69a633ed1049a0e7609d1d310e69c]
reverse link states.Game to world.GameMap--><path codeLine="384" d="M2747.45,472.93 C2737.63,482.88 2727.47,492.32 2717,501 C2660.81,547.59 2586.19,582.5 2526.71,605.49 " fill="none" id="states.Game-backto-world.GameMap" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="2756.75,463.24,2749.709,464.7969,2748.438,471.8951,2755.479,470.3382,2756.75,463.24" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[46ac167ed1ddf2cf564eff04ea1b5b2a]
reverse link world.GameMap to world.Layer--><path codeLine="387" d="M2427,711.31 C2427,756.52 2427,813.29 2427,849.85 " fill="none" id="world.GameMap-backto-world.Layer" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="2427,698.29,2423,704.29,2427,710.29,2431,704.29,2427,698.29" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[93f83c5ab99c1d2280c924b910bccc7b]
reverse link world.MapParser to world.GameMap--><path codeLine="390" d="M2409.71,366.15 C2414.12,435.62 2419.72,523.87 2423.33,580.76 " fill="none" id="world.MapParser-backto-world.GameMap" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="2408.87,352.97,2405.2602,359.2125,2409.6341,364.9456,2413.2439,358.7031,2408.87,352.97" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[a7cc82530030d4968bd2040d06b31cef]
reverse link entities.creatures.Player to gfx.Animation--><path codeLine="393" d="M1291.59,1505.24 C1267.95,1534.46 1243.33,1563.64 1219,1590.5 C1203.41,1607.71 1186.23,1625.3 1169.09,1642.1 " fill="none" id="entities.creatures.Player-backto-gfx.Animation" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="1299.91,1494.9,1293.0331,1497.0699,1292.3912,1504.2524,1299.268,1502.0825,1299.91,1494.9" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[dbbe94031ce551aebe6dc52ae1f57bf7]
reverse link entities.creatures.Player to gfx.DrawManager--><path codeLine="396" d="M1474.53,1579.83 C1476.98,1607.15 1479.3,1633.13 1481.35,1655.96 " fill="none" id="entities.creatures.Player-backto-gfx.DrawManager" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="1473.36,1566.76,1469.9102,1573.0924,1474.4286,1578.7123,1477.8784,1572.38,1473.36,1566.76" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[992167aa91069c83fccfdba82f6392d8]
reverse link gfx.Animation to gfx.TextureManager--><path codeLine="399" d="M967.93,1852.76 C954.23,1869.02 940,1885.9 926.03,1902.49 " fill="none" id="gfx.Animation-backto-gfx.TextureManager" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#FFFFFF" points="976.39,1842.73,969.4657,1844.7435,968.6612,1851.9096,975.5855,1849.8961,976.39,1842.73" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[23cd05996af9d076982a26ce4bae3957]
reverse link world.TileLayer to world.Tileset--><path codeLine="402" d="M2427,1393.39 C2427,1474.52 2427,1587.84 2427,1662.87 " fill="none" id="world.TileLayer-backto-world.Tileset" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="2427,1380.16,2423,1386.16,2427,1392.16,2431,1386.16,2427,1380.16" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[be58c174d7b68f8674e95bf4b668ff4a]
link utils.Board to utils.IOHandler--><!--MD5=[7b2be74666691fb96aa7abc4b31b18f8]
link utils.Board to utils.ItemTimer--><!--MD5=[f8015a9def9a6bf482c7bc629067bfb5]
@startuml
/' Objects '/
abstract class entities.Entity {
	+Entity(Properties* props)
	#m_Flip : SDL_RendererFlip
	#m_Transform : Transform*
	#m_Height : int
	#m_Width : int
	#m_TextureID : std::string
	+{abstract} Clean() : void
	+{abstract} Draw() : void
	+{abstract} Update(float dt) : void
}

abstract class entities.items.Item {
	+Item(Properties* props)
	+getItemX() : int
	+getItemY() : int
	+{abstract} Clean() : void
	+{abstract} Draw() : void
	+{abstract} Update(float dt) : void
}

class entities.items.BombCollectable {
	+BombCollectable(Properties* props)
	-m_BombItemTextureM : TextureManager*
	-m_ItemBombID : int
	-m_NumBombsSpawned : int
	-s_BombsSpawnedList : std::vector<BombCollectable>
	+getListOfSpawnedBombs() : std::vector<BombCollectable>*
	+Clean() : void
	+Draw() : void
	+Update(float dt) : void
}


class entities.items.BombPlanted {
	+BombPlanted(Properties* props)
	-m_BombAnimation : Animation*
	-m_PlantedBombTexture : SDL_Texture*
	+m_countDown : bool
	+m_isBombPlanted : bool
	+m_start : long
	+{static} s_bombID : static int
	+GetBombPlantedTextureName() : std::string
	-textureName : std::string
	-s_PlantedBombList : std::vector<BombPlanted>
	+getListOfPlantedBombs() : std::vector<BombPlanted>*
	+Clean() : void
	+Draw() : void
	+Update(float dt) : void
}


abstract class entities.creatures.Creature {
	+Creature(Properties* props)
	#m_Health : int
	#m_Speed : int
	#m_Name : std::string
	+{abstract} Clean() : void
	+{abstract} Draw() : void
	+{abstract} Update(float dt) : void
}

class entities.creatures.Player {
	+Player(Properties* props)
	-m_Animation : Animation*
	-m_DrawManager : DrawManager*
	-m_bombPlaced : bool
	-m_getBombed : bool
	-m_putBomb : bool
	+GetBomb() : int
	+GetBombCol() : int
	+GetHealth() : int
	-m_Health : int
	-m_Speed : int
	-m_bombCollectable : int
	-m_bombHeld : int
	-m_bombx : int
	-m_bomby : int
	-m_pid : int
	-newX : int
	-newY : int
	+{static} s_AlrPressedP1 : static bool
	+{static} s_AlrPressedP2 : static bool
	+{static} s_countdown : static bool
	+{static} s_PlayerCount : static int
	+{static} s_p1facing : static int
	+{static} s_p2facing : static int
	+{static} s_start : static long
	+Clean() : void
	+Draw() : void
	+GetInput() : void
	+Update(float dt) : void
	+bombCountdown() : void
	+collectBomb() : void
	+getBombedAnimation() : void
	+getCurrentAnimation() : void
	+placeBombCountdown(BombPlanted bombPlanted) : void
	+plantBomb() : void
	+takeDamage() : void
}

class gfx.Animation {
	+Animation()
	-m_Flip : SDL_RendererFlip
	-m_AnimSpeed : int
	-m_FrameCount : int
	-m_SpriteCol : int
	-m_SpriteFrame : int
	-m_SpriteRow : int
	-m_TextureID : std::string
	+Draw(float x, float y, int spriteWidth, int spriteHeight) : void
	+SetProperties(std::string textureID, int spriteRow, int spriteCol, int frameCount, int animSpeed, SDL_RendererFlip flip) : void
	+Update() : void
}


class gfx.DrawManager {
	+DrawManager()
	+GetPosition() : Vector2D
	-m_Force : Vector2D
	-m_Position : Vector2D
	+ApplyForce(Vector2D F) : void
	+ApplyForceX(int Fx) : void
	+ApplyForceY(int Fy) : void
	+UnsetForce() : void
	+Update() : void
}

abstract class world.Layer {
	+{abstract} Render() : void
	+{abstract} Update() : void
}


class world.MapParser {
	-MapParser()
	+GetMap(std::string id) : GameMap*
	+{static} GetInstance() : MapParser*
	-ParseTileLayer(TiXmlElement* xmlLayer, std::vector<Tileset> tilesets, int tilesize, int rowcount, int colcount) : TileLayer*
	-ParseTileset(TiXmlElement* xmlTileset) : Tileset
	+Load() : bool
	-Parse(std::string id, std::string source) : bool
	-{static} s_Instance : static MapParser*
	-m_MapDict : std::map<std::string, GameMap*>
	+Clean() : void
}


class states.Menu {
	-Menu()
	+{static} GetInstance() : Menu*
	+GetRenderer() : SDL_Renderer*
	-m_Renderer : SDL_Renderer*
	-m_Window : SDL_Window*
	+Clean() : bool
	+Init() : bool
	+IsRunning() : bool
	-m_IsRunning : bool
	-{static} s_Instance : static Menu*
	+{static} s_AlrPressedSpace : static bool
	+Events() : void
	+Quit() : void
	+Render() : void
}

class gfx.TextureManager {
	-TextureManager()
	+GetTexture(std::string id) : SDL_Texture*
	+GetFont(std::string) : TTF_Font*
	+{static} GetInstance() : TextureManager*
	+Load(std::string id, std::string filename) : bool
	-{static} s_Instance : static TextureManager*
	-m_TextureMap : std::map<std::string, SDL_Texture*>
	-fonts : std::map<std::string, TTF_Font*>
	+AddFont(std::string, std::string, int) : void
	+Clean() : void
	+Draw(std::string id, int x, int y, int width, int height, int row, int col, SDL_RendererFlip flip) : void
	+DrawFrame(std::string id, int x, int y, int width, int height, int row, int col, int frame, SDL_RendererFlip flip) : void
	+DrawIcon(std::string id, int x, int y, int width, int height, int row, int col, SDL_RendererFlip flip) : void
	+DrawTile(std::string tilesetID, int tileSize, int x, int y, int row, int frame, SDL_RendererFlip flip) : void
	+Drop(std::string id) : void
}


class gfx.Transform {
	+Transform(int x, int y)
	+X : int
	+Y : int
	+Log(std::string msg) : void
	+Translate(Vector2D v) : void
	+TranslateX(int x) : void
	+TranslateY(int y) : void
}


class gfx.Vector2D {
	+Vector2D(int x, int y)
	+operator+(const Vector2D& v2) : Vector2D {query}
	+operator-(const Vector2D& v2) : Vector2D {query}
	+X : int
	+Y : int
	+Log(std::string msg) : void
}

class entities.Properties {
	+Properties(std::string textureID, int x, int y, int width, int height, SDL_RendererFlip flip)
	+Flip : SDL_RendererFlip
	+Height : int
	+PrevX : int
	+PrevY : int
	+Width : int
	+X : int
	+Y : int
	+TextureID : std::string
}

class states.Game {
	-Game()
	+{static} GetInstance() : Game*
	+GetMap() : GameMap*
	-m_LevelMap : GameMap*
	+GetRenderer() : SDL_Renderer*
	-m_Renderer : SDL_Renderer*
	-m_Window : SDL_Window*
	+Clean() : bool
	+Init() : bool
	+IsRunning() : bool
	+getPlayAgain() : bool
	+getWhoWins() : bool
	-m_IsRunning : bool
	-{static} s_Instance : static Game*
	+{static} gameOver : static bool
	+{static} playAgain : static bool
	+{static} s_AlrPressedSpace : static bool
	+{static} whoWins : static bool
	+GetBombItemList() : std::vector<BombCollectable>*
	+GetBombPlantedList() : std::vector<BombPlanted>*
	+BombPlayer(int m_pid) : void
	+CollectBomb(int m_pid) : void
	+Events() : void
	+PlantBomb(int m_pid) : void
	+Quit() : void
	+Render() : void
	+SpawnItem() : void
	+Update() : void
}

class utils.Board {
	-Board()
	+{static} GetInstance() : Board*
	+canPlayerMove(int m_pid, int prevX, int prevY, int newX, int newY) : bool
	+canPlayerPlant(int m_pid, int prevX, int prevY) : bool
	+consoleBoard() : bool
	+initBoard() : bool
	+updateBoardMove(int m_pid, int prevX, int prevY, int newX, int newY) : bool
	+updateBoardPlant(int m_pid, int prevX, int prevY) : bool
	+getTileID(int x, int y) : int
	-m_board : int
	-{static} s_Instance : static Board*
	+updateBoardWithItem(int x, int y, int iid) : void
}


class world.GameMap {
	+GameMap()
	+GetLayers() : std::vector<Layer*>
	-m_MapLayers : std::vector<Layer*>
	+Render() : void
	+Update() : void
}

class gfx.UILabel {
	+UILabel(int xpos, int ypos, std::string text, std::string font, SDL_Color& colour)
	-textColour : SDL_Color
	-position : SDL_Rect
	-labelTexture : SDL_Texture*
	-labelFont : std::string
	-labelText : std::string
	+SetLabelText(std::string text, std::string font) : void
	+draw() : void
}

class world.Tile {
	-Tile()
	-{static} s_Instance : static Tile*
	-m_Tile : std::map<std::string, SDL_Texture*>
}


class world.TileLayer {
	+TileLayer(int tilesize, int width, int height, vector<std::vector<int>> tilemap, vector<Tileset> tilesets)
	+GetTileMap() : TileMap
	-m_ColCount : int
	-m_RowCount : int
	-m_TileSize : int
	-m_Tilesets : vector<Tileset>
	-m_Tilemap : vector<std::vector<int>>
	+Render() : void
	+Update() : void
}

class world.Tileset {
	+ColCount : int
	+FirstID : int
	+LastID : int
	+RowCount : int
	+TileCount : int
	+TileSize : int
	+Name : std::string
	+Source : std::string
}

class utils.IOHandler {
	-IOHandler()
	+{static} GetInstance() : IOHandler*
	+KeyPressed(SDL_Scancode key) : bool
	+KeyReleased(SDL_Scancode key) : bool
	-m_KeyStates : const Uint8*
	-{static} s_Instance : static IOHandler*
	-KeyDown() : void
	-KeyUp() : void
	+Listen() : void
}


abstract class utils.IOObject {
	+{abstract} Clean() : void
	+{abstract} Draw() : void
	+{abstract} Update(float dt) : void
}

class utils.ItemTimer {
	+ItemTimer()
	+getReadyToSpawn() : bool
	+getTimerHasStarted() : bool
	-m_ReadyToSpawn : bool
	-m_TimerHasStarted : bool
	-intRand(const int& min, const int& max) : int
	-m_timerThread : std::thread
	+setReadyToSpawn(bool val) : void
	+setTimerHasStarted(bool val) : void
	+startTimer() : void
	+stopTimer() : void
}

/' Inheritance relationships '/

.entities.creatures.Creature <|- - .entities.creatures.Player


.entities.Entity <|- - .entities.creatures.Creature


.entities.Entity <|- - .entities.items.Item


.utils.IOObject <|- - .entities.Entity


.entities.items.Item <|- - .entities.items.BombCollectable


.entities.items.Item <|- - .entities.items.BombPlanted


.world.Layer <|- - .world.TileLayer

/' Aggregation relationships '/


.entities.items.BombCollectable o- - .gfx.TextureManager


.entities.items.BombPlanted o- - .gfx.Animation


.gfx.DrawManager o- - .gfx.Vector2D


.entities.Entity o- - .gfx.Transform


.states.Game o- - .world.GameMap


.world.GameMap o- - .world.Layer


.world.MapParser o- - .world.GameMap


.entities.creatures.Player o- - .gfx.Animation


.entities.creatures.Player o- - .gfx.DrawManager


.gfx.Animation o- - .gfx.TextureManager


.world.TileLayer *- - .world.Tileset


/' Nested objects '/


@enduml

@startuml
abstract class entities.Entity {
	+Entity(Properties* props)
	#m_Flip : SDL_RendererFlip
	#m_Transform : Transform*
	#m_Height : int
	#m_Width : int
	#m_TextureID : std::string
	+{abstract} Clean() : void
	+{abstract} Draw() : void
	+{abstract} Update(float dt) : void
}

abstract class entities.items.Item {
	+Item(Properties* props)
	+getItemX() : int
	+getItemY() : int
	+{abstract} Clean() : void
	+{abstract} Draw() : void
	+{abstract} Update(float dt) : void
}

class entities.items.BombCollectable {
	+BombCollectable(Properties* props)
	-m_BombItemTextureM : TextureManager*
	-m_ItemBombID : int
	-m_NumBombsSpawned : int
	-s_BombsSpawnedList : std::vector<BombCollectable>
	+getListOfSpawnedBombs() : std::vector<BombCollectable>*
	+Clean() : void
	+Draw() : void
	+Update(float dt) : void
}


class entities.items.BombPlanted {
	+BombPlanted(Properties* props)
	-m_BombAnimation : Animation*
	-m_PlantedBombTexture : SDL_Texture*
	+m_countDown : bool
	+m_isBombPlanted : bool
	+m_start : long
	+{static} s_bombID : static int
	+GetBombPlantedTextureName() : std::string
	-textureName : std::string
	-s_PlantedBombList : std::vector<BombPlanted>
	+getListOfPlantedBombs() : std::vector<BombPlanted>*
	+Clean() : void
	+Draw() : void
	+Update(float dt) : void
}


abstract class entities.creatures.Creature {
	+Creature(Properties* props)
	#m_Health : int
	#m_Speed : int
	#m_Name : std::string
	+{abstract} Clean() : void
	+{abstract} Draw() : void
	+{abstract} Update(float dt) : void
}

class entities.creatures.Player {
	+Player(Properties* props)
	-m_Animation : Animation*
	-m_DrawManager : DrawManager*
	-m_bombPlaced : bool
	-m_getBombed : bool
	-m_putBomb : bool
	+GetBomb() : int
	+GetBombCol() : int
	+GetHealth() : int
	-m_Health : int
	-m_Speed : int
	-m_bombCollectable : int
	-m_bombHeld : int
	-m_bombx : int
	-m_bomby : int
	-m_pid : int
	-newX : int
	-newY : int
	+{static} s_AlrPressedP1 : static bool
	+{static} s_AlrPressedP2 : static bool
	+{static} s_countdown : static bool
	+{static} s_PlayerCount : static int
	+{static} s_p1facing : static int
	+{static} s_p2facing : static int
	+{static} s_start : static long
	+Clean() : void
	+Draw() : void
	+GetInput() : void
	+Update(float dt) : void
	+bombCountdown() : void
	+collectBomb() : void
	+getBombedAnimation() : void
	+getCurrentAnimation() : void
	+placeBombCountdown(BombPlanted bombPlanted) : void
	+plantBomb() : void
	+takeDamage() : void
}

class gfx.Animation {
	+Animation()
	-m_Flip : SDL_RendererFlip
	-m_AnimSpeed : int
	-m_FrameCount : int
	-m_SpriteCol : int
	-m_SpriteFrame : int
	-m_SpriteRow : int
	-m_TextureID : std::string
	+Draw(float x, float y, int spriteWidth, int spriteHeight) : void
	+SetProperties(std::string textureID, int spriteRow, int spriteCol, int frameCount, int animSpeed, SDL_RendererFlip flip) : void
	+Update() : void
}


class gfx.DrawManager {
	+DrawManager()
	+GetPosition() : Vector2D
	-m_Force : Vector2D
	-m_Position : Vector2D
	+ApplyForce(Vector2D F) : void
	+ApplyForceX(int Fx) : void
	+ApplyForceY(int Fy) : void
	+UnsetForce() : void
	+Update() : void
}

abstract class world.Layer {
	+{abstract} Render() : void
	+{abstract} Update() : void
}


class world.MapParser {
	-MapParser()
	+GetMap(std::string id) : GameMap*
	+{static} GetInstance() : MapParser*
	-ParseTileLayer(TiXmlElement* xmlLayer, std::vector<Tileset> tilesets, int tilesize, int rowcount, int colcount) : TileLayer*
	-ParseTileset(TiXmlElement* xmlTileset) : Tileset
	+Load() : bool
	-Parse(std::string id, std::string source) : bool
	-{static} s_Instance : static MapParser*
	-m_MapDict : std::map<std::string, GameMap*>
	+Clean() : void
}


class states.Menu {
	-Menu()
	+{static} GetInstance() : Menu*
	+GetRenderer() : SDL_Renderer*
	-m_Renderer : SDL_Renderer*
	-m_Window : SDL_Window*
	+Clean() : bool
	+Init() : bool
	+IsRunning() : bool
	-m_IsRunning : bool
	-{static} s_Instance : static Menu*
	+{static} s_AlrPressedSpace : static bool
	+Events() : void
	+Quit() : void
	+Render() : void
}

class gfx.TextureManager {
	-TextureManager()
	+GetTexture(std::string id) : SDL_Texture*
	+GetFont(std::string) : TTF_Font*
	+{static} GetInstance() : TextureManager*
	+Load(std::string id, std::string filename) : bool
	-{static} s_Instance : static TextureManager*
	-m_TextureMap : std::map<std::string, SDL_Texture*>
	-fonts : std::map<std::string, TTF_Font*>
	+AddFont(std::string, std::string, int) : void
	+Clean() : void
	+Draw(std::string id, int x, int y, int width, int height, int row, int col, SDL_RendererFlip flip) : void
	+DrawFrame(std::string id, int x, int y, int width, int height, int row, int col, int frame, SDL_RendererFlip flip) : void
	+DrawIcon(std::string id, int x, int y, int width, int height, int row, int col, SDL_RendererFlip flip) : void
	+DrawTile(std::string tilesetID, int tileSize, int x, int y, int row, int frame, SDL_RendererFlip flip) : void
	+Drop(std::string id) : void
}


class gfx.Transform {
	+Transform(int x, int y)
	+X : int
	+Y : int
	+Log(std::string msg) : void
	+Translate(Vector2D v) : void
	+TranslateX(int x) : void
	+TranslateY(int y) : void
}


class gfx.Vector2D {
	+Vector2D(int x, int y)
	+operator+(const Vector2D& v2) : Vector2D {query}
	+operator-(const Vector2D& v2) : Vector2D {query}
	+X : int
	+Y : int
	+Log(std::string msg) : void
}

class entities.Properties {
	+Properties(std::string textureID, int x, int y, int width, int height, SDL_RendererFlip flip)
	+Flip : SDL_RendererFlip
	+Height : int
	+PrevX : int
	+PrevY : int
	+Width : int
	+X : int
	+Y : int
	+TextureID : std::string
}

class states.Game {
	-Game()
	+{static} GetInstance() : Game*
	+GetMap() : GameMap*
	-m_LevelMap : GameMap*
	+GetRenderer() : SDL_Renderer*
	-m_Renderer : SDL_Renderer*
	-m_Window : SDL_Window*
	+Clean() : bool
	+Init() : bool
	+IsRunning() : bool
	+getPlayAgain() : bool
	+getWhoWins() : bool
	-m_IsRunning : bool
	-{static} s_Instance : static Game*
	+{static} gameOver : static bool
	+{static} playAgain : static bool
	+{static} s_AlrPressedSpace : static bool
	+{static} whoWins : static bool
	+GetBombItemList() : std::vector<BombCollectable>*
	+GetBombPlantedList() : std::vector<BombPlanted>*
	+BombPlayer(int m_pid) : void
	+CollectBomb(int m_pid) : void
	+Events() : void
	+PlantBomb(int m_pid) : void
	+Quit() : void
	+Render() : void
	+SpawnItem() : void
	+Update() : void
}

class utils.Board {
	-Board()
	+{static} GetInstance() : Board*
	+canPlayerMove(int m_pid, int prevX, int prevY, int newX, int newY) : bool
	+canPlayerPlant(int m_pid, int prevX, int prevY) : bool
	+consoleBoard() : bool
	+initBoard() : bool
	+updateBoardMove(int m_pid, int prevX, int prevY, int newX, int newY) : bool
	+updateBoardPlant(int m_pid, int prevX, int prevY) : bool
	+getTileID(int x, int y) : int
	-m_board : int
	-{static} s_Instance : static Board*
	+updateBoardWithItem(int x, int y, int iid) : void
}


class world.GameMap {
	+GameMap()
	+GetLayers() : std::vector<Layer*>
	-m_MapLayers : std::vector<Layer*>
	+Render() : void
	+Update() : void
}

class gfx.UILabel {
	+UILabel(int xpos, int ypos, std::string text, std::string font, SDL_Color& colour)
	-textColour : SDL_Color
	-position : SDL_Rect
	-labelTexture : SDL_Texture*
	-labelFont : std::string
	-labelText : std::string
	+SetLabelText(std::string text, std::string font) : void
	+draw() : void
}

class world.Tile {
	-Tile()
	-{static} s_Instance : static Tile*
	-m_Tile : std::map<std::string, SDL_Texture*>
}


class world.TileLayer {
	+TileLayer(int tilesize, int width, int height, vector<std::vector<int>> tilemap, vector<Tileset> tilesets)
	+GetTileMap() : TileMap
	-m_ColCount : int
	-m_RowCount : int
	-m_TileSize : int
	-m_Tilesets : vector<Tileset>
	-m_Tilemap : vector<std::vector<int>>
	+Render() : void
	+Update() : void
}

class world.Tileset {
	+ColCount : int
	+FirstID : int
	+LastID : int
	+RowCount : int
	+TileCount : int
	+TileSize : int
	+Name : std::string
	+Source : std::string
}

class utils.IOHandler {
	-IOHandler()
	+{static} GetInstance() : IOHandler*
	+KeyPressed(SDL_Scancode key) : bool
	+KeyReleased(SDL_Scancode key) : bool
	-m_KeyStates : const Uint8*
	-{static} s_Instance : static IOHandler*
	-KeyDown() : void
	-KeyUp() : void
	+Listen() : void
}


abstract class utils.IOObject {
	+{abstract} Clean() : void
	+{abstract} Draw() : void
	+{abstract} Update(float dt) : void
}

class utils.ItemTimer {
	+ItemTimer()
	+getReadyToSpawn() : bool
	+getTimerHasStarted() : bool
	-m_ReadyToSpawn : bool
	-m_TimerHasStarted : bool
	-intRand(const int& min, const int& max) : int
	-m_timerThread : std::thread
	+setReadyToSpawn(bool val) : void
	+setTimerHasStarted(bool val) : void
	+startTimer() : void
	+stopTimer() : void
}


.entities.creatures.Creature <|- - .entities.creatures.Player


.entities.Entity <|- - .entities.creatures.Creature


.entities.Entity <|- - .entities.items.Item


.utils.IOObject <|- - .entities.Entity


.entities.items.Item <|- - .entities.items.BombCollectable


.entities.items.Item <|- - .entities.items.BombPlanted


.world.Layer <|- - .world.TileLayer



.entities.items.BombCollectable o- - .gfx.TextureManager


.entities.items.BombPlanted o- - .gfx.Animation


.gfx.DrawManager o- - .gfx.Vector2D


.entities.Entity o- - .gfx.Transform


.states.Game o- - .world.GameMap


.world.GameMap o- - .world.Layer


.world.MapParser o- - .world.GameMap


.entities.creatures.Player o- - .gfx.Animation


.entities.creatures.Player o- - .gfx.DrawManager


.gfx.Animation o- - .gfx.TextureManager


.world.TileLayer *- - .world.Tileset




@enduml

PlantUML version 1.2021.01(Tue Feb 02 15:55:08 SGT 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: SG
--></g></svg>